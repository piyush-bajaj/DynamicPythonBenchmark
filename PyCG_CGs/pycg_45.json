{"tests.test_omdict1D": ["<builtin>.object"], "<builtin>.object": [], "tests.test_omdict1D.TestOmdict1D.setUp": [], "tests.test_omdict1D.TestOmdict1D.test_update_updateall": ["itertools.permutations", "six.iterkeys", "itertools.product", "orderedmultidict.omdict", "<builtin>.isinstance", "furl.omdict1D.omdict1D", "itertools.chain"], "orderedmultidict.omdict": [], "furl.omdict1D.omdict1D": [], "itertools.product": [], "itertools.chain": [], "itertools.permutations": [], "six.iterkeys": [], "<builtin>.isinstance": [], "tests.test_omdict1D.TestOmdict1D.test_add": ["furl.omdict1D.omdict1D"], "tests.test_omdict1D.TestOmdict1D.test_set": ["furl.omdict1D.omdict1D"], "tests.test_omdict1D.TestOmdict1D.test_setitem": ["six.moves.zip", "furl.omdict1D.omdict1D"], "six.moves.zip": [], "tests.test_furl": [], "tests.test_furl.itemcontainer": ["abc.abstractmethod"], "abc.abstractmethod": [], "tests.test_furl.itemcontainer.allitems": [], "tests.test_furl.itemcontainer.iterallitems": [], "tests.test_furl.itemcontainer.original": [], "tests.test_furl.itemlist.allitems": ["tests.test_furl.itemlist.iterallitems", "<builtin>.list"], "tests.test_furl.itemlist.iterallitems": ["<builtin>.iter"], "<builtin>.list": [], "<builtin>.iter": [], "tests.test_furl.itemlist.original": ["<builtin>.list"], "tests.test_furl.itemdict.allitems": ["<builtin>.list", "furl.compat.OrderedDict.items"], "furl.compat.OrderedDict.items": [], "tests.test_furl.itemdict.iterallitems": ["<builtin>.iter", "furl.compat.OrderedDict.items"], "tests.test_furl.itemdict.original": ["<builtin>.dict"], "<builtin>.dict": [], "tests.test_furl.itemomdict1D.original": ["furl.omdict1D.omdict1D"], "tests.test_furl.itemstr.allitems": ["six.moves.urllib.parse.parse_qsl", "six.moves.zip"], "six.moves.urllib.parse.parse_qsl": [], "tests.test_furl.itemstr.iterallitems": ["tests.test_furl.itemstr.allitems", "<builtin>.iter"], "tests.test_furl.itemstr.original": ["<builtin>.str"], "<builtin>.str": [], "tests.test_furl.TestPath.test_none": ["furl.Path", "<builtin>.str"], "furl.Path": [], "tests.test_furl.TestPath.test_isdir_isfile": ["furl.Path"], "tests.test_furl.TestPath.test_leading_slash": ["furl.Path", "<builtin>.str"], "tests.test_furl.TestPath.test_encoding": ["furl.Path", "furl.furl", "<builtin>.str", "six.moves.urllib.parse.quote"], "six.moves.urllib.parse.quote": [], "furl.furl": [], "tests.test_furl.TestPath.test_load": ["tests.test_furl.TestPath._test_set_load"], "tests.test_furl.TestPath._test_set_load": ["furl.Path.load", "furl.Path", "<builtin>.str", "furl.Path.set"], "tests.test_furl.TestPath.test_set": ["tests.test_furl.TestPath._test_set_load"], "furl.Path.load": [], "furl.Path.set": [], "tests.test_furl.TestPath.test_add": ["furl.furl", "<builtin>.str"], "tests.test_furl.TestPath.test_remove": ["furl.Path", "<builtin>.str"], "tests.test_furl.TestPath.test_isabsolute": ["unittest.TestCase.assertRaises", "furl.furl", "<builtin>.str"], "unittest.TestCase.assertRaises": [], "tests.test_furl.TestPath.test_normalize": ["furl.Path", "<builtin>.str"], "tests.test_furl.TestPath.test_equality": ["furl.Path", "furl.furl", "<builtin>.str"], "tests.test_furl.TestPath.test_nonzero": ["furl.Path"], "tests.test_furl.TestPath.test_unicode": ["furl.Path", "<builtin>.str"], "tests.test_furl.TestPath.test_itruediv": ["furl.Path", "<builtin>.str"], "tests.test_furl.TestPath.test_truediv": ["furl.Path", "<builtin>.str"], "tests.test_furl.TestPath.test_truediv.<lambda1>": [], "tests.test_furl.TestPath.test_asdict": ["furl.Path"], "tests.test_furl.TestQuery.setUp": ["<builtin>.map", "<builtin>.list"], "<builtin>.map": [], "tests.test_furl.TestQuery.test_none": ["furl.Query", "<builtin>.str"], "furl.Query": [], "tests.test_furl.TestQuery.test_various": ["furl.Query"], "tests.test_furl.TestQuery.test_load": ["furl.Query"], "tests.test_furl.TestQuery.test_add": ["furl.Query", "<builtin>.list"], "tests.test_furl.TestQuery.test_set": ["furl.Query", "furl.omdict1D.omdict1D"], "tests.test_furl.TestQuery.test_remove": ["<builtin>.dict", "<builtin>.len", "furl.Query", "furl.omdict1D.omdict1D", "<builtin>.list"], "<builtin>.len": [], "tests.test_furl.TestQuery.test_params": ["furl.Query", "<builtin>.isinstance", "six.moves.zip", "<builtin>.str"], "tests.test_furl.TestQuery.test_unicode": ["furl.Query", "<builtin>.str"], "tests.test_furl.TestQuery.test_equality": ["furl.Query", "furl.furl", "<builtin>.str"], "tests.test_furl.TestQuery.test_encode": ["furl.Query", "<builtin>.str"], "tests.test_furl.TestQuery.test_asdict": ["furl.Query"], "tests.test_furl.TestQuery.test_value_encoding_empty_vs_nonempty_key": ["furl.Query"], "tests.test_furl.TestQuery.test_special_characters": ["furl.Query", "furl.furl", "<builtin>.str"], "tests.test_furl.TestQuery._quote_items": ["six.moves.urllib.parse.quote_plus", "<builtin>.str"], "six.moves.urllib.parse.quote_plus": [], "tests.test_furl.TestQueryCompositionInterface.test_interface": ["tests.test_furl.TestQueryCompositionInterface.test_interface.tester.__init__", "<builtin>.isinstance", "<builtin>.str"], "tests.test_furl.TestQueryCompositionInterface.test_interface.tester.__init__": ["furl.QueryCompositionInterface.__init__"], "furl.QueryCompositionInterface.__init__": [], "tests.test_furl.TestQueryCompositionInterface.test_interface.tester.__setattr__": ["furl.QueryCompositionInterface.__setattr__"], "furl.QueryCompositionInterface.__setattr__": [], "tests.test_furl.TestFragment.test_basics": ["furl.Fragment", "<builtin>.str"], "furl.Fragment": [], "tests.test_furl.TestFragment.test_none": ["furl.Fragment", "<builtin>.str"], "tests.test_furl.TestFragment.test_load": ["furl.Fragment", "<builtin>.str"], "tests.test_furl.TestFragment.test_add": ["furl.Fragment", "<builtin>.str"], "tests.test_furl.TestFragment.test_set": ["furl.Fragment", "<builtin>.str"], "tests.test_furl.TestFragment.test_remove": ["furl.Fragment", "<builtin>.str"], "tests.test_furl.TestFragment.test_encoding": ["furl.furl", "furl.Fragment", "<builtin>.str"], "tests.test_furl.TestFragment.test_unicode": ["furl.furl", "<builtin>.str"], "tests.test_furl.TestFragment.test_equality": ["furl.furl", "furl.Fragment", "<builtin>.str"], "tests.test_furl.TestFragment.test_nonzero": ["furl.Fragment"], "tests.test_furl.TestFragment.test_asdict": ["furl.Query", "furl.Path", "furl.Fragment"], "tests.test_furl.TestFragmentCompositionInterface.test_interface": ["<builtin>.isinstance", "tests.test_furl.TestFragmentCompositionInterface.test_interface.tester.__init__", "<builtin>.str"], "tests.test_furl.TestFragmentCompositionInterface.test_interface.tester.__init__": ["furl.FragmentCompositionInterface.__init__"], "furl.FragmentCompositionInterface.__init__": [], "tests.test_furl.TestFragmentCompositionInterface.test_interface.tester.__setattr__": ["furl.FragmentCompositionInterface.__setattr__"], "furl.FragmentCompositionInterface.__setattr__": [], "tests.test_furl.TestFurl.setUp": ["warnings.simplefilter"], "warnings.simplefilter": [], "tests.test_furl.TestFurl._param": ["six.moves.urllib.parse.parse_qsl", "six.moves.urllib.parse.urlsplit"], "six.moves.urllib.parse.urlsplit": [], "tests.test_furl.TestFurl.test_constructor_and_set": ["furl.furl"], "tests.test_furl.TestFurl.test_none": ["furl.furl", "<builtin>.str"], "tests.test_furl.TestFurl.test_idna": ["furl.furl"], "tests.test_furl.TestFurl.test_unicode": ["furl.utf8", "furl.furl", "six.moves.urllib.parse.quote_plus"], "furl.utf8": [], "tests.test_furl.TestFurl.test_scheme": ["furl.furl", "<builtin>.str"], "tests.test_furl.TestFurl.test_username_and_password": ["six.moves.urllib.parse.quote", "furl.furl"], "tests.test_furl.TestFurl.test_basics": ["furl.furl", "<builtin>.str"], "tests.test_furl.TestFurl.test_basic_manipulation": ["furl.furl", "<builtin>.str"], "tests.test_furl.TestFurl.test_path_itruediv": ["furl.furl"], "tests.test_furl.TestFurl.test_path_truediv": ["furl.Path", "furl.furl"], "tests.test_furl.TestFurl.test_odd_urls": ["furl.furl", "<builtin>.str", "six.moves.urllib.parse.quote_plus"], "tests.test_furl.TestFurl.test_hosts": ["unittest.TestCase.assertRaises", "furl.furl"], "tests.test_furl.TestFurl.test_netloc": ["unittest.TestCase.assertRaises", "furl.furl"], "tests.test_furl.TestFurl.test_origin": ["unittest.TestCase.assertRaises", "furl.furl"], "tests.test_furl.TestFurl.test_ports": ["unittest.TestCase.assertRaises", "furl.furl"], "tests.test_furl.TestFurl.test_add": ["<builtin>.len", "warnings.catch_warnings", "tests.test_furl.TestFurl._param", "<builtin>.str", "six.moves.urllib.parse.urlsplit", "<builtin>.issubclass", "furl.furl"], "warnings.catch_warnings": [], "<builtin>.issubclass": [], "tests.test_furl.TestFurl.test_set": ["unittest.TestCase.assertRaises", "<builtin>.len", "warnings.simplefilter", "warnings.catch_warnings", "tests.test_furl.TestFurl._param", "furl.Fragment", "<builtin>.str", "<builtin>.issubclass", "furl.furl"], "tests.test_furl.TestFurl.test_remove": ["furl.furl", "<builtin>.str", "tests.test_furl.TestFurl._param"], "tests.test_furl.TestFurl.test_join": ["furl.furl"], "tests.test_furl.TestFurl.test_tostr": ["furl.furl", "six.moves.urllib.parse.quote_plus"], "tests.test_furl.TestFurl.test_equality": ["furl.furl"], "tests.test_furl.TestFurl.test_urlsplit": ["<builtin>.isinstance", "furl.urlsplit", "six.moves.urllib.parse.urlsplit"], "furl.urlsplit": [], "tests.test_furl.TestFurl.test_join_path_segments": ["furl.join_path_segments"], "furl.join_path_segments": [], "tests.test_furl.TestFurl.test_remove_path_segments": ["furl.remove_path_segments"], "furl.remove_path_segments": [], "tests.test_furl.TestFurl.test_is_valid_port": ["furl.is_valid_port"], "furl.is_valid_port": [], "tests.test_furl.TestFurl.test_is_valid_scheme": ["furl.is_valid_scheme"], "furl.is_valid_scheme": [], "tests.test_furl.TestFurl.test_is_valid_encoded_path_segment": ["furl.is_valid_encoded_path_segment"], "furl.is_valid_encoded_path_segment": [], "tests.test_furl.TestFurl.test_is_valid_encoded_query_key": ["furl.is_valid_encoded_query_key"], "furl.is_valid_encoded_query_key": [], "tests.test_furl.TestFurl.test_is_valid_encoded_query_value": ["furl.is_valid_encoded_query_value"], "furl.is_valid_encoded_query_value": [], "tests.test_furl.TestFurl.test_asdict": ["furl.Query", "furl.Path", "furl.Fragment", "furl.furl"], "tests.test_furl.TestMetadata.test_metadata_varibles": ["tests.test_furl.TestMetadata.test_metadata_varibles.is_non_empty_string"], "tests.test_furl.TestMetadata.test_metadata_varibles.is_non_empty_string": ["<builtin>.isinstance"]}
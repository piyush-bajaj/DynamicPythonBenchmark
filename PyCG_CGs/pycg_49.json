{"tests.test_client": [], "tests.test_client.ConnectTests.test_send_connect": ["unittest.TestCase.assertIsInstance", "unittest.TestCase.assertFalse", "unittest.TestCase.assertEqual", "websockets.uri.parse_uri", "unittest.mock.patch"], "unittest.mock.patch": [], "websockets.uri.parse_uri": [], "unittest.TestCase.assertIsInstance": [], "unittest.TestCase.assertEqual": [], "unittest.TestCase.assertFalse": [], "tests.test_client.ConnectTests.test_connect_request": ["websockets.datastructures.Headers", "websockets.uri.parse_uri", "unittest.mock.patch", "unittest.TestCase.assertEqual"], "websockets.datastructures.Headers": [], "tests.test_client.ConnectTests.test_path": ["websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "tests.test_client.ConnectTests.test_port": ["websockets.uri.parse_uri", "unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "unittest.TestCase.subTest": [], "tests.test_client.ConnectTests.test_user_info": ["websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "tests.test_client.ConnectTests.test_origin": ["websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "tests.test_client.ConnectTests.test_extensions": ["websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "tests.test_client.ConnectTests.test_subprotocols": ["websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "tests.test_client.AcceptRejectTests.test_receive_accept": ["unittest.TestCase.assertIsInstance", "unittest.TestCase.assertFalse", "unittest.TestCase.assertEqual", "websockets.uri.parse_uri", "unittest.mock.patch"], "tests.test_client.AcceptRejectTests.test_receive_reject": ["unittest.TestCase.assertIsInstance", "unittest.TestCase.assertEqual", "unittest.TestCase.assertTrue", "websockets.uri.parse_uri", "unittest.mock.patch"], "unittest.TestCase.assertTrue": [], "tests.test_client.AcceptRejectTests.test_accept_response": ["websockets.datastructures.Headers", "unittest.TestCase.assertEqual", "unittest.TestCase.assertIsNone", "websockets.uri.parse_uri", "unittest.mock.patch"], "unittest.TestCase.assertIsNone": [], "tests.test_client.AcceptRejectTests.test_reject_response": ["websockets.datastructures.Headers", "websockets.uri.parse_uri", "unittest.mock.patch", "unittest.TestCase.assertEqual"], "tests.test_client.AcceptRejectTests.test_no_response": ["websockets.uri.parse_uri", "unittest.mock.patch", "unittest.TestCase.assertEqual"], "tests.test_client.AcceptRejectTests.test_partial_response": ["websockets.uri.parse_uri", "unittest.mock.patch", "unittest.TestCase.assertEqual"], "tests.test_client.AcceptRejectTests.test_random_response": ["websockets.uri.parse_uri", "unittest.mock.patch", "unittest.TestCase.assertEqual"], "tests.test_client.AcceptRejectTests.make_accept_response": ["websockets.http11.Response", "websockets.datastructures.Headers", "websockets.utils.accept_key"], "websockets.utils.accept_key": [], "websockets.http11.Response": [], "tests.test_client.AcceptRejectTests.test_basic": ["tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "tests.test_client.AcceptRejectTests.test_missing_connection": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "<builtin>.str"], "unittest.TestCase.assertRaises": [], "<builtin>.str": [], "tests.test_client.AcceptRejectTests.test_invalid_connection": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "<builtin>.str"], "tests.test_client.AcceptRejectTests.test_missing_upgrade": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "<builtin>.str"], "tests.test_client.AcceptRejectTests.test_invalid_upgrade": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "<builtin>.str"], "tests.test_client.AcceptRejectTests.test_missing_accept": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "<builtin>.str"], "tests.test_client.AcceptRejectTests.test_multiple_accept": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "<builtin>.str"], "tests.test_client.AcceptRejectTests.test_invalid_accept": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "<builtin>.str"], "tests.test_client.AcceptRejectTests.test_no_extensions": ["tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "tests.test_client.AcceptRejectTests.test_no_extension": ["extensions.utils.ClientOpExtensionFactory", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "extensions.utils.ClientOpExtensionFactory": [], "tests.test_client.AcceptRejectTests.test_extension": ["tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "unittest.TestCase.assertEqual", "extensions.utils.ClientRsv2ExtensionFactory"], "extensions.utils.ClientRsv2ExtensionFactory": [], "tests.test_client.AcceptRejectTests.test_unexpected_extension": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "<builtin>.str"], "tests.test_client.AcceptRejectTests.test_unsupported_extension": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "extensions.utils.ClientRsv2ExtensionFactory", "websockets.uri.parse_uri", "<builtin>.str"], "tests.test_client.AcceptRejectTests.test_supported_extension_parameters": ["extensions.utils.ClientOpExtensionFactory", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "tests.test_client.AcceptRejectTests.test_unsupported_extension_parameters": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "<builtin>.str", "extensions.utils.ClientOpExtensionFactory"], "tests.test_client.AcceptRejectTests.test_multiple_supported_extension_parameters": ["extensions.utils.ClientOpExtensionFactory", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "tests.test_client.AcceptRejectTests.test_multiple_extensions": ["unittest.TestCase.assertEqual", "tests.test_client.AcceptRejectTests.make_accept_response", "extensions.utils.ClientRsv2ExtensionFactory", "websockets.uri.parse_uri", "extensions.utils.ClientOpExtensionFactory"], "tests.test_client.AcceptRejectTests.test_multiple_extensions_order": ["unittest.TestCase.assertEqual", "tests.test_client.AcceptRejectTests.make_accept_response", "extensions.utils.ClientRsv2ExtensionFactory", "websockets.uri.parse_uri", "extensions.utils.ClientOpExtensionFactory"], "tests.test_client.AcceptRejectTests.test_no_subprotocols": ["tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "unittest.TestCase.assertEqual", "unittest.TestCase.assertIsNone"], "tests.test_client.AcceptRejectTests.test_no_subprotocol": ["tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "unittest.TestCase.assertEqual", "unittest.TestCase.assertIsNone"], "tests.test_client.AcceptRejectTests.test_subprotocol": ["tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "tests.test_client.AcceptRejectTests.test_unexpected_subprotocol": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "<builtin>.str"], "tests.test_client.AcceptRejectTests.test_multiple_subprotocols": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "<builtin>.str"], "tests.test_client.AcceptRejectTests.test_supported_subprotocol": ["tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "tests.test_client.AcceptRejectTests.test_unsupported_subprotocol": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_client.AcceptRejectTests.make_accept_response", "websockets.uri.parse_uri", "<builtin>.str"], "tests.test_client.MiscTests.test_bypass_handshake": ["websockets.frames.Frame", "websockets.uri.parse_uri", "unittest.TestCase.assertEqual"], "websockets.frames.Frame": [], "tests.test_client.MiscTests.test_custom_logger": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertLogs", "logging.getLogger", "<builtin>.len", "websockets.uri.parse_uri"], "logging.getLogger": [], "unittest.TestCase.assertLogs": [], "<builtin>.len": [], "tests.test_client.BackwardsCompatibilityTests.test_client_connection_class": ["websockets.client.ClientConnection", "utils.DeprecationTestCase.assertIsInstance", "utils.DeprecationTestCase.assertDeprecationWarning"], "utils.DeprecationTestCase.assertDeprecationWarning": [], "websockets.client.ClientConnection": [], "utils.DeprecationTestCase.assertIsInstance": [], "tests.test_headers": [], "tests.test_headers.HeadersTests.test_build_host": ["unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_parse_connection": ["unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_parse_connection_invalid_header_format": ["unittest.TestCase.assertRaises", "unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_parse_upgrade": ["unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_parse_upgrade_invalid_header_format": ["unittest.TestCase.assertRaises", "unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_parse_extension": ["unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_parse_extension_invalid_header_format": ["unittest.TestCase.assertRaises", "unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_parse_subprotocol": ["unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_parse_subprotocol_invalid_header": ["unittest.TestCase.assertRaises", "unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_validate_subprotocols": ["unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_validate_subprotocols_invalid": ["unittest.TestCase.assertRaises", "unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_build_www_authenticate_basic": ["unittest.TestCase.assertEqual"], "tests.test_headers.HeadersTests.test_build_www_authenticate_basic_invalid_realm": ["unittest.TestCase.assertRaises"], "tests.test_headers.HeadersTests.test_build_authorization_basic": ["unittest.TestCase.assertEqual"], "tests.test_headers.HeadersTests.test_build_authorization_basic_utf8": ["unittest.TestCase.assertEqual"], "tests.test_headers.HeadersTests.test_parse_authorization_basic": ["unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_parse_authorization_basic_invalid_header_format": ["unittest.TestCase.assertRaises", "unittest.TestCase.subTest"], "tests.test_headers.HeadersTests.test_parse_authorization_basic_invalid_header_value": ["unittest.TestCase.assertRaises", "unittest.TestCase.subTest"], "tests.test_server": [], "tests.test_server.ConnectTests.test_receive_connect": ["unittest.TestCase.assertIsInstance", "unittest.TestCase.assertFalse", "unittest.TestCase.assertEqual"], "tests.test_server.ConnectTests.test_connect_request": ["websockets.datastructures.Headers", "unittest.TestCase.assertEqual"], "tests.test_server.ConnectTests.test_no_request": ["unittest.TestCase.assertEqual"], "tests.test_server.ConnectTests.test_partial_request": ["unittest.TestCase.assertEqual"], "tests.test_server.ConnectTests.test_random_request": ["unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.make_request": ["websockets.datastructures.Headers", "websockets.http11.Request"], "websockets.http11.Request": [], "tests.test_server.AcceptRejectTests.test_send_accept": ["unittest.TestCase.assertIsInstance", "unittest.TestCase.assertFalse", "unittest.TestCase.assertEqual", "tests.test_server.AcceptRejectTests.make_request", "unittest.mock.patch"], "tests.test_server.AcceptRejectTests.test_send_reject": ["unittest.TestCase.assertIsInstance", "unittest.TestCase.assertTrue", "unittest.mock.patch", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_accept_response": ["unittest.TestCase.assertIsInstance", "unittest.TestCase.assertEqual", "websockets.datastructures.Headers", "unittest.TestCase.assertIsNone", "tests.test_server.AcceptRejectTests.make_request", "unittest.mock.patch"], "tests.test_server.AcceptRejectTests.test_reject_response": ["unittest.TestCase.assertIsInstance", "websockets.datastructures.Headers", "unittest.mock.patch", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_basic": ["tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_unexpected_exception": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "tests.test_server.AcceptRejectTests.make_request", "<builtin>.str", "<builtin>.Exception", "unittest.mock.patch"], "<builtin>.Exception": [], "tests.test_server.AcceptRejectTests.test_missing_connection": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_invalid_connection": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_missing_upgrade": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_invalid_upgrade": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_missing_key": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_multiple_key": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_invalid_key": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_truncated_key": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_missing_version": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_multiple_version": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_invalid_version": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_no_origin": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_origin": ["tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_unexpected_origin": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_multiple_origin": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_supported_origin": ["tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_unsupported_origin": ["<builtin>.str", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.test_server.AcceptRejectTests.test_no_origin_accepted": ["tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertIsNone", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_no_extensions": ["unittest.TestCase.assertNotIn", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual"], "unittest.TestCase.assertNotIn": [], "tests.test_server.AcceptRejectTests.test_no_extension": ["unittest.TestCase.assertEqual", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertNotIn", "extensions.utils.ServerOpExtensionFactory"], "extensions.utils.ServerOpExtensionFactory": [], "tests.test_server.AcceptRejectTests.test_extension": ["unittest.TestCase.assertEqual", "tests.test_server.AcceptRejectTests.make_request", "extensions.utils.ServerOpExtensionFactory"], "tests.test_server.AcceptRejectTests.test_unexpected_extension": ["unittest.TestCase.assertNotIn", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_unsupported_extension": ["unittest.TestCase.assertNotIn", "tests.test_server.AcceptRejectTests.make_request", "extensions.utils.ServerRsv2ExtensionFactory", "unittest.TestCase.assertEqual"], "extensions.utils.ServerRsv2ExtensionFactory": [], "tests.test_server.AcceptRejectTests.test_supported_extension_parameters": ["unittest.TestCase.assertEqual", "tests.test_server.AcceptRejectTests.make_request", "extensions.utils.ServerOpExtensionFactory"], "tests.test_server.AcceptRejectTests.test_unsupported_extension_parameters": ["unittest.TestCase.assertEqual", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertNotIn", "extensions.utils.ServerOpExtensionFactory"], "tests.test_server.AcceptRejectTests.test_multiple_supported_extension_parameters": ["unittest.TestCase.assertEqual", "tests.test_server.AcceptRejectTests.make_request", "extensions.utils.ServerOpExtensionFactory"], "tests.test_server.AcceptRejectTests.test_multiple_extensions": ["unittest.TestCase.assertEqual", "tests.test_server.AcceptRejectTests.make_request", "extensions.utils.ServerRsv2ExtensionFactory", "extensions.utils.ServerOpExtensionFactory"], "tests.test_server.AcceptRejectTests.test_multiple_extensions_order": ["unittest.TestCase.assertEqual", "tests.test_server.AcceptRejectTests.make_request", "extensions.utils.ServerRsv2ExtensionFactory", "extensions.utils.ServerOpExtensionFactory"], "tests.test_server.AcceptRejectTests.test_no_subprotocols": ["unittest.TestCase.assertNotIn", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertIsNone", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_no_subprotocol": ["tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertRaisesRegex", "unittest.TestCase.assertEqual"], "unittest.TestCase.assertRaisesRegex": [], "tests.test_server.AcceptRejectTests.test_subprotocol": ["tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_unexpected_subprotocol": ["unittest.TestCase.assertNotIn", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertIsNone", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_multiple_subprotocols": ["tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_supported_subprotocol": ["tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_unsupported_subprotocol": ["tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertRaisesRegex", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.optional_chat": [], "tests.test_server.AcceptRejectTests.test_select_subprotocol": ["tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertEqual"], "tests.test_server.AcceptRejectTests.test_select_no_subprotocol": ["unittest.TestCase.assertNotIn", "tests.test_server.AcceptRejectTests.make_request", "unittest.TestCase.assertIsNone", "unittest.TestCase.assertEqual"], "tests.test_server.MiscTests.test_bypass_handshake": ["websockets.frames.Frame", "unittest.TestCase.assertEqual"], "tests.test_server.MiscTests.test_custom_logger": ["logging.getLogger", "<builtin>.len", "unittest.TestCase.assertEqual", "unittest.TestCase.assertLogs"], "tests.test_server.BackwardsCompatibilityTests.test_server_connection_class": ["utils.DeprecationTestCase.assertIsInstance", "websockets.server.ServerConnection", "utils.DeprecationTestCase.assertDeprecationWarning"], "websockets.server.ServerConnection": [], "tests.test_utils": [], "tests.test_utils.UtilsTests.test_generate_key": ["websockets.utils.generate_key", "<builtin>.len", "unittest.TestCase.assertEqual", "base64.b64decode"], "websockets.utils.generate_key": [], "base64.b64decode": [], "tests.test_utils.UtilsTests.test_accept_key": ["unittest.TestCase.assertEqual", "websockets.utils.accept_key"], "tests.test_utils.ApplyMaskTests.apply_mask": ["websockets.utils.apply_mask"], "websockets.utils.apply_mask": [], "itertools.product": [], "tests.test_utils.ApplyMaskTests": ["<builtin>.list", "itertools.product"], "<builtin>.list": [], "tests.test_utils.ApplyMaskTests.test_apply_mask": ["tests.test_utils.ApplyMaskTests.apply_mask", "unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests.test_utils.ApplyMaskTests.test_apply_mask_memoryview": ["<builtin>.memoryview", "unittest.TestCase.assertEqual", "tests.test_utils.ApplyMaskTests.apply_mask", "unittest.TestCase.subTest"], "<builtin>.memoryview": [], "tests.test_utils.ApplyMaskTests.test_apply_mask_non_contiguous_memoryview": ["<builtin>.memoryview", "unittest.TestCase.assertEqual", "tests.test_utils.ApplyMaskTests.apply_mask", "unittest.TestCase.subTest"], "tests.test_utils.ApplyMaskTests.test_apply_mask_check_input_types": ["tests.test_utils.ApplyMaskTests.apply_mask", "unittest.TestCase.assertRaises", "unittest.TestCase.subTest"], "tests.test_utils.ApplyMaskTests.test_apply_mask_check_mask_length": ["tests.test_utils.ApplyMaskTests.apply_mask", "unittest.TestCase.assertRaises", "unittest.TestCase.subTest"], "tests.test_utils.SpeedupsTests.apply_mask": ["websockets.speedups.apply_mask", "platform.python_implementation", "unittest.SkipTest", "<builtin>.str"], "websockets.speedups.apply_mask": [], "platform.python_implementation": [], "unittest.SkipTest": [], "tests.test_connection": [], "tests.test_connection.BackwardsCompatibilityTests.test_connection_class": ["utils.DeprecationTestCase.assertIs", "utils.DeprecationTestCase.assertDeprecationWarning"], "utils.DeprecationTestCase.assertIs": [], "tests.test_datastructures": [], "tests.test_datastructures.MultipleValuesErrorTests.test_multiple_values_error_str": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_datastructures.HeadersTests.setUp": [], "tests.test_datastructures.HeadersTests.test_init": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_init_from_kwargs": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_init_from_headers": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_init_from_headers_and_kwargs": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_init_from_mapping": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_init_from_mapping_and_kwargs": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_init_from_iterable": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_init_from_iterable_and_kwargs": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_init_multiple_positional_arguments": ["unittest.TestCase.assertRaises"], "tests.test_datastructures.HeadersTests.test_str": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_datastructures.HeadersTests.test_repr": ["unittest.TestCase.assertEqual", "<builtin>.repr"], "<builtin>.repr": [], "tests.test_datastructures.HeadersTests.test_copy": ["unittest.TestCase.assertEqual", "<builtin>.repr"], "tests.test_datastructures.HeadersTests.test_serialize": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_contains": ["unittest.TestCase.assertIn"], "unittest.TestCase.assertIn": [], "tests.test_datastructures.HeadersTests.test_contains_case_insensitive": ["unittest.TestCase.assertIn"], "tests.test_datastructures.HeadersTests.test_contains_not_found": ["unittest.TestCase.assertNotIn"], "tests.test_datastructures.HeadersTests.test_contains_non_string_key": ["unittest.TestCase.assertNotIn"], "tests.test_datastructures.HeadersTests.test_iter": ["<builtin>.set", "<builtin>.iter", "unittest.TestCase.assertEqual"], "<builtin>.iter": [], "<builtin>.set": [], "tests.test_datastructures.HeadersTests.test_len": ["<builtin>.len", "unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_getitem": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_getitem_case_insensitive": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_getitem_key_error": ["unittest.TestCase.assertRaises"], "tests.test_datastructures.HeadersTests.test_setitem": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_setitem_case_insensitive": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_delitem": ["unittest.TestCase.assertRaises"], "tests.test_datastructures.HeadersTests.test_delitem_case_insensitive": ["unittest.TestCase.assertRaises"], "tests.test_datastructures.HeadersTests.test_eq": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_eq_case_insensitive": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_eq_not_equal": ["unittest.TestCase.assertNotEqual"], "unittest.TestCase.assertNotEqual": [], "tests.test_datastructures.HeadersTests.test_eq_other_type": ["unittest.TestCase.assertNotEqual"], "tests.test_datastructures.HeadersTests.test_clear": ["unittest.TestCase.assertFalse", "unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_get_all": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_get_all_case_insensitive": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_get_all_no_values": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.HeadersTests.test_raw_items": ["<builtin>.list", "unittest.TestCase.assertEqual"], "tests.test_datastructures.MultiValueHeadersTests.setUp": [], "tests.test_datastructures.MultiValueHeadersTests.test_init_from_headers": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.MultiValueHeadersTests.test_init_from_headers_and_kwargs": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.MultiValueHeadersTests.test_str": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_datastructures.MultiValueHeadersTests.test_repr": ["unittest.TestCase.assertEqual", "<builtin>.repr"], "tests.test_datastructures.MultiValueHeadersTests.test_copy": ["unittest.TestCase.assertEqual", "<builtin>.repr"], "tests.test_datastructures.MultiValueHeadersTests.test_serialize": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.MultiValueHeadersTests.test_iter": ["<builtin>.set", "<builtin>.iter", "unittest.TestCase.assertEqual"], "tests.test_datastructures.MultiValueHeadersTests.test_len": ["<builtin>.len", "unittest.TestCase.assertEqual"], "tests.test_datastructures.MultiValueHeadersTests.test_getitem_multiple_values_error": ["unittest.TestCase.assertRaises"], "tests.test_datastructures.MultiValueHeadersTests.test_setitem": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.MultiValueHeadersTests.test_delitem": ["unittest.TestCase.assertRaises"], "tests.test_datastructures.MultiValueHeadersTests.test_get_all": ["unittest.TestCase.assertEqual"], "tests.test_datastructures.MultiValueHeadersTests.test_raw_items": ["<builtin>.list", "unittest.TestCase.assertEqual"], "tests.test_exports": [], "tests.test_exports.ExportsTests.test_top_level_module_reexports_all_submodule_exports": ["<builtin>.set", "unittest.TestCase.assertEqual"], "tests.test_exports.ExportsTests.test_submodule_exports_are_globally_unique": ["<builtin>.set", "<builtin>.len", "unittest.TestCase.assertEqual"], "tests.test_exceptions": [], "tests.test_exceptions.ExceptionsTests.test_str": ["unittest.TestCase.assertEqual", "<builtin>.str", "unittest.TestCase.subTest"], "tests.test_exceptions.ExceptionsTests.test_connection_closed_attributes_backwards_compatibility": ["websockets.frames.Close", "unittest.TestCase.assertEqual"], "websockets.frames.Close": [], "tests.test_exceptions.ExceptionsTests.test_connection_closed_attributes_backwards_compatibility_defaults": ["unittest.TestCase.assertEqual"], "tests.extensions": [], "tests.extensions.test_base": [], "tests.extensions.utils": [], "tests.extensions.utils.OpExtension.__init__": [], "tests.extensions.utils.OpExtension.decode": [], "tests.extensions.utils.OpExtension.encode": [], "tests.extensions.utils.OpExtension.__eq__": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "tests.extensions.utils.ClientOpExtensionFactory.__init__": [], "tests.extensions.utils.ClientOpExtensionFactory.get_request_params": [], "tests.extensions.utils.ClientOpExtensionFactory.process_response_params": ["websockets.exceptions.NegotiationError", "tests.extensions.utils.OpExtension.__init__"], "websockets.exceptions.NegotiationError": [], "tests.extensions.utils.ServerOpExtensionFactory.__init__": [], "tests.extensions.utils.ServerOpExtensionFactory.process_request_params": ["websockets.exceptions.NegotiationError", "tests.extensions.utils.OpExtension.__init__"], "tests.extensions.utils.NoOpExtension.__repr__": [], "tests.extensions.utils.NoOpExtension.decode": [], "tests.extensions.utils.NoOpExtension.encode": [], "tests.extensions.utils.ClientNoOpExtensionFactory.get_request_params": [], "tests.extensions.utils.ClientNoOpExtensionFactory.process_response_params": ["websockets.exceptions.NegotiationError"], "tests.extensions.utils.ServerNoOpExtensionFactory.__init__": [], "tests.extensions.utils.ServerNoOpExtensionFactory.process_request_params": [], "tests.extensions.utils.Rsv2Extension.decode": ["dataclasses.replace"], "dataclasses.replace": [], "tests.extensions.utils.Rsv2Extension.encode": ["dataclasses.replace"], "tests.extensions.utils.Rsv2Extension.__eq__": ["<builtin>.isinstance"], "tests.extensions.utils.ClientRsv2ExtensionFactory.get_request_params": [], "tests.extensions.utils.ClientRsv2ExtensionFactory.process_response_params": [], "tests.extensions.utils.ServerRsv2ExtensionFactory.process_request_params": [], "tests.extensions.test_permessage_deflate": [], "tests.extensions.test_permessage_deflate.PerMessageDeflateTestsMixin.assertExtensionEqual": [], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.setUp": [], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_name": [], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_repr": ["tests.extensions.test_permessage_deflate.PerMessageDeflateTestsMixin.assertExtensionEqual", "<builtin>.eval", "<builtin>.repr"], "<builtin>.eval": [], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_no_encode_decode_ping_frame": ["websockets.frames.Frame", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_no_encode_decode_pong_frame": ["websockets.frames.Frame", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_no_encode_decode_close_frame": ["websockets.frames.Close", "websockets.frames.Frame", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_encode_decode_text_frame": ["websockets.frames.Frame", "dataclasses.replace", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_encode_decode_binary_frame": ["websockets.frames.Frame", "dataclasses.replace", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_encode_decode_fragmented_text_frame": ["websockets.frames.Frame", "dataclasses.replace", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_encode_decode_fragmented_binary_frame": ["websockets.frames.Frame", "dataclasses.replace", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_no_decode_text_frame": ["websockets.frames.Frame", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_no_decode_binary_frame": ["websockets.frames.Frame", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_no_decode_fragmented_text_frame": ["websockets.frames.Frame", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_no_decode_fragmented_binary_frame": ["websockets.frames.Frame", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_context_takeover": ["websockets.frames.Frame", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_remote_no_context_takeover": ["websockets.frames.Frame", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_local_no_context_takeover": ["websockets.frames.Frame", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_compress_settings": ["websockets.frames.Frame", "dataclasses.replace", "unittest.TestCase.assertEqual"], "tests.extensions.test_permessage_deflate.PerMessageDeflateTests.test_decompress_max_size": ["websockets.frames.Frame", "unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises"], "tests.extensions.test_permessage_deflate.ClientPerMessageDeflateFactoryTests.test_name": [], "tests.extensions.test_permessage_deflate.ClientPerMessageDeflateFactoryTests.test_init": ["unittest.TestCase.subTest"], "tests.extensions.test_permessage_deflate.ClientPerMessageDeflateFactoryTests.test_init_error": ["unittest.TestCase.assertRaises", "unittest.TestCase.subTest"], "tests.extensions.test_permessage_deflate.ClientPerMessageDeflateFactoryTests.test_get_request_params": ["unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests.extensions.test_permessage_deflate.ClientPerMessageDeflateFactoryTests.test_process_response_params": ["<builtin>.issubclass", "unittest.TestCase.assertRaises", "<builtin>.isinstance", "unittest.TestCase.subTest", "tests.extensions.test_permessage_deflate.PerMessageDeflateTestsMixin.assertExtensionEqual"], "<builtin>.issubclass": [], "tests.extensions.test_permessage_deflate.ClientPerMessageDeflateFactoryTests.test_process_response_params_deduplication": ["unittest.TestCase.assertRaises"], "tests.extensions.test_permessage_deflate.ClientPerMessageDeflateFactoryTests.test_enable_client_permessage_deflate": ["unittest.TestCase.assertIsInstance", "<builtin>.len", "unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests.extensions.test_permessage_deflate.ServerPerMessageDeflateFactoryTests.test_name": [], "tests.extensions.test_permessage_deflate.ServerPerMessageDeflateFactoryTests.test_init": ["unittest.TestCase.subTest"], "tests.extensions.test_permessage_deflate.ServerPerMessageDeflateFactoryTests.test_init_error": ["unittest.TestCase.assertRaises", "unittest.TestCase.subTest"], "tests.extensions.test_permessage_deflate.ServerPerMessageDeflateFactoryTests.test_process_request_params": ["<builtin>.issubclass", "unittest.TestCase.assertRaises", "unittest.TestCase.assertEqual", "<builtin>.isinstance", "unittest.TestCase.subTest", "tests.extensions.test_permessage_deflate.PerMessageDeflateTestsMixin.assertExtensionEqual"], "tests.extensions.test_permessage_deflate.ServerPerMessageDeflateFactoryTests.test_process_response_params_deduplication": ["unittest.TestCase.assertRaises"], "tests.extensions.test_permessage_deflate.ServerPerMessageDeflateFactoryTests.test_enable_server_permessage_deflate": ["unittest.TestCase.assertIsInstance", "<builtin>.len", "unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests.maxi_cov": ["sys.exit", "<builtin>.len", "tests.maxi_cov.run_coverage", "tests.maxi_cov.get_mapping", "tests.maxi_cov.check_environment"], "tests.maxi_cov.check_environment": ["<builtin>.print"], "<builtin>.print": [], "tests.maxi_cov.get_mapping": ["<builtin>.sorted", "glob.glob", "<builtin>.set", "<builtin>.len", "<builtin>.list"], "glob.glob": [], "<builtin>.sorted": [], "tests.maxi_cov.get_ignored_files": ["<builtin>.sorted", "glob.glob"], "tests.maxi_cov.run_coverage": ["tests.maxi_cov.get_ignored_files", "subprocess.run", "<builtin>.print"], "subprocess.run": [], "sys.exit": [], "tests.test_uri": [], "tests.test_uri.URITests.test_success": ["unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests.test_uri.URITests.test_error": ["unittest.TestCase.assertRaises", "unittest.TestCase.subTest"], "tests.test_uri.URITests.test_resource_name": ["unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests.test_uri.URITests.test_user_info": ["unittest.TestCase.assertEqual", "unittest.TestCase.subTest"], "tests": ["logging.basicConfig"], "logging.basicConfig": [], "tests.test_http11": [], "tests.test_http11.RequestTests.setUp": ["<builtin>.super", "websockets.streams.StreamReader"], "<builtin>.super": [], "websockets.streams.StreamReader": [], "tests.test_http11.RequestTests.parse": [], "tests.test_http11.RequestTests.test_parse": ["utils.GeneratorTestCase.assertGeneratorReturns", "tests.test_http11.RequestTests.parse", "utils.GeneratorTestCase.assertEqual"], "utils.GeneratorTestCase.assertGeneratorReturns": [], "utils.GeneratorTestCase.assertEqual": [], "tests.test_http11.RequestTests.test_parse_empty": ["tests.test_http11.RequestTests.parse", "utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "utils.GeneratorTestCase.assertRaises"], "utils.GeneratorTestCase.assertRaises": [], "<builtin>.next": [], "tests.test_http11.RequestTests.test_parse_invalid_request_line": ["tests.test_http11.RequestTests.parse", "utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.RequestTests.test_parse_unsupported_method": ["tests.test_http11.RequestTests.parse", "utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.RequestTests.test_parse_unsupported_version": ["tests.test_http11.RequestTests.parse", "utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.RequestTests.test_parse_invalid_header": ["tests.test_http11.RequestTests.parse", "utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.RequestTests.test_parse_body": ["tests.test_http11.RequestTests.parse", "utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.RequestTests.test_parse_body_with_transfer_encoding": ["tests.test_http11.RequestTests.parse", "utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.RequestTests.test_serialize": ["websockets.datastructures.Headers", "utils.GeneratorTestCase.assertEqual"], "tests.test_http11.ResponseTests.setUp": ["<builtin>.super", "websockets.streams.StreamReader"], "tests.test_http11.ResponseTests.parse": [], "tests.test_http11.ResponseTests.test_parse": ["utils.GeneratorTestCase.assertGeneratorReturns", "utils.GeneratorTestCase.assertIsNone", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertEqual"], "utils.GeneratorTestCase.assertIsNone": [], "tests.test_http11.ResponseTests.test_parse_empty": ["utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.ResponseTests.test_parse_invalid_status_line": ["utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.ResponseTests.test_parse_unsupported_version": ["utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.ResponseTests.test_parse_invalid_status": ["utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.ResponseTests.test_parse_unsupported_status": ["utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.ResponseTests.test_parse_invalid_reason": ["utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.ResponseTests.test_parse_invalid_header": ["utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.ResponseTests.test_parse_body_with_content_length": ["utils.GeneratorTestCase.assertGeneratorReturns", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertEqual"], "tests.test_http11.ResponseTests.test_parse_body_without_content_length": ["utils.GeneratorTestCase.assertGeneratorReturns", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertEqual", "utils.GeneratorTestCase.assertGeneratorRunning"], "utils.GeneratorTestCase.assertGeneratorRunning": [], "tests.test_http11.ResponseTests.test_parse_body_with_content_length_too_long": ["utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.ResponseTests.test_parse_body_without_content_length_too_long": ["utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.ResponseTests.test_parse_body_with_transfer_encoding": ["utils.GeneratorTestCase.assertEqual", "<builtin>.next", "<builtin>.str", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.ResponseTests.test_parse_body_no_content": ["utils.GeneratorTestCase.assertGeneratorReturns", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertIsNone"], "tests.test_http11.ResponseTests.test_parse_body_not_modified": ["utils.GeneratorTestCase.assertGeneratorReturns", "tests.test_http11.ResponseTests.parse", "utils.GeneratorTestCase.assertIsNone"], "tests.test_http11.ResponseTests.test_serialize": ["websockets.datastructures.Headers", "utils.GeneratorTestCase.assertEqual"], "tests.test_http11.ResponseTests.test_serialize_with_body": ["websockets.datastructures.Headers", "utils.GeneratorTestCase.assertEqual"], "tests.test_http11.HeadersTests.setUp": ["<builtin>.super", "websockets.streams.StreamReader"], "tests.test_http11.HeadersTests.parse_headers": ["tests.test_http11.HeadersTests.parse_headers"], "tests.test_http11.HeadersTests.test_parse_invalid_name": ["tests.test_http11.HeadersTests.parse_headers", "<builtin>.next", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.HeadersTests.test_parse_invalid_value": ["tests.test_http11.HeadersTests.parse_headers", "<builtin>.next", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.HeadersTests.test_parse_too_long_value": ["tests.test_http11.HeadersTests.parse_headers", "<builtin>.next", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.HeadersTests.test_parse_too_long_line": ["tests.test_http11.HeadersTests.parse_headers", "<builtin>.next", "utils.GeneratorTestCase.assertRaises"], "tests.test_http11.HeadersTests.test_parse_invalid_line_ending": ["tests.test_http11.HeadersTests.parse_headers", "<builtin>.next", "utils.GeneratorTestCase.assertRaises"], "tests.test_frames": [], "tests.test_frames.FramesTestCase.enforce_mask": ["unittest.mock.patch"], "tests.test_frames.FramesTestCase.parse": ["utils.GeneratorTestCase.assertGeneratorReturns", "websockets.streams.StreamReader"], "tests.test_frames.FramesTestCase.assertFrameData": ["tests.test_frames.FramesTestCase.parse", "tests.test_frames.FramesTestCase.enforce_mask", "utils.GeneratorTestCase.assertEqual"], "tests.test_frames.FrameTests.test_text_unmasked": ["tests.test_frames.FramesTestCase.assertFrameData"], "tests.test_frames.FrameTests.test_text_masked": ["tests.test_frames.FramesTestCase.assertFrameData"], "tests.test_frames.FrameTests.test_binary_unmasked": ["tests.test_frames.FramesTestCase.assertFrameData"], "tests.test_frames.FrameTests.test_binary_masked": ["tests.test_frames.FramesTestCase.assertFrameData"], "tests.test_frames.FrameTests.test_non_ascii_text_unmasked": ["tests.test_frames.FramesTestCase.assertFrameData"], "tests.test_frames.FrameTests.test_non_ascii_text_masked": ["tests.test_frames.FramesTestCase.assertFrameData"], "tests.test_frames.FrameTests.test_close": ["tests.test_frames.FramesTestCase.assertFrameData"], "tests.test_frames.FrameTests.test_ping": ["tests.test_frames.FramesTestCase.assertFrameData"], "tests.test_frames.FrameTests.test_pong": ["tests.test_frames.FramesTestCase.assertFrameData"], "tests.test_frames.FrameTests.test_long": ["tests.test_frames.FramesTestCase.assertFrameData"], "tests.test_frames.FrameTests.test_very_long": ["tests.test_frames.FramesTestCase.assertFrameData"], "tests.test_frames.FrameTests.test_payload_too_big": ["tests.test_frames.FramesTestCase.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_frames.FrameTests.test_bad_reserved_bits": ["utils.GeneratorTestCase.subTest", "tests.test_frames.FramesTestCase.parse", "utils.GeneratorTestCase.assertRaises"], "utils.GeneratorTestCase.subTest": [], "tests.test_frames.FrameTests.test_good_opcode": ["utils.GeneratorTestCase.subTest", "<builtin>.bytes", "tests.test_frames.FramesTestCase.parse", "<builtin>.range", "<builtin>.list"], "<builtin>.range": [], "<builtin>.bytes": [], "tests.test_frames.FrameTests.test_bad_opcode": ["utils.GeneratorTestCase.subTest", "<builtin>.bytes", "tests.test_frames.FramesTestCase.parse", "<builtin>.range", "<builtin>.list", "utils.GeneratorTestCase.assertRaises"], "tests.test_frames.FrameTests.test_mask_flag": ["tests.test_frames.FramesTestCase.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_frames.FrameTests.test_control_frame_max_length": ["tests.test_frames.FramesTestCase.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_frames.FrameTests.test_fragmented_control_frame": ["tests.test_frames.FramesTestCase.parse", "utils.GeneratorTestCase.assertRaises"], "tests.test_frames.FrameTests.test_extensions": ["tests.test_frames.FramesTestCase.assertFrameData"], "tests.test_frames.FrameTests.test_extensions.Rot13.encode": ["dataclasses.replace", "codecs.encode"], "codecs.encode": [], "tests.test_frames.FrameTests.test_extensions.Rot13.decode": ["tests.test_frames.FrameTests.test_extensions.Rot13.encode"], "tests.test_frames.StrTests.test_cont_text": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_cont_binary": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_cont_binary_from_memoryview": ["unittest.TestCase.assertEqual", "<builtin>.memoryview", "<builtin>.str"], "tests.test_frames.StrTests.test_cont_final_text": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_cont_final_binary": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_cont_final_binary_from_memoryview": ["unittest.TestCase.assertEqual", "<builtin>.memoryview", "<builtin>.str"], "tests.test_frames.StrTests.test_cont_text_truncated": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_cont_binary_truncated": ["unittest.TestCase.assertEqual", "<builtin>.bytes", "<builtin>.str", "<builtin>.range"], "tests.test_frames.StrTests.test_cont_binary_truncated_from_memoryview": ["<builtin>.memoryview", "unittest.TestCase.assertEqual", "<builtin>.bytes", "<builtin>.str", "<builtin>.range"], "tests.test_frames.StrTests.test_text": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_text_non_final": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_text_truncated": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_text_with_newline": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_binary": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_binary_from_memoryview": ["unittest.TestCase.assertEqual", "<builtin>.memoryview", "<builtin>.str"], "tests.test_frames.StrTests.test_binary_non_final": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_binary_non_final_from_memoryview": ["unittest.TestCase.assertEqual", "<builtin>.memoryview", "<builtin>.str"], "tests.test_frames.StrTests.test_binary_truncated": ["unittest.TestCase.assertEqual", "<builtin>.bytes", "<builtin>.str", "<builtin>.range"], "tests.test_frames.StrTests.test_binary_truncated_from_memoryview": ["<builtin>.memoryview", "unittest.TestCase.assertEqual", "<builtin>.bytes", "<builtin>.str", "<builtin>.range"], "tests.test_frames.StrTests.test_close": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_close_reason": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_ping": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_ping_text": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_ping_text_with_newline": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_ping_binary": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_pong": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_pong_text": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_pong_text_with_newline": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.StrTests.test_pong_binary": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.PrepareDataTests.test_prepare_data_str": ["unittest.TestCase.assertEqual"], "tests.test_frames.PrepareDataTests.test_prepare_data_bytes": ["unittest.TestCase.assertEqual"], "tests.test_frames.PrepareDataTests.test_prepare_data_bytearray": ["<builtin>.bytearray", "unittest.TestCase.assertEqual"], "<builtin>.bytearray": [], "tests.test_frames.PrepareDataTests.test_prepare_data_memoryview": ["<builtin>.memoryview", "unittest.TestCase.assertEqual"], "tests.test_frames.PrepareDataTests.test_prepare_data_list": ["unittest.TestCase.assertRaises"], "tests.test_frames.PrepareDataTests.test_prepare_data_none": ["unittest.TestCase.assertRaises"], "tests.test_frames.PrepareCtrlTests.test_prepare_ctrl_str": ["unittest.TestCase.assertEqual"], "tests.test_frames.PrepareCtrlTests.test_prepare_ctrl_bytes": ["unittest.TestCase.assertEqual"], "tests.test_frames.PrepareCtrlTests.test_prepare_ctrl_bytearray": ["<builtin>.bytearray", "unittest.TestCase.assertEqual"], "tests.test_frames.PrepareCtrlTests.test_prepare_ctrl_memoryview": ["<builtin>.memoryview", "unittest.TestCase.assertEqual"], "tests.test_frames.PrepareCtrlTests.test_prepare_ctrl_list": ["unittest.TestCase.assertRaises"], "tests.test_frames.PrepareCtrlTests.test_prepare_ctrl_none": ["unittest.TestCase.assertRaises"], "tests.test_frames.CloseTests.assertCloseData": ["unittest.TestCase.assertEqual"], "tests.test_frames.CloseTests.test_str": ["unittest.TestCase.assertEqual", "<builtin>.str"], "tests.test_frames.CloseTests.test_parse_and_serialize": ["tests.test_frames.CloseTests.assertCloseData"], "tests.test_frames.CloseTests.test_parse_empty": ["unittest.TestCase.assertEqual"], "tests.test_frames.CloseTests.test_parse_errors": ["unittest.TestCase.assertRaises"], "tests.test_frames.CloseTests.test_serialize_errors": ["unittest.TestCase.assertRaises"], "tests.test_imports": ["<builtin>.object"], "<builtin>.object": [], "tests.test_imports.ImportsTests.setUp": ["types.ModuleType"], "types.ModuleType": [], "tests.test_imports.ImportsTests.test_get_alias": ["<builtin>.vars", "unittest.TestCase.assertEqual"], "<builtin>.vars": [], "tests.test_imports.ImportsTests.test_get_deprecated_alias": ["unittest.TestCase.assertEqual", "<builtin>.len", "<builtin>.vars", "warnings.simplefilter", "warnings.catch_warnings", "<builtin>.str", "<builtin>.type"], "warnings.catch_warnings": [], "warnings.simplefilter": [], "<builtin>.type": [], "tests.test_imports.ImportsTests.test_dir": ["<builtin>.vars", "unittest.TestCase.assertEqual", "<builtin>.dir"], "<builtin>.dir": [], "tests.test_imports.ImportsTests.test_attribute_error": ["unittest.TestCase.assertEqual", "<builtin>.str", "<builtin>.vars", "unittest.TestCase.assertRaises"], "tests.test_http": [], "tests.test_auth": [], "tests.utils": [], "tests.utils.GeneratorTestCase.assertGeneratorRunning": ["<builtin>.next"], "tests.utils.GeneratorTestCase.assertGeneratorReturns": ["<builtin>.next", "unittest.TestCase.assertRaises"], "tests.utils.DeprecationTestCase": ["contextlib.contextmanager"], "contextlib.contextmanager": [], "tests.utils.DeprecationTestCase.assertDeprecationWarning": ["unittest.TestCase.assertEqual", "<builtin>.len", "warnings.simplefilter", "warnings.catch_warnings", "<builtin>.str"], "tests.test_typing": [], "tests.legacy.test_client_server": ["contextlib.contextmanager", "pytest.mark.skip", "pathlib.Path", "<builtin>.bytes"], "pytest.mark.skip": [], "pathlib.Path": [], "tests.legacy.test_client_server.default_handler": ["asyncio.sleep", "<builtin>.str", "<builtin>.repr"], "asyncio.sleep": [], "tests.legacy.test_client_server.redirect_request": ["tests.legacy.test_client_server.get_server_uri"], "tests.legacy.test_client_server.get_server_uri": ["tests.legacy.test_client_server.get_server_address"], "tests.legacy.test_client_server.temp_test_server": ["tests.legacy.test_client_server.SecureClientServerTestsMixin.start_server", "tests.legacy.test_client_server.ClientServerTestsMixin.stop_server", "tests.legacy.test_client_server.ClientServerTestsMixin.start_server"], "tests.legacy.test_client_server.SecureClientServerTestsMixin.start_server": ["<builtin>.super"], "tests.legacy.test_client_server.ClientServerTestsMixin.start_server": ["warnings.catch_warnings", "warnings.simplefilter", "tests.legacy.test_client_server.ClientServerTestsMixin.start_server.start_server"], "tests.legacy.test_client_server.ClientServerTestsMixin.stop_server": ["asyncio.wait_for"], "tests.legacy.test_client_server.temp_test_redirecting_server": ["functools.partial", "tests.legacy.test_client_server.temp_test_server"], "functools.partial": [], "tests.legacy.test_client_server.temp_test_client": ["tests.legacy.test_client_server.ClientServerTestsMixin.stop_client", "tests.legacy.test_client_server.ClientServerTestsMixin.start_client"], "tests.legacy.test_client_server.ClientServerTestsMixin.start_client": ["tests.legacy.test_client_server.get_server_uri", "warnings.catch_warnings", "warnings.simplefilter", "tests.legacy.test_client_server.ClientServerTestsMixin.start_client.start_client"], "tests.legacy.test_client_server.ClientServerTestsMixin.stop_client": ["asyncio.wait_for"], "tests.legacy.test_client_server.with_manager": [], "tests.legacy.test_client_server.with_manager.decorate": ["functools.wraps"], "functools.wraps": [], "tests.legacy.test_client_server.with_manager.decorate._decorate": ["tests.legacy.test_client_server.temp_test_client", "tests.legacy.test_client_server.temp_test_server"], "tests.legacy.test_client_server.with_server": ["tests.legacy.test_client_server.with_manager"], "tests.legacy.test_client_server.with_client": ["tests.legacy.test_client_server.with_manager"], "tests.legacy.test_client_server.get_server_address": ["random.choice", "<builtin>.ValueError"], "random.choice": [], "<builtin>.ValueError": [], "tests.legacy.test_client_server.UnauthorizedServerProtocol.process_request": ["websockets.datastructures.Headers"], "tests.legacy.test_client_server.ForbiddenServerProtocol.process_request": [], "tests.legacy.test_client_server.HealthCheckServerProtocol.process_request": [], "tests.legacy.test_client_server.SlowOpeningHandshakeProtocol.process_request": ["asyncio.sleep"], "tests.legacy.test_client_server.ClientServerTestsMixin.setUp": ["<builtin>.super"], "tests.legacy.test_client_server.ClientServerTestsMixin.start_server.start_server": [], "tests.legacy.test_client_server.ClientServerTestsMixin.start_client.start_client": [], "asyncio.wait_for": [], "tests.legacy.test_client_server.ClientServerTestsMixin": ["contextlib.contextmanager"], "tests.legacy.test_client_server.ClientServerTestsMixin.temp_server": ["tests.legacy.test_client_server.temp_test_server"], "tests.legacy.test_client_server.ClientServerTestsMixin.temp_client": ["tests.legacy.test_client_server.temp_test_client"], "tests.legacy.test_client_server.ClientServerTestsMixin.make_http_request": ["tests.legacy.test_client_server.get_server_uri", "functools.partial"], "tests.legacy.test_client_server.SecureClientServerTestsMixin.server_context": ["ssl.SSLContext"], "ssl.SSLContext": [], "tests.legacy.test_client_server.SecureClientServerTestsMixin.client_context": ["ssl.SSLContext"], "tests.legacy.test_client_server.SecureClientServerTestsMixin.start_client": ["<builtin>.super"], "tests.legacy.test_client_server.CommonClientServerTests": ["unittest.mock.patch.object", "tests.legacy.test_client_server.with_server", "tests.legacy.test_client_server.with_manager.decorate", "tests.legacy.test_client_server.with_client", "<builtin>.hasattr", "unittest.skipUnless", "unittest.mock.patch"], "tests.legacy.test_client_server.CommonClientServerTests.test_basic": [], "tests.legacy.test_client_server.CommonClientServerTests.test_redirect": ["tests.legacy.test_client_server.temp_test_redirecting_server"], "tests.legacy.test_client_server.CommonClientServerTests.test_redirect_relative_location": ["tests.legacy.test_client_server.temp_test_redirecting_server"], "tests.legacy.test_client_server.CommonClientServerTests.test_infinite_redirect": ["tests.legacy.test_client_server.temp_test_redirecting_server"], "tests.legacy.test_client_server.CommonClientServerTests.test_redirect_missing_location": ["tests.legacy.test_client_server.temp_test_redirecting_server"], "tests.legacy.test_client_server.CommonClientServerTests.test_loop_backwards_compatibility": [], "tests.legacy.test_client_server.CommonClientServerTests.test_explicit_host_port": ["tests.legacy.test_client_server.get_server_uri", "websockets.uri.parse_uri", "<builtin>.str"], "tests.legacy.test_client_server.CommonClientServerTests.test_explicit_socket": ["tests.legacy.test_client_server.CommonClientServerTests.test_explicit_socket.TrackedSocket.__init__"], "tests.legacy.test_client_server.CommonClientServerTests.test_explicit_socket.TrackedSocket.__init__": ["<builtin>.super"], "tests.legacy.test_client_server.CommonClientServerTests.test_explicit_socket.TrackedSocket.recv": ["<builtin>.super"], "tests.legacy.test_client_server.CommonClientServerTests.test_explicit_socket.TrackedSocket.recv_into": ["<builtin>.super"], "tests.legacy.test_client_server.CommonClientServerTests.test_explicit_socket.TrackedSocket.send": ["<builtin>.super"], "<builtin>.hasattr": [], "unittest.skipUnless": [], "tests.legacy.test_client_server.CommonClientServerTests.test_unix_socket": ["<builtin>.bytes", "tempfile.TemporaryDirectory", "tests.legacy.test_client_server.CommonClientServerTests.test_unix_socket.start_server", "tests.legacy.test_client_server.CommonClientServerTests.test_unix_socket.start_client", "pathlib.Path"], "tempfile.TemporaryDirectory": [], "tests.legacy.test_client_server.CommonClientServerTests.test_unix_socket.start_server": [], "tests.legacy.test_client_server.CommonClientServerTests.test_unix_socket.start_client": [], "tests.legacy.test_client_server.CommonClientServerTests.test_ws_handler_argument_backwards_compatibility": [], "tests.legacy.test_client_server.CommonClientServerTests.test_ws_handler_argument_backwards_compatibility.handler_with_path": [], "tests.legacy.test_client_server.CommonClientServerTests.test_ws_handler_argument_backwards_compatibility_partial": ["functools.partial"], "tests.legacy.test_client_server.CommonClientServerTests.test_ws_handler_argument_backwards_compatibility_partial.handler_with_path": [], "tests.legacy.test_client_server.CommonClientServerTests.process_request_OK": [], "tests.legacy.test_client_server.CommonClientServerTests.test_process_request_argument": ["contextlib.closing"], "contextlib.closing": [], "tests.legacy.test_client_server.CommonClientServerTests.legacy_process_request_OK": [], "tests.legacy.test_client_server.CommonClientServerTests.test_process_request_argument_backwards_compatibility": ["warnings.catch_warnings", "contextlib.closing", "warnings.simplefilter"], "tests.legacy.test_client_server.CommonClientServerTests.ProcessRequestOKServerProtocol.process_request": [], "tests.legacy.test_client_server.CommonClientServerTests.test_process_request_override": ["contextlib.closing"], "tests.legacy.test_client_server.CommonClientServerTests.LegacyProcessRequestOKServerProtocol.process_request": [], "tests.legacy.test_client_server.CommonClientServerTests.test_process_request_override_backwards_compatibility": ["warnings.catch_warnings", "contextlib.closing", "warnings.simplefilter"], "tests.legacy.test_client_server.CommonClientServerTests.select_subprotocol_chat": [], "tests.legacy.test_client_server.CommonClientServerTests.test_select_subprotocol_argument": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.SelectSubprotocolChatServerProtocol.select_subprotocol": [], "tests.legacy.test_client_server.CommonClientServerTests.test_select_subprotocol_override": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_deprecated_attributes": ["warnings.catch_warnings", "warnings.simplefilter", "<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_path": [], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_headers": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_custom_request_headers": [], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_custom_user_agent_header_legacy": [], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_no_user_agent_header": [], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_custom_user_agent_header": [], "tests.legacy.test_client_server.CommonClientServerTests.<lambda1>": [], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_custom_response_headers_callable": [], "tests.legacy.test_client_server.CommonClientServerTests.<lambda2>": [], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_custom_response_headers_callable_none": [], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_custom_response_headers": [], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_custom_server_header_legacy": [], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_no_server_header": [], "tests.legacy.test_client_server.CommonClientServerTests.test_protocol_custom_server_header": [], "tests.legacy.test_client_server.CommonClientServerTests.test_http_request_http_endpoint": ["contextlib.closing"], "tests.legacy.test_client_server.CommonClientServerTests.test_http_request_ws_endpoint": [], "tests.legacy.test_client_server.CommonClientServerTests.test_ws_connection_http_endpoint": [], "tests.legacy.test_client_server.CommonClientServerTests.test_ws_connection_ws_endpoint": [], "tests.legacy.test_client_server.CommonClientServerTests.test_http_request_no_server_header": ["contextlib.closing"], "tests.legacy.test_client_server.CommonClientServerTests.test_http_request_custom_server_header": ["contextlib.closing"], "tests.legacy.test_client_server.CommonClientServerTests.assert_client_raises_code": [], "tests.legacy.test_client_server.CommonClientServerTests.test_server_create_protocol": ["tests.legacy.test_client_server.CommonClientServerTests.assert_client_raises_code"], "tests.legacy.test_client_server.CommonClientServerTests.create_unauthorized_server_protocol": [], "tests.legacy.test_client_server.CommonClientServerTests.test_server_create_protocol_function": ["tests.legacy.test_client_server.CommonClientServerTests.assert_client_raises_code"], "tests.legacy.test_client_server.CommonClientServerTests.test_server_klass_backwards_compatibility": ["tests.legacy.test_client_server.CommonClientServerTests.assert_client_raises_code"], "tests.legacy.test_client_server.CommonClientServerTests.test_server_create_protocol_over_klass": ["tests.legacy.test_client_server.CommonClientServerTests.assert_client_raises_code"], "tests.legacy.test_client_server.CommonClientServerTests.test_client_create_protocol": [], "tests.legacy.test_client_server.CommonClientServerTests.<lambda3>": [], "tests.legacy.test_client_server.CommonClientServerTests.test_client_create_protocol_function": [], "tests.legacy.test_client_server.CommonClientServerTests.test_client_klass": [], "tests.legacy.test_client_server.CommonClientServerTests.test_client_create_protocol_over_klass": [], "tests.legacy.test_client_server.CommonClientServerTests.test_server_close_timeout": ["<builtin>.eval"], "tests.legacy.test_client_server.CommonClientServerTests.test_server_timeout_backwards_compatibility": ["<builtin>.eval"], "tests.legacy.test_client_server.CommonClientServerTests.test_server_close_timeout_over_timeout": ["<builtin>.eval"], "tests.legacy.test_client_server.CommonClientServerTests.test_client_close_timeout": [], "tests.legacy.test_client_server.CommonClientServerTests.test_client_timeout_backwards_compatibility": [], "tests.legacy.test_client_server.CommonClientServerTests.test_client_close_timeout_over_timeout": [], "tests.legacy.test_client_server.CommonClientServerTests.test_no_extension": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_extension": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_extension_not_accepted": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_extension_not_requested": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_extension_client_rejection": [], "tests.legacy.test_client_server.CommonClientServerTests.test_extension_no_match_then_match": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_extension_mismatch": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_extension_order": ["<builtin>.repr"], "unittest.mock.patch.object": [], "tests.legacy.test_client_server.CommonClientServerTests.test_extensions_error": ["extensions.utils.NoOpExtension"], "extensions.utils.NoOpExtension": [], "tests.legacy.test_client_server.CommonClientServerTests.test_extensions_error_no_extensions": ["extensions.utils.NoOpExtension"], "tests.legacy.test_client_server.CommonClientServerTests.test_compression_deflate": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_compression_unsupported_server": [], "tests.legacy.test_client_server.CommonClientServerTests.test_compression_unsupported_client": [], "tests.legacy.test_client_server.CommonClientServerTests.test_no_subprotocol": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_subprotocol": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_invalid_subprotocol_server": [], "tests.legacy.test_client_server.CommonClientServerTests.test_invalid_subprotocol_client": [], "tests.legacy.test_client_server.CommonClientServerTests.test_subprotocol_not_accepted": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_subprotocol_not_offered": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_subprotocol_not_requested": ["<builtin>.repr"], "tests.legacy.test_client_server.CommonClientServerTests.test_subprotocol_error": [], "tests.legacy.test_client_server.CommonClientServerTests.test_subprotocol_error_no_subprotocols": [], "tests.legacy.test_client_server.CommonClientServerTests.test_subprotocol_error_two_subprotocols": [], "tests.legacy.test_client_server.CommonClientServerTests.test_server_receives_malformed_request": ["<builtin>.ValueError"], "tests.legacy.test_client_server.CommonClientServerTests.test_client_receives_malformed_response": ["<builtin>.ValueError"], "tests.legacy.test_client_server.CommonClientServerTests.test_client_sends_invalid_handshake_request": [], "tests.legacy.test_client_server.CommonClientServerTests.test_client_sends_invalid_handshake_request.wrong_build_request": [], "tests.legacy.test_client_server.CommonClientServerTests.test_server_sends_invalid_handshake_response": [], "tests.legacy.test_client_server.CommonClientServerTests.test_server_sends_invalid_handshake_response.wrong_build_response": ["websockets.legacy.handshake.build_response"], "websockets.legacy.handshake.build_response": [], "tests.legacy.test_client_server.CommonClientServerTests.test_server_does_not_switch_protocols": [], "tests.legacy.test_client_server.CommonClientServerTests.test_server_does_not_switch_protocols.wrong_read_response": ["websockets.legacy.http.read_response"], "websockets.legacy.http.read_response": [], "tests.legacy.test_client_server.CommonClientServerTests.test_server_error_in_handshake": ["<builtin>.Exception"], "tests.legacy.test_client_server.CommonClientServerTests.test_client_connect_canceled_during_handshake": ["tests.legacy.test_client_server.get_server_address", "tests.legacy.test_client_server.CommonClientServerTests.test_client_connect_canceled_during_handshake.cancelled_client", "socket.create_connection"], "socket.create_connection": [], "tests.legacy.test_client_server.CommonClientServerTests.test_client_connect_canceled_during_handshake.cancelled_client": ["tests.legacy.test_client_server.get_server_uri", "asyncio.wait_for"], "tests.legacy.test_client_server.CommonClientServerTests.test_server_handler_crashes": ["<builtin>.ValueError"], "tests.legacy.test_client_server.CommonClientServerTests.test_server_close_crashes": ["<builtin>.ValueError"], "tests.legacy.test_client_server.CommonClientServerTests.test_client_closes_connection_before_handshake": [], "tests.legacy.test_client_server.CommonClientServerTests.test_server_shuts_down_during_opening_handshake": ["<builtin>.str"], "tests.legacy.test_client_server.CommonClientServerTests.test_server_shuts_down_during_connection_handling": ["<builtin>.next", "<builtin>.iter"], "tests.legacy.test_client_server.CommonClientServerTests.test_server_shuts_down_gracefully_during_connection_handling": ["<builtin>.next", "<builtin>.iter"], "tests.legacy.test_client_server.CommonClientServerTests.test_server_shuts_down_and_waits_until_handlers_terminate": ["<builtin>.next", "<builtin>.iter", "asyncio.sleep"], "tests.legacy.test_client_server.CommonClientServerTests.test_invalid_status_error_during_client_connect": ["<builtin>.str"], "tests.legacy.test_client_server.CommonClientServerTests.test_connection_error_during_opening_handshake": [], "tests.legacy.test_client_server.CommonClientServerTests.test_connection_error_during_closing_handshake": [], "tests.legacy.test_client_server.SecureClientServerTests": ["tests.legacy.test_client_server.with_manager.decorate", "platform.python_implementation", "tests.legacy.test_client_server.with_server"], "tests.legacy.test_client_server.SecureClientServerTests.test_ws_uri_is_rejected": ["tests.legacy.test_client_server.get_server_uri", "tests.legacy.test_client_server.SecureClientServerTestsMixin.start_client", "utils.AsyncioTestCase.assertRaises"], "utils.AsyncioTestCase.assertRaises": [], "tests.legacy.test_client_server.SecureClientServerTests.test_redirect_insecure": ["tests.legacy.test_client_server.ClientServerTestsMixin.temp_client", "utils.AsyncioTestCase.fail", "utils.AsyncioTestCase.assertRaises", "tests.legacy.test_client_server.temp_test_redirecting_server"], "utils.AsyncioTestCase.fail": [], "tests.legacy.test_client_server.ClientServerOriginTests": ["tests.legacy.test_client_server.with_manager.decorate", "tests.legacy.test_client_server.with_client", "tests.legacy.test_client_server.with_server"], "tests.legacy.test_client_server.ClientServerOriginTests.test_checking_origin_succeeds": ["utils.AsyncioTestCase.loop.run_until_complete", "utils.AsyncioTestCase.assertEqual"], "utils.AsyncioTestCase.loop.run_until_complete": [], "utils.AsyncioTestCase.assertEqual": [], "tests.legacy.test_client_server.ClientServerOriginTests.test_checking_origin_fails": ["utils.AsyncioTestCase.assertRaisesRegex", "tests.legacy.test_client_server.ClientServerTestsMixin.start_client"], "utils.AsyncioTestCase.assertRaisesRegex": [], "tests.legacy.test_client_server.ClientServerOriginTests.test_checking_origins_fails_with_multiple_headers": ["utils.AsyncioTestCase.assertRaisesRegex", "tests.legacy.test_client_server.ClientServerTestsMixin.start_client"], "tests.legacy.test_client_server.ClientServerOriginTests.test_checking_lack_of_origin_succeeds": ["utils.AsyncioTestCase.loop.run_until_complete", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_client_server.ClientServerOriginTests.test_checking_lack_of_origin_succeeds_backwards_compatibility": ["utils.AsyncioTestCase.loop.run_until_complete", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_client_server.YieldFromTests": ["tests.legacy.test_client_server.with_manager.decorate", "tests.legacy.test_client_server.with_server"], "tests.legacy.test_client_server.YieldFromTests.test_client": ["utils.AsyncioTestCase.loop.run_until_complete", "asyncio.coroutine", "tests.legacy.test_client_server.YieldFromTests.test_client.run_client", "warnings.simplefilter", "warnings.catch_warnings"], "asyncio.coroutine": [], "tests.legacy.test_client_server.YieldFromTests.test_client.run_client": ["tests.legacy.test_client_server.get_server_uri", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_client_server.YieldFromTests.test_server": ["utils.AsyncioTestCase.loop.run_until_complete", "asyncio.coroutine", "tests.legacy.test_client_server.YieldFromTests.test_server.run_server", "warnings.simplefilter", "warnings.catch_warnings"], "tests.legacy.test_client_server.YieldFromTests.test_server.run_server": ["utils.AsyncioTestCase.assertTrue", "utils.AsyncioTestCase.assertFalse"], "utils.AsyncioTestCase.assertTrue": [], "utils.AsyncioTestCase.assertFalse": [], "tests.legacy.test_client_server.AsyncAwaitTests": ["tests.legacy.test_client_server.with_manager.decorate", "tests.legacy.test_client_server.with_server"], "tests.legacy.test_client_server.AsyncAwaitTests.test_client": ["tests.legacy.test_client_server.AsyncAwaitTests.test_client.run_client", "utils.AsyncioTestCase.loop.run_until_complete"], "tests.legacy.test_client_server.AsyncAwaitTests.test_client.run_client": ["tests.legacy.test_client_server.get_server_uri", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_client_server.AsyncAwaitTests.test_server": ["utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_client_server.AsyncAwaitTests.test_server.run_server"], "tests.legacy.test_client_server.AsyncAwaitTests.test_server.run_server": ["utils.AsyncioTestCase.assertTrue", "utils.AsyncioTestCase.assertFalse"], "tests.legacy.test_client_server.ContextManagerTests": ["tests.legacy.test_client_server.with_manager.decorate", "<builtin>.hasattr", "unittest.skipUnless", "tests.legacy.test_client_server.with_server"], "tests.legacy.test_client_server.ContextManagerTests.test_client": ["utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_client_server.ContextManagerTests.test_client.run_client"], "tests.legacy.test_client_server.ContextManagerTests.test_client.run_client": ["tests.legacy.test_client_server.get_server_uri", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_client_server.ContextManagerTests.test_server": ["utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_client_server.ContextManagerTests.test_server.run_server"], "tests.legacy.test_client_server.ContextManagerTests.test_server.run_server": ["utils.AsyncioTestCase.assertTrue", "utils.AsyncioTestCase.assertFalse"], "tests.legacy.test_client_server.ContextManagerTests.test_unix_server": ["utils.AsyncioTestCase.loop.run_until_complete", "<builtin>.bytes", "tempfile.TemporaryDirectory", "pathlib.Path", "tests.legacy.test_client_server.ContextManagerTests.test_unix_server.run_server"], "tests.legacy.test_client_server.ContextManagerTests.test_unix_server.run_server": ["utils.AsyncioTestCase.assertTrue", "utils.AsyncioTestCase.assertFalse"], "tests.legacy.test_client_server.AsyncIteratorTests.echo_handler": ["utils.AsyncioTestCase.send"], "utils.AsyncioTestCase.send": [], "tests.legacy.test_client_server.AsyncIteratorTests": ["tests.legacy.test_client_server.with_manager.decorate", "tests.legacy.test_client_server.with_server"], "tests.legacy.test_client_server.AsyncIteratorTests.test_iterate_on_messages": ["utils.AsyncioTestCase.loop.run_until_complete", "utils.AsyncioTestCase.assertEqual", "tests.legacy.test_client_server.AsyncIteratorTests.test_iterate_on_messages.run_client"], "tests.legacy.test_client_server.AsyncIteratorTests.test_iterate_on_messages.run_client": ["tests.legacy.test_client_server.get_server_uri"], "tests.legacy.test_client_server.AsyncIteratorTests.echo_handler_1001": ["utils.AsyncioTestCase.close", "utils.AsyncioTestCase.send"], "utils.AsyncioTestCase.close": [], "tests.legacy.test_client_server.AsyncIteratorTests.test_iterate_on_messages_going_away_exit_ok": ["utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_client_server.AsyncIteratorTests.test_iterate_on_messages_going_away_exit_ok.run_client", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_client_server.AsyncIteratorTests.test_iterate_on_messages_going_away_exit_ok.run_client": ["tests.legacy.test_client_server.get_server_uri"], "tests.legacy.test_client_server.AsyncIteratorTests.echo_handler_1011": ["utils.AsyncioTestCase.close", "utils.AsyncioTestCase.send"], "tests.legacy.test_client_server.AsyncIteratorTests.test_iterate_on_messages_internal_error_exit_not_ok": ["utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_client_server.AsyncIteratorTests.test_iterate_on_messages_internal_error_exit_not_ok.run_client", "utils.AsyncioTestCase.assertRaises", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_client_server.AsyncIteratorTests.test_iterate_on_messages_internal_error_exit_not_ok.run_client": ["tests.legacy.test_client_server.get_server_uri"], "tests.legacy.test_client_server.ReconnectionTests.echo_handler": ["utils.AsyncioTestCase.send"], "tests.legacy.test_client_server.ReconnectionTests.maybe_service_unavailable": [], "tests.legacy.test_client_server.ReconnectionTests.disable_server": ["asyncio.sleep"], "tests.legacy.test_client_server.ReconnectionTests": ["tests.legacy.test_client_server.with_manager.decorate", "tests.legacy.test_client_server.with_server"], "tests.legacy.test_client_server.ReconnectionTests.test_reconnect": ["utils.AsyncioTestCase.loop.run_until_complete", "utils.AsyncioTestCase.assertEqual", "utils.AsyncioTestCase.assertLogs", "utils.AsyncioTestCase.assertRaisesRegex", "<builtin>.len", "tests.legacy.test_client_server.ReconnectionTests.test_reconnect.run_client"], "tests.legacy.test_client_server.ReconnectionTests.test_reconnect.run_client": ["tests.legacy.test_client_server.get_server_uri", "utils.AsyncioTestCase.assertEqual", "tests.legacy.test_client_server.ReconnectionTests.disable_server", "asyncio.create_task", "<builtin>.iter", "asyncio.sleep", "<builtin>.next", "utils.AsyncioTestCase.assertRaises", "<builtin>.Exception"], "asyncio.create_task": [], "utils.AsyncioTestCase.assertLogs": [], "tests.legacy.test_client_server.LoggerTests.test_logger_client": ["utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_client_server.ClientServerTestsMixin.start_server", "utils.AsyncioTestCase.assertLogs", "logging.getLogger", "tests.legacy.test_client_server.ClientServerTestsMixin.stop_server", "<builtin>.len", "tests.legacy.test_client_server.ClientServerTestsMixin.stop_client", "tests.legacy.test_client_server.ClientServerTestsMixin.start_client", "utils.AsyncioTestCase.assertGreater"], "utils.AsyncioTestCase.assertGreater": [], "tests.legacy.test_handshake": [], "tests.legacy.test_handshake.HandshakeTests.test_round_trip": ["unittest.TestCase.assertEqual", "websockets.datastructures.Headers"], "tests.legacy.test_handshake.HandshakeTests": ["contextlib.contextmanager"], "tests.legacy.test_handshake.HandshakeTests.assertValidRequestHeaders": ["websockets.datastructures.Headers"], "tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders": ["<builtin>.issubclass", "websockets.datastructures.Headers", "unittest.TestCase.assertRaises"], "tests.legacy.test_handshake.HandshakeTests.test_request_invalid_connection": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_missing_connection": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_additional_connection": ["tests.legacy.test_handshake.HandshakeTests.assertValidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_invalid_upgrade": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_missing_upgrade": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_additional_upgrade": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_invalid_key_not_base64": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_invalid_key_not_well_padded": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_invalid_key_not_16_bytes_long": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_missing_key": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_additional_key": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_invalid_version": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_missing_version": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_request_additional_version": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidRequestHeaders"], "tests.legacy.test_handshake.HandshakeTests.assertValidResponseHeaders": ["websockets.datastructures.Headers"], "tests.legacy.test_handshake.HandshakeTests.assertInvalidResponseHeaders": ["<builtin>.issubclass", "websockets.datastructures.Headers", "unittest.TestCase.assertRaises"], "tests.legacy.test_handshake.HandshakeTests.test_response_invalid_connection": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidResponseHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_response_missing_connection": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidResponseHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_response_additional_connection": ["tests.legacy.test_handshake.HandshakeTests.assertValidResponseHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_response_invalid_upgrade": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidResponseHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_response_missing_upgrade": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidResponseHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_response_additional_upgrade": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidResponseHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_response_invalid_accept": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidResponseHeaders", "websockets.utils.accept_key"], "tests.legacy.test_handshake.HandshakeTests.test_response_missing_accept": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidResponseHeaders"], "tests.legacy.test_handshake.HandshakeTests.test_response_additional_accept": ["tests.legacy.test_handshake.HandshakeTests.assertInvalidResponseHeaders"], "tests.legacy": [], "tests.legacy.test_http": [], "tests.legacy.test_http.HTTPAsyncTests.setUp": ["asyncio.StreamReader", "<builtin>.super"], "asyncio.StreamReader": [], "tests.legacy.test_http.HTTPAsyncTests.test_read_request": ["utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_http.HTTPAsyncTests.test_read_request_empty": ["utils.AsyncioTestCase.assertRaisesRegex"], "tests.legacy.test_http.HTTPAsyncTests.test_read_request_invalid_request_line": ["utils.AsyncioTestCase.assertRaisesRegex"], "tests.legacy.test_http.HTTPAsyncTests.test_read_request_unsupported_method": ["utils.AsyncioTestCase.assertRaisesRegex"], "tests.legacy.test_http.HTTPAsyncTests.test_read_request_unsupported_version": ["utils.AsyncioTestCase.assertRaisesRegex"], "tests.legacy.test_http.HTTPAsyncTests.test_read_request_invalid_header": ["utils.AsyncioTestCase.assertRaisesRegex"], "tests.legacy.test_http.HTTPAsyncTests.test_read_response": ["utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_http.HTTPAsyncTests.test_read_response_empty": ["utils.AsyncioTestCase.assertRaisesRegex"], "tests.legacy.test_http.HTTPAsyncTests.test_read_request_invalid_status_line": ["utils.AsyncioTestCase.assertRaisesRegex"], "tests.legacy.test_http.HTTPAsyncTests.test_read_response_unsupported_version": ["utils.AsyncioTestCase.assertRaisesRegex"], "tests.legacy.test_http.HTTPAsyncTests.test_read_response_invalid_status": ["utils.AsyncioTestCase.assertRaisesRegex"], "tests.legacy.test_http.HTTPAsyncTests.test_read_response_unsupported_status": ["utils.AsyncioTestCase.assertRaisesRegex"], "tests.legacy.test_http.HTTPAsyncTests.test_read_response_invalid_reason": ["utils.AsyncioTestCase.assertRaisesRegex"], "tests.legacy.test_http.HTTPAsyncTests.test_read_response_invalid_header": ["utils.AsyncioTestCase.assertRaisesRegex"], "tests.legacy.test_http.HTTPAsyncTests.test_header_name": ["websockets.legacy.http.read_headers", "utils.AsyncioTestCase.assertRaises"], "websockets.legacy.http.read_headers": [], "tests.legacy.test_http.HTTPAsyncTests.test_header_value": ["websockets.legacy.http.read_headers", "utils.AsyncioTestCase.assertRaises"], "tests.legacy.test_http.HTTPAsyncTests.test_headers_limit": ["websockets.legacy.http.read_headers", "utils.AsyncioTestCase.assertRaises"], "tests.legacy.test_http.HTTPAsyncTests.test_line_limit": ["websockets.legacy.http.read_headers", "utils.AsyncioTestCase.assertRaises"], "tests.legacy.test_http.HTTPAsyncTests.test_line_ending": ["websockets.legacy.http.read_headers", "utils.AsyncioTestCase.assertRaises"], "tests.legacy.test_framing": [], "tests.legacy.test_framing.FramingTests.decode": ["utils.AsyncioTestCase.loop.run_until_complete", "asyncio.StreamReader", "warnings.simplefilter", "warnings.catch_warnings", "utils.AsyncioTestCase.assertTrue"], "tests.legacy.test_framing.FramingTests.encode": ["unittest.mock.Mock", "utils.AsyncioTestCase.assertEqual", "<builtin>.len", "warnings.simplefilter", "warnings.catch_warnings"], "unittest.mock.Mock": [], "tests.legacy.test_framing.FramingTests.round_trip": ["tests.legacy.test_framing.FramingTests.decode", "tests.legacy.test_framing.FramingTests.encode", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_framing.FramingTests.test_text": ["tests.legacy.test_framing.FramingTests.round_trip"], "tests.legacy.test_framing.FramingTests.test_text_masked": ["tests.legacy.test_framing.FramingTests.round_trip"], "tests.legacy.test_framing.FramingTests.test_binary": ["tests.legacy.test_framing.FramingTests.round_trip"], "tests.legacy.test_framing.FramingTests.test_binary_masked": ["tests.legacy.test_framing.FramingTests.round_trip"], "tests.legacy.test_framing.FramingTests.test_non_ascii_text": ["tests.legacy.test_framing.FramingTests.round_trip"], "tests.legacy.test_framing.FramingTests.test_non_ascii_text_masked": ["tests.legacy.test_framing.FramingTests.round_trip"], "tests.legacy.test_framing.FramingTests.test_close": ["tests.legacy.test_framing.FramingTests.round_trip"], "tests.legacy.test_framing.FramingTests.test_ping": ["tests.legacy.test_framing.FramingTests.round_trip"], "tests.legacy.test_framing.FramingTests.test_pong": ["tests.legacy.test_framing.FramingTests.round_trip"], "tests.legacy.test_framing.FramingTests.test_long": ["tests.legacy.test_framing.FramingTests.round_trip"], "tests.legacy.test_framing.FramingTests.test_very_long": ["tests.legacy.test_framing.FramingTests.round_trip"], "tests.legacy.test_framing.FramingTests.test_payload_too_big": ["tests.legacy.test_framing.FramingTests.decode", "utils.AsyncioTestCase.assertRaises"], "tests.legacy.test_framing.FramingTests.test_bad_reserved_bits": ["tests.legacy.test_framing.FramingTests.decode", "utils.AsyncioTestCase.subTest", "utils.AsyncioTestCase.assertRaises"], "utils.AsyncioTestCase.subTest": [], "tests.legacy.test_framing.FramingTests.test_good_opcode": ["<builtin>.bytes", "tests.legacy.test_framing.FramingTests.decode", "utils.AsyncioTestCase.subTest", "<builtin>.range", "<builtin>.list"], "tests.legacy.test_framing.FramingTests.test_bad_opcode": ["<builtin>.bytes", "tests.legacy.test_framing.FramingTests.decode", "utils.AsyncioTestCase.subTest", "utils.AsyncioTestCase.assertRaises", "<builtin>.range", "<builtin>.list"], "tests.legacy.test_framing.FramingTests.test_mask_flag": ["tests.legacy.test_framing.FramingTests.decode", "utils.AsyncioTestCase.assertRaises"], "tests.legacy.test_framing.FramingTests.test_control_frame_max_length": ["tests.legacy.test_framing.FramingTests.decode", "utils.AsyncioTestCase.assertRaises"], "tests.legacy.test_framing.FramingTests.test_fragmented_control_frame": ["tests.legacy.test_framing.FramingTests.decode", "utils.AsyncioTestCase.assertRaises"], "tests.legacy.test_framing.FramingTests.test_extensions": ["tests.legacy.test_framing.FramingTests.round_trip"], "tests.legacy.test_framing.FramingTests.test_extensions.Rot13.encode": ["dataclasses.replace", "codecs.encode"], "tests.legacy.test_framing.FramingTests.test_extensions.Rot13.decode": ["tests.legacy.test_framing.FramingTests.test_extensions.Rot13.encode"], "tests.legacy.test_framing.ParseAndSerializeCloseTests.assertCloseData": ["unittest.TestCase.assertEqual"], "tests.legacy.test_framing.ParseAndSerializeCloseTests.test_parse_close_and_serialize_close": ["tests.legacy.test_framing.ParseAndSerializeCloseTests.assertCloseData"], "tests.legacy.test_framing.ParseAndSerializeCloseTests.test_parse_close_empty": ["unittest.TestCase.assertEqual"], "tests.legacy.test_framing.ParseAndSerializeCloseTests.test_parse_close_errors": ["unittest.TestCase.assertRaises"], "tests.legacy.test_framing.ParseAndSerializeCloseTests.test_serialize_close_errors": ["unittest.TestCase.assertRaises"], "tests.legacy.test_auth": ["pytest.mark.skip"], "tests.legacy.test_auth.AuthTests.test_is_credentials": ["websockets.legacy.auth.is_credentials", "unittest.TestCase.assertTrue"], "websockets.legacy.auth.is_credentials": [], "tests.legacy.test_auth.AuthTests.test_is_not_credentials": ["websockets.legacy.auth.is_credentials", "unittest.TestCase.assertFalse"], "tests.legacy.test_auth.CustomWebSocketServerProtocol.process_request": ["<builtin>.type", "<builtin>.super"], "tests.legacy.test_auth.CheckWebSocketServerProtocol.check_credentials": ["hmac.compare_digest"], "hmac.compare_digest": [], "test_client_server.with_server": [], "tests.legacy.test_auth.AuthClientServerTests": ["test_client_server.with_server", "test_client_server.with_client"], "test_client_server.with_client": [], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth": ["utils.AsyncioTestCase.loop.run_until_complete", "utils.AsyncioTestCase.assertEqual", "test_client_server.ClientServerTestsMixin.client.send", "test_client_server.ClientServerTestsMixin.client.recv", "test_client_server.ClientServerTestsMixin.assertNotIn"], "test_client_server.ClientServerTestsMixin.assertNotIn": [], "test_client_server.ClientServerTestsMixin.client.send": [], "test_client_server.ClientServerTestsMixin.client.recv": [], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_server_no_credentials": ["<builtin>.str", "utils.AsyncioTestCase.assertRaises", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_server_bad_credentials": ["<builtin>.str", "utils.AsyncioTestCase.assertRaises", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_server_multiple_credentials": ["test_client_server.ClientServerTestsMixin.client.send", "utils.AsyncioTestCase.loop.run_until_complete", "test_client_server.ClientServerTestsMixin.client.recv"], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_bad_multiple_credentials": ["<builtin>.str", "utils.AsyncioTestCase.assertRaises", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_auth.AuthClientServerTests.check_credentials": ["hmac.compare_digest"], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_check_credentials": ["test_client_server.ClientServerTestsMixin.client.send", "utils.AsyncioTestCase.loop.run_until_complete", "test_client_server.ClientServerTestsMixin.client.recv"], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_custom_protocol": ["utils.AsyncioTestCase.assertTrue", "test_client_server.ClientServerTestsMixin.client.send", "utils.AsyncioTestCase.loop.run_until_complete", "test_client_server.ClientServerTestsMixin.client.recv"], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_custom_protocol_subclass": ["test_client_server.ClientServerTestsMixin.client.send", "utils.AsyncioTestCase.loop.run_until_complete", "test_client_server.ClientServerTestsMixin.client.recv"], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_defaults_to_deny_all": ["test_client_server.ClientServerTestsMixin.start_client", "utils.AsyncioTestCase.assertRaises", "utils.AsyncioTestCase.assertEqual"], "test_client_server.ClientServerTestsMixin.start_client": [], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_missing_credentials": ["test_client_server.ClientServerTestsMixin.start_client", "utils.AsyncioTestCase.assertRaises", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_missing_credentials_details": ["test_client_server.ClientServerTestsMixin.make_http_request", "utils.AsyncioTestCase.loop.run_until_complete", "utils.AsyncioTestCase.assertRaises", "utils.AsyncioTestCase.assertEqual"], "test_client_server.ClientServerTestsMixin.make_http_request": [], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_unsupported_credentials": ["test_client_server.ClientServerTestsMixin.start_client", "utils.AsyncioTestCase.assertRaises", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_unsupported_credentials_details": ["test_client_server.ClientServerTestsMixin.make_http_request", "utils.AsyncioTestCase.loop.run_until_complete", "utils.AsyncioTestCase.assertRaises", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_invalid_username": ["test_client_server.ClientServerTestsMixin.start_client", "utils.AsyncioTestCase.assertRaises", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_invalid_password": ["test_client_server.ClientServerTestsMixin.start_client", "utils.AsyncioTestCase.assertRaises", "utils.AsyncioTestCase.assertEqual"], "tests.legacy.test_auth.AuthClientServerTests.test_basic_auth_invalid_credentials_details": ["utils.AsyncioTestCase.loop.run_until_complete", "utils.AsyncioTestCase.assertEqual", "websockets.headers.build_authorization_basic", "utils.AsyncioTestCase.assertRaises", "test_client_server.ClientServerTestsMixin.make_http_request"], "websockets.headers.build_authorization_basic": [], "tests.legacy.utils": ["<builtin>.max", "<builtin>.int", "time.get_clock_info", "os.environ.get", "platform.python_implementation"], "tests.legacy.utils.AsyncioTestCase.__init_subclass__": ["<builtin>.getattr", "unittest.defaultTestLoader.getTestCaseNames", "tests.legacy.utils.AsyncioTestCase.convert_async_to_sync", "<builtin>.setattr", "asyncio.iscoroutinefunction", "<builtin>.super"], "unittest.defaultTestLoader.getTestCaseNames": [], "<builtin>.getattr": [], "asyncio.iscoroutinefunction": [], "tests.legacy.utils.AsyncioTestCase.convert_async_to_sync": ["functools.wraps"], "<builtin>.setattr": [], "tests.legacy.utils.AsyncioTestCase.convert_async_to_sync.test_func": [], "tests.legacy.utils.AsyncioTestCase.setUp": ["asyncio.set_event_loop", "asyncio.new_event_loop", "<builtin>.super"], "asyncio.new_event_loop": [], "asyncio.set_event_loop": [], "tests.legacy.utils.AsyncioTestCase.tearDown": ["<builtin>.super"], "tests.legacy.utils.AsyncioTestCase.run_loop_once": [], "tests.legacy.utils.AsyncioTestCase": ["contextlib.contextmanager"], "tests.legacy.utils.AsyncioTestCase.assertNoLogs": ["logging.getLogger", "logging.getLevelName", "unittest.TestCase.assertEqual", "unittest.TestCase.assertLogs"], "logging.getLevelName": [], "tests.legacy.utils.AsyncioTestCase.assertDeprecationWarnings": ["unittest.TestCase.assertEqual", "<builtin>.str", "<builtin>.set", "<builtin>.type"], "os.environ.get": [], "<builtin>.int": [], "time.get_clock_info": [], "<builtin>.max": [], "tests.legacy.test_protocol": [], "tests.legacy.test_protocol.async_iterable": [], "tests.legacy.test_protocol.TransportMock.setup_mock": [], "tests.legacy.test_protocol.TransportMock.can_write_eof": [], "tests.legacy.test_protocol.TransportMock.write_eof": [], "tests.legacy.test_protocol.TransportMock.close": [], "tests.legacy.test_protocol.TransportMock.abort": [], "tests.legacy.test_protocol.CommonTests.setUp": ["tests.legacy.test_protocol.CommonTests.setUp.create_protocol", "unittest.mock.Mock.__init__", "tests.legacy.test_protocol.TransportMock.setup_mock", "<builtin>.super"], "tests.legacy.test_protocol.CommonTests.setUp.create_protocol": ["websockets.legacy.protocol.WebSocketCommonProtocol"], "websockets.legacy.protocol.WebSocketCommonProtocol": [], "unittest.mock.Mock.__init__": [], "tests.legacy.test_protocol.CommonTests.tearDown": ["<builtin>.super", "tests.legacy.test_protocol.TransportMock.close"], "tests.legacy.test_protocol.CommonTests.make_drain_slow": [], "tests.legacy.test_protocol.CommonTests.make_drain_slow.delayed_drain": ["asyncio.sleep", "websockets.legacy.compatibility.loop_if_py_lt_38"], "websockets.legacy.compatibility.loop_if_py_lt_38": [], "tests.legacy.test_protocol.CommonTests": ["websockets.frames.Close", "contextlib.contextmanager", "websockets.legacy.framing.Frame"], "websockets.legacy.framing.Frame": [], "tests.legacy.test_protocol.CommonTests.receive_frame": [], "tests.legacy.test_protocol.CommonTests.receive_eof": [], "tests.legacy.test_protocol.CommonTests.receive_eof_if_client": ["tests.legacy.test_protocol.CommonTests.receive_eof"], "tests.legacy.test_protocol.CommonTests.close_connection": ["tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.receive_eof_if_client", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent", "websockets.frames.Close", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.assertOneFrameSent": ["tests.legacy.test_protocol.CommonTests.last_sent_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.half_close_connection_local": ["websockets.frames.Close", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.half_close_connection_remote": ["tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent", "tests.legacy.test_protocol.CommonTests.make_drain_slow", "websockets.frames.Close", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.process_invalid_frames": ["tests.legacy.test_protocol.CommonTests.receive_eof"], "tests.legacy.test_protocol.CommonTests.sent_frames": ["asyncio.StreamReader", "websockets.legacy.framing.Frame.read"], "websockets.legacy.framing.Frame.read": [], "tests.legacy.test_protocol.CommonTests.last_sent_frame": ["<builtin>.len", "tests.legacy.test_protocol.CommonTests.sent_frames"], "tests.legacy.test_protocol.CommonTests.assertFramesSent": ["tests.legacy.test_protocol.CommonTests.sent_frames", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.assertNoFrameSent": ["tests.legacy.test_protocol.CommonTests.last_sent_frame"], "tests.legacy.test_protocol.CommonTests.assertConnectionClosed": [], "tests.legacy.test_protocol.CommonTests.assertConnectionFailed": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "websockets.frames.Close", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.assertCompletesWithin": [], "tests.legacy.test_protocol.CommonTests.test_timeout_backwards_compatibility": ["warnings.catch_warnings", "warnings.simplefilter", "tests.legacy.test_protocol.CommonTests.test_timeout_backwards_compatibility.create_protocol"], "tests.legacy.test_protocol.CommonTests.test_timeout_backwards_compatibility.create_protocol": ["websockets.legacy.protocol.WebSocketCommonProtocol"], "tests.legacy.test_protocol.CommonTests.test_loop_backwards_compatibility": ["warnings.catch_warnings", "warnings.simplefilter", "asyncio.new_event_loop", "websockets.legacy.protocol.WebSocketCommonProtocol"], "tests.legacy.test_protocol.CommonTests.test_local_address": ["unittest.mock.Mock"], "tests.legacy.test_protocol.CommonTests.test_local_address_before_connection": [], "tests.legacy.test_protocol.CommonTests.test_remote_address": ["unittest.mock.Mock"], "tests.legacy.test_protocol.CommonTests.test_remote_address_before_connection": [], "tests.legacy.test_protocol.CommonTests.test_open": ["tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_closed": ["tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_wait_closed": ["tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_close_code": ["tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_close_reason": ["tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_close_code_not_set": [], "tests.legacy.test_protocol.CommonTests.test_close_reason_not_set": [], "tests.legacy.test_protocol.CommonTests.test_recv_text": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_recv_binary": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_recv_on_closing_connection_local": ["tests.legacy.test_protocol.CommonTests.half_close_connection_local"], "tests.legacy.test_protocol.CommonTests.test_recv_on_closing_connection_remote": ["tests.legacy.test_protocol.CommonTests.half_close_connection_remote"], "tests.legacy.test_protocol.CommonTests.test_recv_on_closed_connection": ["tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_recv_protocol_error": ["tests.legacy.test_protocol.CommonTests.assertConnectionFailed", "tests.legacy.test_protocol.CommonTests.process_invalid_frames", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_recv_unicode_error": ["tests.legacy.test_protocol.CommonTests.assertConnectionFailed", "tests.legacy.test_protocol.CommonTests.process_invalid_frames", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_recv_text_payload_too_big": ["tests.legacy.test_protocol.CommonTests.assertConnectionFailed", "tests.legacy.test_protocol.CommonTests.process_invalid_frames", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_recv_binary_payload_too_big": ["tests.legacy.test_protocol.CommonTests.assertConnectionFailed", "tests.legacy.test_protocol.CommonTests.process_invalid_frames", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_recv_text_no_max_size": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_recv_binary_no_max_size": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_recv_queue_empty": ["tests.legacy.test_protocol.CommonTests.receive_frame", "asyncio.shield", "websockets.legacy.framing.Frame", "asyncio.wait_for"], "asyncio.shield": [], "tests.legacy.test_protocol.CommonTests.test_recv_queue_full": ["<builtin>.list", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_recv_queue_no_limit": ["<builtin>.list", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame", "<builtin>.range"], "tests.legacy.test_protocol.CommonTests.test_recv_other_error": ["tests.legacy.test_protocol.CommonTests.assertConnectionFailed", "tests.legacy.test_protocol.CommonTests.process_invalid_frames"], "tests.legacy.test_protocol.CommonTests.test_recv_other_error.read_message": ["<builtin>.Exception"], "tests.legacy.test_protocol.CommonTests.test_recv_canceled": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_recv_canceled_race_condition": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame", "asyncio.wait_for"], "tests.legacy.test_protocol.CommonTests.test_recv_when_transfer_data_cancelled": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_recv_prevents_concurrent_calls": ["<builtin>.str"], "tests.legacy.test_protocol.CommonTests.test_send_text": ["tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_send_binary": ["tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_send_binary_from_bytearray": ["<builtin>.bytearray", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_send_binary_from_memoryview": ["<builtin>.memoryview", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_send_dict": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent"], "tests.legacy.test_protocol.CommonTests.test_send_type_error": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent"], "tests.legacy.test_protocol.CommonTests.test_send_iterable_text": ["tests.legacy.test_protocol.CommonTests.assertFramesSent"], "tests.legacy.test_protocol.CommonTests.test_send_iterable_binary": ["tests.legacy.test_protocol.CommonTests.assertFramesSent"], "tests.legacy.test_protocol.CommonTests.test_send_iterable_binary_from_bytearray": ["tests.legacy.test_protocol.CommonTests.assertFramesSent"], "tests.legacy.test_protocol.CommonTests.test_send_iterable_binary_from_memoryview": ["tests.legacy.test_protocol.CommonTests.assertFramesSent"], "tests.legacy.test_protocol.CommonTests.test_send_empty_iterable": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent"], "tests.legacy.test_protocol.CommonTests.test_send_iterable_type_error": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent"], "tests.legacy.test_protocol.CommonTests.test_send_iterable_mixed_type_error": ["websockets.frames.Close", "tests.legacy.test_protocol.CommonTests.assertFramesSent"], "tests.legacy.test_protocol.CommonTests.test_send_iterable_prevents_concurrent_send": ["tests.legacy.test_protocol.CommonTests.make_drain_slow", "tests.legacy.test_protocol.CommonTests.test_send_iterable_prevents_concurrent_send.run_concurrently", "tests.legacy.test_protocol.CommonTests.assertFramesSent"], "tests.legacy.test_protocol.CommonTests.test_send_iterable_prevents_concurrent_send.send_iterable": [], "tests.legacy.test_protocol.CommonTests.test_send_iterable_prevents_concurrent_send.send_concurrent": ["asyncio.sleep"], "tests.legacy.test_protocol.CommonTests.test_send_iterable_prevents_concurrent_send.run_concurrently": ["asyncio.gather", "tests.legacy.test_protocol.CommonTests.test_send_iterable_prevents_concurrent_send.send_concurrent", "tests.legacy.test_protocol.CommonTests.test_send_iterable_prevents_concurrent_send.send_iterable"], "asyncio.gather": [], "tests.legacy.test_protocol.CommonTests.test_send_async_iterable_text": ["tests.legacy.test_protocol.CommonTests.assertFramesSent", "tests.legacy.test_protocol.async_iterable"], "tests.legacy.test_protocol.CommonTests.test_send_async_iterable_binary": ["tests.legacy.test_protocol.CommonTests.assertFramesSent", "tests.legacy.test_protocol.async_iterable"], "tests.legacy.test_protocol.CommonTests.test_send_async_iterable_binary_from_bytearray": ["tests.legacy.test_protocol.CommonTests.assertFramesSent", "tests.legacy.test_protocol.async_iterable"], "tests.legacy.test_protocol.CommonTests.test_send_async_iterable_binary_from_memoryview": ["tests.legacy.test_protocol.CommonTests.assertFramesSent", "tests.legacy.test_protocol.async_iterable"], "tests.legacy.test_protocol.CommonTests.test_send_empty_async_iterable": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.async_iterable"], "tests.legacy.test_protocol.CommonTests.test_send_async_iterable_type_error": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.async_iterable"], "tests.legacy.test_protocol.CommonTests.test_send_async_iterable_mixed_type_error": ["websockets.frames.Close", "tests.legacy.test_protocol.CommonTests.assertFramesSent", "tests.legacy.test_protocol.async_iterable"], "tests.legacy.test_protocol.CommonTests.test_send_async_iterable_prevents_concurrent_send": ["tests.legacy.test_protocol.CommonTests.make_drain_slow", "tests.legacy.test_protocol.CommonTests.test_send_async_iterable_prevents_concurrent_send.run_concurrently", "tests.legacy.test_protocol.CommonTests.assertFramesSent"], "tests.legacy.test_protocol.CommonTests.test_send_async_iterable_prevents_concurrent_send.send_async_iterable": ["tests.legacy.test_protocol.async_iterable"], "tests.legacy.test_protocol.CommonTests.test_send_async_iterable_prevents_concurrent_send.send_concurrent": ["asyncio.sleep"], "tests.legacy.test_protocol.CommonTests.test_send_async_iterable_prevents_concurrent_send.run_concurrently": ["tests.legacy.test_protocol.CommonTests.test_send_async_iterable_prevents_concurrent_send.send_async_iterable", "tests.legacy.test_protocol.CommonTests.test_send_async_iterable_prevents_concurrent_send.send_concurrent", "asyncio.gather"], "tests.legacy.test_protocol.CommonTests.test_send_on_closing_connection_local": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.half_close_connection_local"], "tests.legacy.test_protocol.CommonTests.test_send_on_closing_connection_remote": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.half_close_connection_remote"], "tests.legacy.test_protocol.CommonTests.test_send_on_closed_connection": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_ping_default": ["<builtin>.next", "<builtin>.iter", "<builtin>.len", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_ping_text": ["tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_ping_binary": ["tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_ping_binary_from_bytearray": ["<builtin>.bytearray", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_ping_binary_from_memoryview": ["<builtin>.memoryview", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_ping_type_error": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent"], "tests.legacy.test_protocol.CommonTests.test_ping_on_closing_connection_local": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.half_close_connection_local"], "tests.legacy.test_protocol.CommonTests.test_ping_on_closing_connection_remote": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.half_close_connection_remote"], "tests.legacy.test_protocol.CommonTests.test_ping_on_closed_connection": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_pong_default": ["tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_pong_text": ["tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_pong_binary": ["tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_pong_binary_from_bytearray": ["<builtin>.bytearray", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_pong_binary_from_memoryview": ["<builtin>.memoryview", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_pong_type_error": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent"], "tests.legacy.test_protocol.CommonTests.test_pong_on_closing_connection_local": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.half_close_connection_local"], "tests.legacy.test_protocol.CommonTests.test_pong_on_closing_connection_remote": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.half_close_connection_remote"], "tests.legacy.test_protocol.CommonTests.test_pong_on_closed_connection": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_answer_ping": ["tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_answer_ping_does_not_crash_if_connection_closing": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame", "tests.legacy.test_protocol.CommonTests.half_close_connection_local"], "tests.legacy.test_protocol.CommonTests.test_answer_ping_does_not_crash_if_connection_closed": ["tests.legacy.test_protocol.CommonTests.make_drain_slow", "tests.legacy.test_protocol.CommonTests.receive_eof", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_ignore_pong": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_acknowledge_ping": ["tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.last_sent_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_abort_ping": ["tests.legacy.test_protocol.CommonTests.last_sent_frame", "tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_abort_ping_does_not_log_exception_if_not_retreived": ["tests.legacy.test_protocol.CommonTests.last_sent_frame", "tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_acknowledge_previous_pings": ["tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.last_sent_frame", "websockets.legacy.framing.Frame", "<builtin>.range"], "tests.legacy.test_protocol.CommonTests.test_acknowledge_aborted_ping": ["tests.legacy.test_protocol.CommonTests.receive_eof", "tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.last_sent_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_canceled_ping": ["tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.last_sent_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_duplicate_ping": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_record_latency_on_pong": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_return_latency_on_pong": ["tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.last_sent_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_fragmented_text": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_fragmented_binary": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_fragmented_text_payload_too_big": ["tests.legacy.test_protocol.CommonTests.assertConnectionFailed", "tests.legacy.test_protocol.CommonTests.process_invalid_frames", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_fragmented_binary_payload_too_big": ["tests.legacy.test_protocol.CommonTests.assertConnectionFailed", "tests.legacy.test_protocol.CommonTests.process_invalid_frames", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_fragmented_text_no_max_size": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_fragmented_binary_no_max_size": ["tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_control_frame_within_fragmented_text": ["tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_unterminated_fragmented_text": ["tests.legacy.test_protocol.CommonTests.assertConnectionFailed", "tests.legacy.test_protocol.CommonTests.process_invalid_frames", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_close_handshake_in_fragmented_text": ["tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.process_invalid_frames", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_connection_close_in_fragmented_text": ["tests.legacy.test_protocol.CommonTests.assertConnectionFailed", "tests.legacy.test_protocol.CommonTests.process_invalid_frames", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_connection_lost": ["tests.legacy.test_protocol.CommonTests.assertConnectionFailed"], "tests.legacy.test_protocol.CommonTests.test_ensure_open_before_opening_handshake": [], "tests.legacy.test_protocol.CommonTests.test_ensure_open_during_unclean_close": [], "tests.legacy.test_protocol.CommonTests.test_legacy_recv": ["tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_connection_closed_attributes": ["tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.restart_protocol_with_keepalive_ping": ["unittest.mock.Mock.__init__", "tests.legacy.test_protocol.TransportMock.setup_mock", "tests.legacy.test_protocol.CommonTests.restart_protocol_with_keepalive_ping.create_protocol", "tests.legacy.test_protocol.TransportMock.close"], "tests.legacy.test_protocol.CommonTests.restart_protocol_with_keepalive_ping.create_protocol": ["websockets.legacy.protocol.WebSocketCommonProtocol"], "tests.legacy.test_protocol.CommonTests.test_keepalive_ping": ["tests.legacy.test_protocol.CommonTests.restart_protocol_with_keepalive_ping", "tests.legacy.test_protocol.CommonTests.receive_frame", "<builtin>.tuple", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent", "asyncio.sleep", "websockets.legacy.framing.Frame"], "<builtin>.tuple": [], "tests.legacy.test_protocol.CommonTests.test_keepalive_ping_not_acknowledged_closes_connection": ["tests.legacy.test_protocol.CommonTests.restart_protocol_with_keepalive_ping", "<builtin>.tuple", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent", "websockets.frames.Close", "asyncio.sleep"], "tests.legacy.test_protocol.CommonTests.test_keepalive_ping_stops_when_connection_closing": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.restart_protocol_with_keepalive_ping", "asyncio.sleep", "tests.legacy.test_protocol.CommonTests.half_close_connection_local"], "tests.legacy.test_protocol.CommonTests.test_keepalive_ping_stops_when_connection_closed": ["tests.legacy.test_protocol.CommonTests.restart_protocol_with_keepalive_ping", "tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_keepalive_ping_does_not_crash_when_connection_lost": ["tests.legacy.test_protocol.CommonTests.restart_protocol_with_keepalive_ping", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame", "asyncio.sleep", "tests.legacy.test_protocol.CommonTests.receive_eof"], "tests.legacy.test_protocol.CommonTests.test_keepalive_ping_with_no_ping_interval": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.restart_protocol_with_keepalive_ping", "asyncio.sleep"], "tests.legacy.test_protocol.CommonTests.test_keepalive_ping_with_no_ping_timeout": ["tests.legacy.test_protocol.CommonTests.restart_protocol_with_keepalive_ping", "asyncio.sleep", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent", "<builtin>.tuple"], "tests.legacy.test_protocol.CommonTests.test_keepalive_ping_unexpected_error": ["tests.legacy.test_protocol.CommonTests.restart_protocol_with_keepalive_ping", "asyncio.sleep"], "tests.legacy.test_protocol.CommonTests.test_keepalive_ping_unexpected_error.ping": ["<builtin>.Exception"], "tests.legacy.test_protocol.CommonTests.test_local_close": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_remote_close": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_remote_close_and_connection_lost": ["tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent", "tests.legacy.test_protocol.CommonTests.make_drain_slow", "tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.receive_eof"], "tests.legacy.test_protocol.CommonTests.test_simultaneous_close": ["tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_close_preserves_incoming_frames": ["tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent", "websockets.legacy.framing.Frame"], "tests.legacy.test_protocol.CommonTests.test_close_protocol_error": ["tests.legacy.test_protocol.CommonTests.assertConnectionFailed", "tests.legacy.test_protocol.CommonTests.receive_frame", "websockets.legacy.framing.Frame", "tests.legacy.test_protocol.CommonTests.receive_eof_if_client"], "tests.legacy.test_protocol.CommonTests.test_close_connection_lost": ["tests.legacy.test_protocol.CommonTests.assertConnectionFailed", "tests.legacy.test_protocol.CommonTests.receive_eof"], "tests.legacy.test_protocol.CommonTests.test_local_close_during_recv": ["tests.legacy.test_protocol.CommonTests.assertConnectionClosed"], "tests.legacy.test_protocol.CommonTests.test_remote_close_during_send": ["tests.legacy.test_protocol.CommonTests.make_drain_slow", "tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.receive_eof"], "tests.legacy.test_protocol.CommonTests.test_broadcast_text": ["websockets.legacy.protocol.broadcast", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "websockets.legacy.protocol.broadcast": [], "tests.legacy.test_protocol.CommonTests.test_broadcast_binary": ["websockets.legacy.protocol.broadcast", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.CommonTests.test_broadcast_type_error": ["websockets.legacy.protocol.broadcast"], "tests.legacy.test_protocol.CommonTests.test_broadcast_no_clients": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "websockets.legacy.protocol.broadcast"], "tests.legacy.test_protocol.CommonTests.test_broadcast_two_clients": ["websockets.legacy.protocol.broadcast", "tests.legacy.test_protocol.CommonTests.assertFramesSent"], "tests.legacy.test_protocol.CommonTests.test_broadcast_skips_closed_connection": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "websockets.legacy.protocol.broadcast", "tests.legacy.test_protocol.CommonTests.close_connection"], "tests.legacy.test_protocol.CommonTests.test_broadcast_skips_closing_connection": ["tests.legacy.test_protocol.CommonTests.assertNoFrameSent", "websockets.legacy.protocol.broadcast", "tests.legacy.test_protocol.CommonTests.half_close_connection_local"], "tests.legacy.test_protocol.CommonTests.test_broadcast_within_fragmented_text": ["tests.legacy.test_protocol.CommonTests.make_drain_slow", "websockets.legacy.protocol.broadcast", "tests.legacy.test_protocol.CommonTests.assertOneFrameSent"], "tests.legacy.test_protocol.ServerTests.setUp": ["<builtin>.super"], "tests.legacy.test_protocol.ServerTests.test_local_close_send_close_frame_timeout": ["tests.legacy.test_protocol.CommonTests.make_drain_slow", "tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_protocol.CommonTests.assertCompletesWithin"], "tests.legacy.test_protocol.ServerTests.test_local_close_receive_close_frame_timeout": ["utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.assertCompletesWithin"], "tests.legacy.test_protocol.ServerTests.test_local_close_connection_lost_timeout_after_write_eof": ["utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.assertCompletesWithin"], "tests.legacy.test_protocol.ServerTests.test_local_close_connection_lost_timeout_after_close": ["utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.assertCompletesWithin"], "tests.legacy.test_protocol.ClientTests.setUp": ["<builtin>.super"], "tests.legacy.test_protocol.ClientTests.test_local_close_send_close_frame_timeout": ["tests.legacy.test_protocol.CommonTests.make_drain_slow", "tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_protocol.CommonTests.assertCompletesWithin"], "tests.legacy.test_protocol.ClientTests.test_local_close_receive_close_frame_timeout": ["utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.assertCompletesWithin"], "tests.legacy.test_protocol.ClientTests.test_local_close_connection_lost_timeout_after_write_eof": ["utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.assertCompletesWithin"], "tests.legacy.test_protocol.ClientTests.test_local_close_connection_lost_timeout_after_close": ["utils.AsyncioTestCase.loop.run_until_complete", "tests.legacy.test_protocol.CommonTests.assertConnectionClosed", "tests.legacy.test_protocol.CommonTests.receive_frame", "tests.legacy.test_protocol.CommonTests.assertCompletesWithin"], "tests.test_streams": [], "tests.test_streams.StreamReaderTests.setUp": ["websockets.streams.StreamReader"], "tests.test_streams.StreamReaderTests.test_read_line": ["utils.GeneratorTestCase.assertGeneratorReturns", "utils.GeneratorTestCase.assertEqual"], "tests.test_streams.StreamReaderTests.test_read_line_need_more_data": ["utils.GeneratorTestCase.assertGeneratorReturns", "utils.GeneratorTestCase.assertEqual", "utils.GeneratorTestCase.assertGeneratorRunning"], "tests.test_streams.StreamReaderTests.test_read_line_not_enough_data": ["<builtin>.str", "<builtin>.next", "utils.GeneratorTestCase.assertRaises", "utils.GeneratorTestCase.assertEqual"], "tests.test_streams.StreamReaderTests.test_read_line_too_long": ["<builtin>.str", "<builtin>.next", "utils.GeneratorTestCase.assertRaises", "utils.GeneratorTestCase.assertEqual"], "tests.test_streams.StreamReaderTests.test_read_line_too_long_need_more_data": ["<builtin>.str", "<builtin>.next", "utils.GeneratorTestCase.assertRaises", "utils.GeneratorTestCase.assertEqual"], "tests.test_streams.StreamReaderTests.test_read_exact": ["utils.GeneratorTestCase.assertGeneratorReturns", "utils.GeneratorTestCase.assertEqual"], "tests.test_streams.StreamReaderTests.test_read_exact_need_more_data": ["utils.GeneratorTestCase.assertGeneratorReturns", "utils.GeneratorTestCase.assertEqual", "utils.GeneratorTestCase.assertGeneratorRunning"], "tests.test_streams.StreamReaderTests.test_read_exact_not_enough_data": ["<builtin>.str", "<builtin>.next", "utils.GeneratorTestCase.assertRaises", "utils.GeneratorTestCase.assertEqual"], "tests.test_streams.StreamReaderTests.test_read_to_eof": ["utils.GeneratorTestCase.assertGeneratorReturns", "utils.GeneratorTestCase.assertEqual", "utils.GeneratorTestCase.assertGeneratorRunning"], "tests.test_streams.StreamReaderTests.test_read_to_eof_at_eof": ["utils.GeneratorTestCase.assertGeneratorReturns", "utils.GeneratorTestCase.assertEqual"], "tests.test_streams.StreamReaderTests.test_read_to_eof_too_long": ["<builtin>.str", "<builtin>.next", "utils.GeneratorTestCase.assertRaises", "utils.GeneratorTestCase.assertEqual"], "tests.test_streams.StreamReaderTests.test_at_eof_after_feed_data": ["utils.GeneratorTestCase.assertGeneratorReturns", "utils.GeneratorTestCase.assertFalse", "utils.GeneratorTestCase.assertGeneratorRunning"], "utils.GeneratorTestCase.assertFalse": [], "tests.test_streams.StreamReaderTests.test_at_eof_after_feed_eof": ["utils.GeneratorTestCase.assertTrue", "utils.GeneratorTestCase.assertGeneratorReturns", "utils.GeneratorTestCase.assertGeneratorRunning"], "utils.GeneratorTestCase.assertTrue": [], "tests.test_streams.StreamReaderTests.test_feed_data_after_feed_data": ["utils.GeneratorTestCase.assertGeneratorReturns", "utils.GeneratorTestCase.assertEqual", "utils.GeneratorTestCase.assertGeneratorRunning"], "tests.test_streams.StreamReaderTests.test_feed_eof_after_feed_data": ["utils.GeneratorTestCase.assertTrue", "utils.GeneratorTestCase.assertGeneratorReturns", "utils.GeneratorTestCase.assertEqual"], "tests.test_streams.StreamReaderTests.test_feed_data_after_feed_eof": ["<builtin>.str", "utils.GeneratorTestCase.assertRaises", "utils.GeneratorTestCase.assertEqual"], "tests.test_streams.StreamReaderTests.test_feed_eof_after_feed_eof": ["<builtin>.str", "utils.GeneratorTestCase.assertRaises", "utils.GeneratorTestCase.assertEqual"], "tests.test_streams.StreamReaderTests.test_discard": ["utils.GeneratorTestCase.assertGeneratorReturns", "utils.GeneratorTestCase.assertEqual", "utils.GeneratorTestCase.assertGeneratorRunning"], "tests.test_protocol": [], "tests.test_protocol.ProtocolTestCase.assertFrameSent": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.parse"], "test_frames.FramesTestCase.parse": [], "test_frames.FramesTestCase.assertEqual": [], "tests.test_protocol.ProtocolTestCase.assertFrameReceived": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.ProtocolTestCase.assertConnectionClosing": ["websockets.frames.Close", "websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.ProtocolTestCase.assertConnectionFailing": ["websockets.frames.Close", "websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.MaskingTests.test_client_sends_masked_frame": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual"], "test_frames.FramesTestCase.enforce_mask": [], "tests.test_protocol.MaskingTests.test_server_sends_unmasked_frame": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.MaskingTests.test_client_receives_unmasked_frame": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.MaskingTests.test_server_receives_masked_frame": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.MaskingTests.test_client_receives_masked_frame": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "test_frames.FramesTestCase.assertIsInstance": [], "tests.test_protocol.MaskingTests.test_server_receives_unmasked_frame": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.ContinuationTests.test_client_sends_unexpected_continuation": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "<builtin>.str"], "test_frames.FramesTestCase.assertRaises": [], "tests.test_protocol.ContinuationTests.test_server_sends_unexpected_continuation": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "<builtin>.str"], "tests.test_protocol.ContinuationTests.test_client_receives_unexpected_continuation": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.ContinuationTests.test_server_receives_unexpected_continuation": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.ContinuationTests.test_client_sends_continuation_after_sending_close": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual", "<builtin>.str"], "tests.test_protocol.ContinuationTests.test_server_sends_continuation_after_sending_close": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "<builtin>.str"], "tests.test_protocol.ContinuationTests.test_client_receives_continuation_after_receiving_close": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.ContinuationTests.test_server_receives_continuation_after_receiving_close": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.TextTests.test_client_sends_text": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.TextTests.test_server_sends_text": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.TextTests.test_client_receives_text": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.TextTests.test_server_receives_text": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.TextTests.test_client_receives_text_over_size_limit": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.TextTests.test_server_receives_text_over_size_limit": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.TextTests.test_client_receives_text_without_size_limit": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.TextTests.test_server_receives_text_without_size_limit": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.TextTests.test_client_sends_fragmented_text": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.TextTests.test_server_sends_fragmented_text": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.TextTests.test_client_receives_fragmented_text": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.TextTests.test_server_receives_fragmented_text": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.TextTests.test_client_receives_fragmented_text_over_size_limit": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.TextTests.test_server_receives_fragmented_text_over_size_limit": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.TextTests.test_client_receives_fragmented_text_without_size_limit": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.TextTests.test_server_receives_fragmented_text_without_size_limit": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.TextTests.test_client_sends_unexpected_text": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "<builtin>.str"], "tests.test_protocol.TextTests.test_server_sends_unexpected_text": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "<builtin>.str"], "tests.test_protocol.TextTests.test_client_receives_unexpected_text": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.TextTests.test_server_receives_unexpected_text": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.TextTests.test_client_sends_text_after_sending_close": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.TextTests.test_server_sends_text_after_sending_close": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.TextTests.test_client_receives_text_after_receiving_close": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.TextTests.test_server_receives_text_after_receiving_close": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.BinaryTests.test_client_sends_binary": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.BinaryTests.test_server_sends_binary": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.BinaryTests.test_client_receives_binary": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.BinaryTests.test_server_receives_binary": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.BinaryTests.test_client_receives_binary_over_size_limit": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.BinaryTests.test_server_receives_binary_over_size_limit": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.BinaryTests.test_client_sends_fragmented_binary": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.BinaryTests.test_server_sends_fragmented_binary": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.BinaryTests.test_client_receives_fragmented_binary": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.BinaryTests.test_server_receives_fragmented_binary": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.BinaryTests.test_client_receives_fragmented_binary_over_size_limit": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.BinaryTests.test_server_receives_fragmented_binary_over_size_limit": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.BinaryTests.test_client_sends_unexpected_binary": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "<builtin>.str"], "tests.test_protocol.BinaryTests.test_server_sends_unexpected_binary": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "<builtin>.str"], "tests.test_protocol.BinaryTests.test_client_receives_unexpected_binary": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.BinaryTests.test_server_receives_unexpected_binary": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.BinaryTests.test_client_sends_binary_after_sending_close": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.BinaryTests.test_server_sends_binary_after_sending_close": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.BinaryTests.test_client_receives_binary_after_receiving_close": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.BinaryTests.test_server_receives_binary_after_receiving_close": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.CloseTests.test_close_code": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.CloseTests.test_close_reason": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.CloseTests.test_close_code_not_provided": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.CloseTests.test_close_reason_not_provided": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.CloseTests.test_close_code_not_available": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.CloseTests.test_close_reason_not_available": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.CloseTests.test_close_code_not_available_yet": ["test_frames.FramesTestCase.assertIsNone"], "test_frames.FramesTestCase.assertIsNone": [], "tests.test_protocol.CloseTests.test_close_reason_not_available_yet": ["test_frames.FramesTestCase.assertIsNone"], "tests.test_protocol.CloseTests.test_client_sends_close": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertIs", "test_frames.FramesTestCase.assertEqual"], "test_frames.FramesTestCase.assertIs": [], "tests.test_protocol.CloseTests.test_server_sends_close": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIs"], "tests.test_protocol.CloseTests.test_client_receives_close": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertIs", "websockets.frames.Frame", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.CloseTests.test_server_receives_close": ["test_frames.FramesTestCase.assertEqual", "websockets.frames.Frame", "test_frames.FramesTestCase.assertIs"], "tests.test_protocol.CloseTests.test_client_sends_close_then_receives_close": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.CloseTests.test_server_sends_close_then_receives_close": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.CloseTests.test_client_receives_close_then_sends_close": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.CloseTests.test_server_receives_close_then_sends_close": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.CloseTests.test_client_sends_close_with_code": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertIs", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.CloseTests.test_server_sends_close_with_code": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIs"], "tests.test_protocol.CloseTests.test_client_receives_close_with_code": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "test_frames.FramesTestCase.assertIs"], "tests.test_protocol.CloseTests.test_server_receives_close_with_code": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "test_frames.FramesTestCase.assertIs"], "tests.test_protocol.CloseTests.test_client_sends_close_with_code_and_reason": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertIs", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.CloseTests.test_server_sends_close_with_code_and_reason": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIs"], "tests.test_protocol.CloseTests.test_client_receives_close_with_code_and_reason": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "test_frames.FramesTestCase.assertIs"], "tests.test_protocol.CloseTests.test_server_receives_close_with_code_and_reason": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "test_frames.FramesTestCase.assertIs"], "tests.test_protocol.CloseTests.test_client_sends_close_with_reason_only": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "<builtin>.str"], "tests.test_protocol.CloseTests.test_server_sends_close_with_reason_only": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "<builtin>.str"], "tests.test_protocol.CloseTests.test_client_receives_close_with_truncated_code": ["tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "test_frames.FramesTestCase.assertIs", "<builtin>.str", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.CloseTests.test_server_receives_close_with_truncated_code": ["tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "test_frames.FramesTestCase.assertIs", "<builtin>.str", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.CloseTests.test_client_receives_close_with_non_utf8_reason": ["tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "test_frames.FramesTestCase.assertIs", "<builtin>.str", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.CloseTests.test_server_receives_close_with_non_utf8_reason": ["tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "test_frames.FramesTestCase.assertIs", "<builtin>.str", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.PingTests.test_client_sends_ping": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.PingTests.test_server_sends_ping": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.PingTests.test_client_receives_ping": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.PingTests.test_server_receives_ping": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.PingTests.test_client_sends_ping_with_data": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.PingTests.test_server_sends_ping_with_data": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.PingTests.test_client_receives_ping_with_data": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.PingTests.test_server_receives_ping_with_data": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.PingTests.test_client_sends_fragmented_ping_frame": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "websockets.frames.Frame", "<builtin>.str"], "tests.test_protocol.PingTests.test_server_sends_fragmented_ping_frame": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "websockets.frames.Frame", "<builtin>.str"], "tests.test_protocol.PingTests.test_client_receives_fragmented_ping_frame": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.PingTests.test_server_receives_fragmented_ping_frame": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.PingTests.test_client_sends_ping_after_sending_close": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual", "<builtin>.str"], "tests.test_protocol.PingTests.test_server_sends_ping_after_sending_close": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "<builtin>.str"], "tests.test_protocol.PingTests.test_client_receives_ping_after_receiving_close": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.PingTests.test_server_receives_ping_after_receiving_close": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.PongTests.test_client_sends_pong": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.PongTests.test_server_sends_pong": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.PongTests.test_client_receives_pong": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.PongTests.test_server_receives_pong": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.PongTests.test_client_sends_pong_with_data": ["test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.PongTests.test_server_sends_pong_with_data": ["test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.PongTests.test_client_receives_pong_with_data": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.PongTests.test_server_receives_pong_with_data": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.PongTests.test_client_sends_fragmented_pong_frame": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "websockets.frames.Frame", "<builtin>.str"], "tests.test_protocol.PongTests.test_server_sends_fragmented_pong_frame": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "websockets.frames.Frame", "<builtin>.str"], "tests.test_protocol.PongTests.test_client_receives_fragmented_pong_frame": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.PongTests.test_server_receives_fragmented_pong_frame": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.PongTests.test_client_sends_pong_after_sending_close": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.enforce_mask", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.PongTests.test_server_sends_pong_after_sending_close": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.PongTests.test_client_receives_pong_after_receiving_close": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.PongTests.test_server_receives_pong_after_receiving_close": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertFrameReceived"], "tests.test_protocol.FailTests.test_client_stops_processing_frames_after_fail": ["tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.FailTests.test_server_stops_processing_frames_after_fail": ["tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.FragmentationTests.test_client_send_ping_pong_in_fragmented_message": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.FragmentationTests.test_server_send_ping_pong_in_fragmented_message": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.FragmentationTests.test_client_receive_ping_pong_in_fragmented_message": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.FragmentationTests.test_server_receive_ping_pong_in_fragmented_message": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "tests.test_protocol.ProtocolTestCase.assertFrameSent"], "tests.test_protocol.FragmentationTests.test_client_send_close_in_fragmented_message": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameSent", "test_frames.FramesTestCase.assertRaises", "<builtin>.str", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.FragmentationTests.test_server_send_close_in_fragmented_message": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertFrameSent", "test_frames.FramesTestCase.assertRaises", "<builtin>.str", "test_frames.FramesTestCase.assertEqual"], "tests.test_protocol.FragmentationTests.test_client_receive_close_in_fragmented_message": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.FragmentationTests.test_server_receive_close_in_fragmented_message": ["websockets.frames.Frame", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "<builtin>.str", "tests.test_protocol.ProtocolTestCase.assertFrameReceived", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.EOFTests.test_client_receives_eof": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "test_frames.FramesTestCase.assertIs"], "tests.test_protocol.EOFTests.test_server_receives_eof": ["tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "test_frames.FramesTestCase.assertIs"], "tests.test_protocol.EOFTests.test_client_receives_eof_between_frames": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "test_frames.FramesTestCase.assertIs", "<builtin>.str"], "tests.test_protocol.EOFTests.test_server_receives_eof_between_frames": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "test_frames.FramesTestCase.assertIs", "<builtin>.str"], "tests.test_protocol.EOFTests.test_client_receives_eof_inside_frame": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "test_frames.FramesTestCase.assertIs", "<builtin>.str"], "tests.test_protocol.EOFTests.test_server_receives_eof_inside_frame": ["test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "test_frames.FramesTestCase.assertIs", "<builtin>.str"], "tests.test_protocol.EOFTests.test_client_receives_data_after_exception": ["tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.EOFTests.test_server_receives_data_after_exception": ["tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.EOFTests.test_client_receives_eof_after_exception": ["tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.EOFTests.test_server_receives_eof_after_exception": ["tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.EOFTests.test_client_receives_data_and_eof_after_exception": ["tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.EOFTests.test_server_receives_data_and_eof_after_exception": ["tests.test_protocol.ProtocolTestCase.assertFrameSent", "tests.test_protocol.ProtocolTestCase.assertConnectionFailing"], "tests.test_protocol.EOFTests.test_client_receives_data_after_eof": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "<builtin>.str"], "tests.test_protocol.EOFTests.test_server_receives_data_after_eof": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "<builtin>.str"], "tests.test_protocol.EOFTests.test_client_receives_eof_after_eof": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "<builtin>.str"], "tests.test_protocol.EOFTests.test_server_receives_eof_after_eof": ["test_frames.FramesTestCase.assertRaises", "test_frames.FramesTestCase.assertEqual", "tests.test_protocol.ProtocolTestCase.assertConnectionClosing", "<builtin>.str"], "tests.test_protocol.TCPCloseTests.test_client_default": ["test_frames.FramesTestCase.assertFalse"], "test_frames.FramesTestCase.assertFalse": [], "tests.test_protocol.TCPCloseTests.test_server_default": ["test_frames.FramesTestCase.assertFalse"], "tests.test_protocol.TCPCloseTests.test_client_sends_close": ["test_frames.FramesTestCase.assertTrue"], "test_frames.FramesTestCase.assertTrue": [], "tests.test_protocol.TCPCloseTests.test_server_sends_close": ["test_frames.FramesTestCase.assertTrue"], "tests.test_protocol.TCPCloseTests.test_client_receives_close": ["test_frames.FramesTestCase.assertTrue"], "tests.test_protocol.TCPCloseTests.test_client_receives_close_then_eof": ["test_frames.FramesTestCase.assertFalse"], "tests.test_protocol.TCPCloseTests.test_server_receives_close_then_eof": ["test_frames.FramesTestCase.assertFalse"], "tests.test_protocol.TCPCloseTests.test_server_receives_close": ["test_frames.FramesTestCase.assertTrue"], "tests.test_protocol.TCPCloseTests.test_client_fails_connection": ["test_frames.FramesTestCase.assertTrue"], "tests.test_protocol.TCPCloseTests.test_server_fails_connection": ["test_frames.FramesTestCase.assertTrue"], "tests.test_protocol.ConnectionClosedTests.test_client_sends_close_then_receives_close": ["websockets.frames.Close", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "test_frames.FramesTestCase.assertFalse"], "tests.test_protocol.ConnectionClosedTests.test_server_sends_close_then_receives_close": ["websockets.frames.Close", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "test_frames.FramesTestCase.assertFalse"], "tests.test_protocol.ConnectionClosedTests.test_client_receives_close_then_sends_close": ["websockets.frames.Close", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertTrue", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.ConnectionClosedTests.test_server_receives_close_then_sends_close": ["websockets.frames.Close", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertTrue", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.ConnectionClosedTests.test_client_sends_close_then_receives_eof": ["websockets.frames.Close", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "test_frames.FramesTestCase.assertIsNone"], "tests.test_protocol.ConnectionClosedTests.test_server_sends_close_then_receives_eof": ["websockets.frames.Close", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance", "test_frames.FramesTestCase.assertIsNone"], "tests.test_protocol.ConnectionClosedTests.test_client_receives_eof": ["test_frames.FramesTestCase.assertIsInstance", "test_frames.FramesTestCase.assertIsNone"], "tests.test_protocol.ConnectionClosedTests.test_server_receives_eof": ["test_frames.FramesTestCase.assertIsInstance", "test_frames.FramesTestCase.assertIsNone"], "tests.test_protocol.ErrorTests.test_client_hits_internal_error_reading_frame": ["tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "<builtin>.RuntimeError", "<builtin>.str", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "<builtin>.RuntimeError": [], "tests.test_protocol.ErrorTests.test_server_hits_internal_error_reading_frame": ["tests.test_protocol.ProtocolTestCase.assertConnectionFailing", "<builtin>.RuntimeError", "<builtin>.str", "test_frames.FramesTestCase.assertEqual", "test_frames.FramesTestCase.assertIsInstance"], "tests.test_protocol.ExtensionsTests.test_client_extension_encodes_frame": ["test_frames.FramesTestCase.enforce_mask", "extensions.utils.Rsv2Extension", "test_frames.FramesTestCase.assertEqual"], "extensions.utils.Rsv2Extension": [], "tests.test_protocol.ExtensionsTests.test_server_extension_encodes_frame": ["test_frames.FramesTestCase.assertEqual", "extensions.utils.Rsv2Extension"], "tests.test_protocol.ExtensionsTests.test_client_extension_decodes_frame": ["test_frames.FramesTestCase.assertEqual", "websockets.frames.Frame", "extensions.utils.Rsv2Extension"], "tests.test_protocol.ExtensionsTests.test_server_extension_decodes_frame": ["test_frames.FramesTestCase.assertEqual", "websockets.frames.Frame", "extensions.utils.Rsv2Extension"], "tests.test_protocol.MiscTests.test_client_default_logger": ["logging.getLogger"], "tests.test_protocol.MiscTests.test_server_default_logger": ["logging.getLogger"], "tests.test_protocol.MiscTests.test_client_custom_logger": ["logging.getLogger"], "tests.test_protocol.MiscTests.test_server_custom_logger": ["logging.getLogger"]}
{"tests.test_hsm": [], "tests.test_hsm.HsmMethodTest.setUpClass": ["patterns.other.hsm.hsm.HierachicalStateMachine"], "patterns.other.hsm.hsm.HierachicalStateMachine": [], "tests.test_hsm.HsmMethodTest.test_initial_state_shall_be_standby": ["unittest.TestCase.assertEqual", "<builtin>.isinstance"], "<builtin>.isinstance": [], "unittest.TestCase.assertEqual": [], "tests.test_hsm.HsmMethodTest.test_unsupported_state_shall_raise_exception": ["unittest.TestCase.assertRaises"], "unittest.TestCase.assertRaises": [], "tests.test_hsm.HsmMethodTest.test_unsupported_message_type_shall_raise_exception": ["unittest.TestCase.assertRaises"], "tests.test_hsm.HsmMethodTest.test_calling_next_state_shall_change_current_state": ["unittest.TestCase.assertEqual", "patterns.other.hsm.hsm.Standby", "<builtin>.isinstance"], "patterns.other.hsm.hsm.Standby": [], "tests.test_hsm.HsmMethodTest.test_method_perform_switchover_shall_return_specifically": ["unittest.TestCase.assertEqual"], "tests.test_hsm.StandbyStateTest.setUpClass": ["patterns.other.hsm.hsm.HierachicalStateMachine"], "tests.test_hsm.StandbyStateTest.setUp": ["patterns.other.hsm.hsm.Standby"], "tests.test_hsm.StandbyStateTest.test_given_standby_on_message_switchover_shall_set_active": ["unittest.TestCase.assertEqual", "<builtin>.isinstance"], "tests.test_hsm.StandbyStateTest.test_given_standby_on_message_switchover_shall_call_hsm_methods": ["unittest.TestCase.assertEqual", "unittest.mock.patch.object"], "unittest.mock.patch.object": [], "tests.test_hsm.StandbyStateTest.test_given_standby_on_message_fault_trigger_shall_set_suspect": ["unittest.TestCase.assertEqual", "<builtin>.isinstance"], "tests.test_hsm.StandbyStateTest.test_given_standby_on_message_diagnostics_failed_shall_raise_exception_and_keep_in_state": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "<builtin>.isinstance"], "tests.test_hsm.StandbyStateTest.test_given_standby_on_message_diagnostics_passed_shall_raise_exception_and_keep_in_state": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "<builtin>.isinstance"], "tests.test_hsm.StandbyStateTest.test_given_standby_on_message_operator_inservice_shall_raise_exception_and_keep_in_state": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "<builtin>.isinstance"], "tests.behavioral.test_state": ["pytest.fixture"], "pytest.fixture": [], "tests.behavioral.test_state.radio": ["patterns.behavioral.state.Radio"], "patterns.behavioral.state.Radio": [], "tests.behavioral.test_state.test_initial_state": [], "tests.behavioral.test_state.test_initial_am_station": [], "tests.behavioral.test_state.test_toggle_amfm": [], "tests.behavioral.test_strategy": ["pytest.mark.parametrize", "pytest.fixture"], "tests.behavioral.test_strategy.order": ["patterns.behavioral.strategy.Order"], "patterns.behavioral.strategy.Order": [], "pytest.mark.parametrize": [], "tests.behavioral.test_strategy.test_discount_function_return": [], "tests.behavioral.test_strategy.test_order_discount_strategy_validate_success": ["patterns.behavioral.strategy.Order"], "tests.behavioral.test_strategy.test_order_discount_strategy_validate_error": ["patterns.behavioral.strategy.Order"], "tests.behavioral.test_strategy.test_discount_apply_success": ["patterns.behavioral.strategy.Order"], "tests.behavioral.test_publish_subscribe": [], "tests.behavioral.test_publish_subscribe.TestProvider.test_subscriber_shall_be_attachable_to_subscriptions": ["unittest.TestCase.assertEqual", "patterns.behavioral.publish_subscribe.Subscriber", "patterns.behavioral.publish_subscribe.Provider", "<builtin>.len"], "patterns.behavioral.publish_subscribe.Provider": [], "<builtin>.len": [], "patterns.behavioral.publish_subscribe.Subscriber": [], "tests.behavioral.test_publish_subscribe.TestProvider.test_subscriber_shall_be_detachable_from_subscriptions": ["unittest.TestCase.assertEqual", "patterns.behavioral.publish_subscribe.Subscriber", "patterns.behavioral.publish_subscribe.Provider", "<builtin>.len"], "tests.behavioral.test_publish_subscribe.TestProvider.test_publisher_shall_append_subscription_message_to_queue": ["patterns.behavioral.publish_subscribe.Provider", "unittest.TestCase.assertEqual", "patterns.behavioral.publish_subscribe.Subscriber", "patterns.behavioral.publish_subscribe.Publisher", "<builtin>.len"], "patterns.behavioral.publish_subscribe.Publisher": [], "tests.behavioral.test_publish_subscribe.TestProvider.test_provider_shall_update_affected_subscribers_with_published_subscription": ["patterns.behavioral.publish_subscribe.Provider", "unittest.TestCase.assertEqual", "patterns.behavioral.publish_subscribe.Subscriber", "unittest.mock.patch.object", "patterns.behavioral.publish_subscribe.Publisher", "unittest.mock.call"], "unittest.mock.call": [], "tests.behavioral.test_observer": ["pytest.fixture"], "tests.behavioral.test_observer.observable": ["patterns.behavioral.observer.Data"], "patterns.behavioral.observer.Data": [], "tests.behavioral.test_observer.test_attach_detach": ["patterns.behavioral.observer.DecimalViewer", "<builtin>.len"], "patterns.behavioral.observer.DecimalViewer": [], "tests.behavioral.test_observer.test_one_data_change_notifies_each_observer_once": ["patterns.behavioral.observer.DecimalViewer", "unittest.mock.Mock", "unittest.mock.patch", "patterns.behavioral.observer.HexViewer"], "patterns.behavioral.observer.HexViewer": [], "unittest.mock.Mock": [], "unittest.mock.patch": [], "tests.creational.test_abstract_factory": [], "tests.creational.test_abstract_factory.TestPetShop.test_dog_pet_shop_shall_show_dog_instance": ["patterns.creational.abstract_factory.PetShop", "unittest.mock.patch.object", "unittest.TestCase.assertEqual"], "patterns.creational.abstract_factory.PetShop": [], "tests.creational.test_lazy": [], "tests.creational.test_lazy.TestDynamicExpanding.setUp": ["patterns.creational.lazy_evaluation.Person"], "patterns.creational.lazy_evaluation.Person": [], "tests.creational.test_lazy.TestDynamicExpanding.test_innate_properties": ["unittest.TestCase.assertDictEqual"], "unittest.TestCase.assertDictEqual": [], "tests.creational.test_lazy.TestDynamicExpanding.test_relatives_not_in_properties": ["unittest.TestCase.assertNotIn"], "unittest.TestCase.assertNotIn": [], "tests.creational.test_lazy.TestDynamicExpanding.test_extended_properties": ["<builtin>.print", "unittest.TestCase.assertDictEqual"], "<builtin>.print": [], "tests.creational.test_lazy.TestDynamicExpanding.test_relatives_after_access": ["unittest.TestCase.assertIn", "<builtin>.print"], "unittest.TestCase.assertIn": [], "tests.creational.test_lazy.TestDynamicExpanding.test_parents": ["unittest.TestCase.assertEqual", "<builtin>.range"], "<builtin>.range": [], "tests.creational.test_prototype": [], "tests.creational.test_prototype.TestPrototypeFeatures.setUp": ["patterns.creational.prototype.Prototype"], "patterns.creational.prototype.Prototype": [], "tests.creational.test_prototype.TestPrototypeFeatures.test_cloning_propperty_innate_values": ["unittest.TestCase.assertEqual"], "tests.creational.test_prototype.TestPrototypeFeatures.test_extended_property_values_cloning": ["unittest.TestCase.assertRaises"], "tests.creational.test_prototype.TestPrototypeFeatures.test_extended_property_values_cloning.<lambda1>": [], "tests.creational.test_prototype.TestPrototypeFeatures.test_cloning_propperty_assigned_values": ["unittest.TestCase.assertNotEqual"], "unittest.TestCase.assertNotEqual": [], "tests.creational.test_prototype.TestDispatcherFeatures.setUp": ["patterns.creational.prototype.PrototypeDispatcher", "patterns.creational.prototype.Prototype"], "patterns.creational.prototype.PrototypeDispatcher": [], "tests.creational.test_prototype.TestDispatcherFeatures.test_batch_retrieving": ["unittest.TestCase.assertEqual", "<builtin>.len"], "tests.creational.test_prototype.TestDispatcherFeatures.test_particular_properties_retrieving": ["unittest.TestCase.assertEqual"], "tests.creational.test_prototype.TestDispatcherFeatures.test_extended_properties_retrieving": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertTrue"], "unittest.TestCase.assertTrue": [], "tests.creational.test_borg": [], "tests.creational.test_borg.BorgTest.setUp": ["patterns.creational.borg.YourBorg", "patterns.creational.borg.Borg"], "patterns.creational.borg.Borg": [], "patterns.creational.borg.YourBorg": [], "tests.creational.test_borg.BorgTest.tearDown": [], "tests.creational.test_borg.BorgTest.test_initial_borg_state_shall_be_init": ["unittest.TestCase.assertEqual", "patterns.creational.borg.Borg"], "tests.creational.test_borg.BorgTest.test_changing_instance_attribute_shall_change_borg_state": ["unittest.TestCase.assertEqual"], "tests.creational.test_borg.BorgTest.test_instances_shall_have_own_ids": ["<builtin>.id", "unittest.TestCase.assertNotEqual"], "<builtin>.id": [], "tests.creational.test_builder": [], "tests.creational.test_builder.TestSimple.test_house": ["unittest.TestCase.assertEqual", "patterns.creational.builder.House"], "patterns.creational.builder.House": [], "tests.creational.test_builder.TestSimple.test_flat": ["unittest.TestCase.assertEqual", "patterns.creational.builder.Flat"], "patterns.creational.builder.Flat": [], "tests.creational.test_builder.TestComplex.test_house": ["unittest.TestCase.assertEqual", "patterns.creational.builder.construct_building"], "patterns.creational.builder.construct_building": [], "tests.creational.test_pool": [], "tests.creational.test_pool.TestPool.setUp": ["queue.Queue"], "queue.Queue": [], "tests.creational.test_pool.TestPool.test_items_recoil": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertTrue", "unittest.TestCase.assertFalse", "patterns.creational.pool.ObjectPool"], "patterns.creational.pool.ObjectPool": [], "unittest.TestCase.assertFalse": [], "tests.creational.test_pool.TestPool.test_frozen_pool": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertTrue", "unittest.TestCase.assertFalse", "patterns.creational.pool.ObjectPool"], "tests.creational.test_pool.TestNaitivePool.test_pool_behavior_with_single_object_inside": ["unittest.TestCase.assertFalse", "patterns.creational.pool.ObjectPool", "unittest.TestCase.assertEqual", "queue.Queue", "unittest.TestCase.assertTrue"], "tests.structural.test_adapter": [], "tests.structural.test_adapter.ClassTest.setUp": ["patterns.structural.adapter.Dog", "patterns.structural.adapter.Car", "patterns.structural.adapter.Cat", "patterns.structural.adapter.Human"], "patterns.structural.adapter.Dog": [], "patterns.structural.adapter.Cat": [], "patterns.structural.adapter.Human": [], "patterns.structural.adapter.Car": [], "tests.structural.test_adapter.ClassTest.test_dog_shall_bark": ["unittest.TestCase.assertEqual"], "tests.structural.test_adapter.ClassTest.test_cat_shall_meow": ["unittest.TestCase.assertEqual"], "tests.structural.test_adapter.ClassTest.test_human_shall_speak": ["unittest.TestCase.assertEqual"], "tests.structural.test_adapter.ClassTest.test_car_shall_make_loud_noise": ["unittest.TestCase.assertEqual"], "tests.structural.test_adapter.ClassTest.test_car_shall_make_very_loud_noise": ["unittest.TestCase.assertEqual"], "tests.structural.test_adapter.AdapterTest.test_dog_adapter_shall_make_noise": ["patterns.structural.adapter.Dog", "patterns.structural.adapter.Adapter", "unittest.TestCase.assertEqual"], "patterns.structural.adapter.Adapter": [], "tests.structural.test_adapter.AdapterTest.test_cat_adapter_shall_make_noise": ["patterns.structural.adapter.Cat", "patterns.structural.adapter.Adapter", "unittest.TestCase.assertEqual"], "tests.structural.test_adapter.AdapterTest.test_human_adapter_shall_make_noise": ["patterns.structural.adapter.Human", "patterns.structural.adapter.Adapter", "unittest.TestCase.assertEqual"], "tests.structural.test_adapter.AdapterTest.test_car_adapter_shall_make_loud_noise": ["unittest.TestCase.assertEqual", "patterns.structural.adapter.Car", "patterns.structural.adapter.Adapter"], "tests.structural.test_adapter.AdapterTest.test_car_adapter_shall_make_very_loud_noise": ["unittest.TestCase.assertEqual", "patterns.structural.adapter.Car", "patterns.structural.adapter.Adapter"], "tests.structural.test_decorator": [], "tests.structural.test_decorator.TestTextWrapping.setUp": ["patterns.structural.decorator.TextTag"], "patterns.structural.decorator.TextTag": [], "tests.structural.test_decorator.TestTextWrapping.test_italic": ["unittest.TestCase.assertEqual", "patterns.structural.decorator.ItalicWrapper"], "patterns.structural.decorator.ItalicWrapper": [], "tests.structural.test_decorator.TestTextWrapping.test_bold": ["unittest.TestCase.assertEqual", "patterns.structural.decorator.BoldWrapper"], "patterns.structural.decorator.BoldWrapper": [], "tests.structural.test_decorator.TestTextWrapping.test_mixed_bold_and_italic": ["unittest.TestCase.assertEqual", "patterns.structural.decorator.ItalicWrapper", "patterns.structural.decorator.BoldWrapper"], "tests.structural.test_proxy": [], "tests.structural.test_proxy.ProxyTest.setUpClass": ["patterns.structural.proxy.Proxy"], "patterns.structural.proxy.Proxy": [], "tests.structural.test_proxy.ProxyTest.setUp": ["io.StringIO"], "io.StringIO": [], "tests.structural.test_proxy.ProxyTest.tearDown": [], "tests.structural.test_proxy.ProxyTest.test_do_the_job_for_admin_shall_pass": ["patterns.structural.proxy.client"], "patterns.structural.proxy.client": [], "tests.structural.test_proxy.ProxyTest.test_do_the_job_for_anonymous_shall_reject": ["patterns.structural.proxy.client"], "tests.structural.test_bridge": [], "tests.structural.test_bridge.BridgeTest.test_bridge_shall_draw_with_concrete_api_implementation": ["unittest.TestCase.assertEqual", "patterns.structural.bridge.DrawingAPI2", "patterns.structural.bridge.CircleShape", "patterns.structural.bridge.DrawingAPI1", "unittest.mock.patch.object"], "patterns.structural.bridge.DrawingAPI1": [], "patterns.structural.bridge.DrawingAPI2": [], "patterns.structural.bridge.CircleShape": [], "tests.structural.test_bridge.BridgeTest.test_bridge_shall_scale_both_api_circles_with_own_implementation": ["unittest.TestCase.assertEqual", "patterns.structural.bridge.DrawingAPI2", "patterns.structural.bridge.CircleShape", "patterns.structural.bridge.DrawingAPI1", "unittest.mock.patch.object"]}
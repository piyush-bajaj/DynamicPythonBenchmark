{"tests.test_utils": ["pytest.mark.parametrize", "pytest.mark.skipif"], "tests.test_utils.test_echo": ["<builtin>.bytearray"], "tests.test_utils.test_echo.cli": [], "<builtin>.bytearray": [], "tests.test_utils.test_echo_custom_file": ["io.StringIO"], "io.StringIO": [], "pytest.mark.parametrize": [], "tests.test_utils.test_styling": [], "tests.test_utils.test_unstyle_other_ansi": [], "tests.test_utils.test_filename_formatting": [], "tests.test_utils.test_prompts": [], "tests.test_utils.test_prompts.test": [], "tests.test_utils.test_prompts.test_no": [], "tests.test_utils.test_confirm_repeat": [], "pytest.mark.skipif": [], "tests.test_utils.test_prompts_abort": [], "tests.test_utils.test_prompts_abort.f": ["<builtin>.KeyboardInterrupt"], "<builtin>.KeyboardInterrupt": [], "tests.test_utils._test_gen_func": [], "tests.test_utils.test_echo_via_pager": [], "tests.test_utils.test_echo_via_pager.<lambda1>": [], "tests.test_utils.test_echo_color_flag": [], "tests.test_utils.test_echo_color_flag.<lambda1>": [], "tests.test_utils.test_prompt_cast_default": ["<builtin>.type", "io.StringIO"], "<builtin>.type": [], "tests.test_utils.test_echo_writing_to_standard_error": ["tests.test_utils.test_echo_writing_to_standard_error.emulate_input"], "tests.test_utils.test_echo_writing_to_standard_error.emulate_input": ["io.StringIO"], "tests.test_utils.test_echo_writing_to_standard_error.<lambda1>": [], "tests.test_utils.test_echo_writing_to_standard_error.<lambda2>": [], "tests.test_utils.test_echo_with_capsys": [], "tests.test_utils.test_open_file": ["<builtin>.open"], "tests.test_utils.test_open_file.cli": [], "<builtin>.open": [], "tests.test_utils.test_open_file_pathlib_dash": [], "tests.test_utils.test_open_file_pathlib_dash.cli": ["<builtin>.type", "<builtin>.str"], "<builtin>.str": [], "tests.test_utils.test_open_file_ignore_errors_stdin": ["os.urandom"], "tests.test_utils.test_open_file_ignore_errors_stdin.cli": [], "os.urandom": [], "tests.test_utils.test_open_file_respects_ignore": ["<builtin>.open"], "tests.test_utils.test_open_file_ignore_invalid_utf8": ["<builtin>.open"], "tests.test_utils.test_open_file_ignore_no_encoding": ["os.urandom", "<builtin>.open"], "tests.test_utils.test_open_file_atomic_permissions_existing_file": ["os.chmod", "stat.S_IMODE", "os.stat", "<builtin>.open"], "os.chmod": [], "tests.test_utils.test_open_file_atomic_permissions_existing_file.cli": [], "os.stat": [], "stat.S_IMODE": [], "tests.test_utils.test_open_file_atomic_permissions_new_file": ["stat.S_IMODE", "os.stat", "<builtin>.open"], "tests.test_utils.test_open_file_atomic_permissions_new_file.cli": [], "tests.test_utils.test_iter_keepopenfile": ["<builtin>.zip", "<builtin>.list", "<builtin>.map", "<builtin>.range"], "<builtin>.range": [], "<builtin>.map": [], "<builtin>.list": [], "<builtin>.zip": [], "tests.test_utils.test_iter_lazyfile": ["<builtin>.zip", "<builtin>.list", "<builtin>.map", "<builtin>.range"], "tests.test_utils.MockMain.__init__": [], "tests.test_utils.test_detect_program_name": ["tests.test_utils.MockMain.__init__"], "tests.test_utils.test_expand_args": ["os.path.expanduser", "os.path.join"], "os.path.expanduser": [], "os.path.join": [], "tests.test_utils.test_make_default_short_help": ["<builtin>.len"], "<builtin>.len": [], "tests.test_formatting": [], "tests.test_formatting.test_basic_functionality": ["click.command"], "click.command": [], "tests.test_formatting.test_basic_functionality.cli": [], "tests.test_formatting.test_wrapping_long_options_strings": ["click.group", "click.argument"], "click.group": [], "tests.test_formatting.test_wrapping_long_options_strings.cli": [], "tests.test_formatting.test_wrapping_long_options_strings.a_very_long": [], "click.argument": [], "tests.test_formatting.test_wrapping_long_options_strings.command": [], "tests.test_formatting.test_wrapping_long_command_name": ["click.group", "click.argument"], "tests.test_formatting.test_wrapping_long_command_name.cli": [], "tests.test_formatting.test_wrapping_long_command_name.a_very_very_very_long": [], "tests.test_formatting.test_wrapping_long_command_name.command": [], "tests.test_formatting.test_formatting_empty_help_lines": ["click.command"], "tests.test_formatting.test_formatting_empty_help_lines.cli": [], "tests.test_formatting.test_formatting_usage_error": ["click.argument", "click.command"], "tests.test_formatting.test_formatting_usage_error.cmd": ["click.echo"], "click.echo": [], "tests.test_formatting.test_formatting_usage_error_metavar_missing_arg": ["click.argument", "click.command"], "tests.test_formatting.test_formatting_usage_error_metavar_missing_arg.cmd": [], "tests.test_formatting.test_formatting_usage_error_metavar_bad_arg": ["click.argument", "click.command"], "tests.test_formatting.test_formatting_usage_error_metavar_bad_arg.cmd": [], "tests.test_formatting.test_formatting_usage_error_nested": ["click.group", "click.argument"], "tests.test_formatting.test_formatting_usage_error_nested.cmd": [], "tests.test_formatting.test_formatting_usage_error_nested.foo": ["click.echo"], "tests.test_formatting.test_formatting_usage_error_no_help": ["click.argument", "click.command"], "tests.test_formatting.test_formatting_usage_error_no_help.cmd": ["click.echo"], "tests.test_formatting.test_formatting_usage_custom_help": ["click.argument", "<builtin>.dict", "click.command"], "<builtin>.dict": [], "tests.test_formatting.test_formatting_usage_custom_help.cmd": ["click.echo"], "tests.test_formatting.test_formatting_custom_type_metavar": ["click.ParamType.__init__", "click.argument", "click.help_option", "click.command"], "tests.test_formatting.test_formatting_custom_type_metavar.MyType.get_metavar": [], "click.help_option": [], "click.ParamType.__init__": [], "tests.test_formatting.test_formatting_custom_type_metavar.cmd": [], "tests.test_formatting.test_truncating_docstring": ["click.pass_context", "click.command"], "click.pass_context": [], "tests.test_formatting.test_truncating_docstring.cli": [], "tests.test_formatting.test_removing_multiline_marker": ["click.group"], "tests.test_formatting.test_removing_multiline_marker.cli": [], "tests.test_formatting.test_removing_multiline_marker.cmd1": [], "tests.test_formatting.test_global_show_default": ["click.option", "<builtin>.dict", "click.command"], "click.option": [], "tests.test_formatting.test_global_show_default.cli": [], "tests.test_formatting.test_formatting_with_options_metavar_empty": ["click.Command", "click.Argument"], "click.Argument": [], "click.Command": [], "tests.test_formatting.test_help_formatter_write_text": ["click.HelpFormatter", "<builtin>.len"], "click.HelpFormatter": [], "tests.test_defaults": [], "tests.test_defaults.test_basic_defaults": ["click.option", "click.command"], "tests.test_defaults.test_basic_defaults.cli": ["<builtin>.type", "click.echo"], "tests.test_defaults.test_multiple_defaults": ["click.option", "click.command"], "tests.test_defaults.test_multiple_defaults.cli": ["<builtin>.type", "click.echo"], "tests.test_defaults.test_nargs_plus_multiple": ["click.option", "click.command"], "tests.test_defaults.test_nargs_plus_multiple.cli": ["click.echo"], "tests.test_shell_completion": ["pytest.mark.usefixtures", "pytest.mark.parametrize", "pytest.fixture"], "tests.test_shell_completion._get_completions": ["click.shell_completion.ShellComplete"], "click.shell_completion.ShellComplete": [], "tests.test_shell_completion._get_words": ["tests.test_shell_completion._get_completions"], "tests.test_shell_completion.test_command": ["tests.test_shell_completion._get_words", "click.core.Command", "click.core.Option"], "click.core.Option": [], "click.core.Command": [], "tests.test_shell_completion.test_group": ["tests.test_shell_completion._get_words", "click.core.Command", "click.core.Option", "click.core.Group"], "click.core.Group": [], "tests.test_shell_completion.test_group_command_same_option": ["tests.test_shell_completion._get_words", "click.core.Command", "click.core.Option", "click.core.Group"], "tests.test_shell_completion.test_chained": ["tests.test_shell_completion._get_words", "click.core.Command", "click.core.Option", "click.core.Group"], "tests.test_shell_completion.test_help_option": ["click.core.Command", "tests.test_shell_completion._get_words", "click.core.Group"], "tests.test_shell_completion.test_argument_order": ["click.core.Argument", "click.core.Command", "tests.test_shell_completion._get_words", "click.types.Choice"], "click.core.Argument": [], "click.types.Choice": [], "tests.test_shell_completion.test_argument_default": ["tests.test_shell_completion._get_words", "click.types.Choice", "click.core.Command", "click.core.Argument"], "tests.test_shell_completion.test_type_choice": ["tests.test_shell_completion._get_words", "click.types.Choice", "click.core.Command", "click.core.Option"], "tests.test_shell_completion.test_choice_special_characters": ["tests.test_shell_completion._get_words", "click.types.Choice", "click.core.Command", "click.core.Option"], "tests.test_shell_completion.test_choice_conflicting_prefix": ["tests.test_shell_completion._get_words", "click.types.Choice", "click.core.Command", "click.core.Option"], "tests.test_shell_completion.test_option_count": ["tests.test_shell_completion._get_words", "click.core.Command", "click.core.Option"], "tests.test_shell_completion.test_option_optional": ["tests.test_shell_completion._get_words", "click.core.Command", "click.core.Option"], "tests.test_shell_completion.test_path_types": ["click.core.Command", "click.core.Option", "tests.test_shell_completion._get_completions", "<builtin>.len"], "tests.test_shell_completion.test_absolute_path": ["click.types.Path", "click.core.Option", "<builtin>.len", "click.core.Command", "tests.test_shell_completion._get_completions"], "click.types.Path": [], "tests.test_shell_completion.test_option_flag": ["tests.test_shell_completion._get_words", "click.core.Option", "click.types.Choice", "click.core.Command", "click.core.Argument"], "tests.test_shell_completion.test_option_custom": ["click.core.Argument", "click.core.Command", "tests.test_shell_completion._get_words"], "tests.test_shell_completion.test_option_custom.custom": [], "tests.test_shell_completion.test_option_multiple": ["tests.test_shell_completion._get_words", "click.types.Choice", "click.core.Command", "click.core.Option"], "tests.test_shell_completion.test_option_nargs": ["tests.test_shell_completion._get_words", "click.types.Choice", "click.core.Command", "click.core.Option"], "tests.test_shell_completion.test_argument_nargs": ["click.core.Option", "tests.test_shell_completion._get_words", "click.types.Choice", "click.core.Command", "click.core.Argument"], "tests.test_shell_completion.test_double_dash": ["tests.test_shell_completion._get_words", "click.core.Option", "click.types.Choice", "click.core.Command", "click.core.Argument"], "tests.test_shell_completion.test_hidden": ["click.core.Group", "tests.test_shell_completion._get_words", "click.core.Option", "click.types.Choice", "click.core.Command"], "tests.test_shell_completion.test_add_different_name": ["click.core.Command", "tests.test_shell_completion._get_words", "click.core.Group"], "tests.test_shell_completion.test_completion_item_data": ["click.shell_completion.CompletionItem"], "click.shell_completion.CompletionItem": [], "pytest.fixture": [], "tests.test_shell_completion._patch_for_completion": [], "tests.test_shell_completion._patch_for_completion.<lambda1>": [], "pytest.mark.usefixtures": [], "tests.test_shell_completion.test_full_source": ["click.core.Command", "click.core.Group"], "tests.test_shell_completion.test_full_complete": ["click.core.Command", "click.core.Group"], "tests.test_shell_completion.test_context_settings": ["click.core.Argument", "click.core.Command"], "tests.test_shell_completion.test_context_settings.complete": [], "tests.test_shell_completion.test_choice_case_sensitive": ["tests.test_shell_completion._get_words", "click.types.Choice", "click.core.Command", "click.core.Option"], "tests.test_normalization": ["<builtin>.dict"], "tests.test_normalization.<lambda1>": [], "tests.test_normalization.test_option_normalization": ["click.option", "click.command"], "tests.test_normalization.test_option_normalization.cli": ["click.echo"], "tests.test_normalization.test_choice_normalization": ["click.Choice", "click.option", "click.command"], "click.Choice": [], "tests.test_normalization.test_choice_normalization.cli": ["click.echo"], "tests.test_normalization.test_command_normalization": ["click.group"], "tests.test_normalization.test_command_normalization.cli": [], "tests.test_normalization.test_command_normalization.foo": ["click.echo"], "tests.test_basic": ["pytest.mark.parametrize", "itertools.chain"], "tests.test_basic.test_basic_functionality": ["click.command"], "tests.test_basic.test_basic_functionality.cli": ["click.echo"], "tests.test_basic.test_repr": ["<builtin>.repr", "click.group", "click.command"], "tests.test_basic.test_repr.command": [], "tests.test_basic.test_repr.group": [], "tests.test_basic.test_repr.subcommand": [], "<builtin>.repr": [], "tests.test_basic.test_return_values": ["click.command"], "tests.test_basic.test_return_values.cli": [], "tests.test_basic.test_basic_group": ["click.group"], "tests.test_basic.test_basic_group.cli": ["click.echo"], "tests.test_basic.test_basic_group.subcommand": ["click.echo"], "tests.test_basic.test_group_commands_dict": ["click.Group", "click.command"], "tests.test_basic.test_group_commands_dict.sub": ["click.echo"], "click.Group": [], "tests.test_basic.test_group_from_list": ["click.Group", "click.command"], "tests.test_basic.test_group_from_list.sub": ["click.echo"], "tests.test_basic.test_string_option": ["click.option", "click.command"], "tests.test_basic.test_string_option.cli": ["click.echo"], "tests.test_basic.test_int_option": ["click.option", "click.command"], "tests.test_basic.test_int_option.cli": ["click.echo"], "tests.test_basic.test_uuid_option": ["click.option", "click.command"], "tests.test_basic.test_uuid_option.cli": ["click.echo"], "tests.test_basic.test_float_option": ["click.option", "click.command"], "tests.test_basic.test_float_option.cli": ["click.echo"], "tests.test_basic.test_boolean_switch": ["click.option", "click.command"], "tests.test_basic.test_boolean_switch.cli": [], "tests.test_basic.test_boolean_flag": ["click.option", "click.command"], "tests.test_basic.test_boolean_flag.cli": [], "itertools.chain": [], "tests.test_basic.test_boolean_conversion": ["click.option", "click.command"], "tests.test_basic.test_boolean_conversion.cli": ["click.echo"], "tests.test_basic.test_file_option": ["click.option", "click.File", "click.command"], "click.File": [], "tests.test_basic.test_file_option.input": [], "tests.test_basic.test_file_option.output": ["click.echo"], "tests.test_basic.test_file_lazy_mode": ["os.mkdir", "click.option", "click.File", "click.command"], "tests.test_basic.test_file_lazy_mode.input": [], "tests.test_basic.test_file_lazy_mode.output": [], "os.mkdir": [], "tests.test_basic.test_file_lazy_mode.input_non_lazy": [], "tests.test_basic.test_path_option": ["<builtin>.open", "click.Path", "os.mkdir", "click.command", "click.option"], "click.Path": [], "tests.test_basic.test_path_option.write_to_dir": ["<builtin>.open", "os.path.join"], "tests.test_basic.test_path_option.showtype": ["os.path.isdir", "click.echo", "os.path.isfile"], "os.path.isfile": [], "os.path.isdir": [], "tests.test_basic.test_path_option.exists": ["os.path.exists", "click.echo"], "os.path.exists": [], "tests.test_basic.test_choice_option": ["click.Choice", "click.option", "click.command"], "tests.test_basic.test_choice_option.cli": ["click.echo"], "tests.test_basic.test_choice_argument": ["click.Choice", "click.argument", "click.command"], "tests.test_basic.test_choice_argument.cli": ["click.echo"], "tests.test_basic.test_datetime_option_default": ["click.option", "click.command", "click.DateTime"], "click.DateTime": [], "tests.test_basic.test_datetime_option_default.cli": ["click.echo"], "tests.test_basic.test_datetime_option_custom": ["click.option", "click.command", "click.DateTime"], "tests.test_basic.test_datetime_option_custom.cli": ["click.echo"], "tests.test_basic.test_required_option": ["click.option", "click.command"], "tests.test_basic.test_required_option.cli": ["click.echo"], "tests.test_basic.test_evaluation_order": ["click.option", "click.command"], "tests.test_basic.test_evaluation_order.memo": [], "tests.test_basic.test_evaluation_order.cli": [], "tests.test_basic.test_hidden_option": ["click.option", "click.command"], "tests.test_basic.test_hidden_option.cli": ["click.echo"], "tests.test_basic.test_hidden_command": ["click.group"], "tests.test_basic.test_hidden_command.cli": [], "tests.test_basic.test_hidden_command.nope": [], "tests.test_basic.test_hidden_group": ["click.group"], "tests.test_basic.test_hidden_group.cli": [], "tests.test_basic.test_hidden_group.subgroup": [], "tests.test_basic.test_hidden_group.nope": [], "tests.test_basic.test_summary_line": ["click.group"], "tests.test_basic.test_summary_line.cli": [], "tests.test_basic.test_summary_line.cmd": [], "tests.test_basic.test_help_invalid_default": ["click.Path", "click.Command", "click.Option"], "click.Option": [], "tests.test_compat": [], "tests.test_compat.test_is_jupyter_kernel_output": ["click._compat.should_strip_ansi"], "click._compat.should_strip_ansi": [], "tests.conftest": ["pytest.fixture", "tests.conftest._check_symlinks_supported"], "tests.conftest.runner": ["click.testing.CliRunner"], "click.testing.CliRunner": [], "tests.conftest._check_symlinks_supported": ["<builtin>.open", "tempfile.TemporaryDirectory", "os.symlink", "os.path.join"], "tempfile.TemporaryDirectory": [], "os.symlink": [], "tests.test_arguments": ["pytest.mark.parametrize"], "tests.test_arguments.test_nargs_star": ["click.argument", "click.command"], "tests.test_arguments.test_nargs_star.copy": ["click.echo"], "tests.test_arguments.test_argument_unbounded_nargs_cant_have_default": ["click.argument", "pytest.raises", "click.command"], "pytest.raises": [], "tests.test_arguments.test_argument_unbounded_nargs_cant_have_default.copy": [], "tests.test_arguments.test_nargs_tup": ["click.argument", "click.command"], "tests.test_arguments.test_nargs_tup.copy": ["click.echo"], "tests.test_arguments.test_nargs_tup_composite": ["click.argument", "click.command"], "tests.test_arguments.test_nargs_tup_composite.copy": ["click.echo"], "tests.test_arguments.test_nargs_err": ["click.argument", "click.command"], "tests.test_arguments.test_nargs_err.copy": ["click.echo"], "tests.test_arguments.test_bytes_args": ["click.argument", "click.command"], "tests.test_arguments.test_bytes_args.from_bytes": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "tests.test_arguments.test_bytes_args.<lambda1>": [], "tests.test_arguments.test_bytes_args.<lambda2>": [], "tests.test_arguments.test_file_args": ["click.File", "click.argument", "click.command", "<builtin>.open"], "tests.test_arguments.test_file_args.inout": [], "tests.test_arguments.test_path_allow_dash": ["click.Path", "click.argument", "click.command"], "tests.test_arguments.test_path_allow_dash.foo": ["click.echo"], "tests.test_arguments.test_file_atomics": ["click.File", "click.argument", "click.command", "<builtin>.open"], "tests.test_arguments.test_file_atomics.inout": ["<builtin>.open"], "tests.test_arguments.test_stdout_default": ["click.File", "click.argument", "click.command"], "tests.test_arguments.test_stdout_default.inout": [], "tests.test_arguments.test_nargs_envvar": ["click.argument", "<builtin>.isinstance", "click.command", "click.option", "tests.test_arguments.test_nargs_envvar.param"], "tests.test_arguments.test_nargs_envvar.param": [], "tests.test_arguments.test_nargs_envvar.cmd": [], "tests.test_arguments.test_nargs_envvar_only_if_values_empty": ["click.argument", "click.command"], "tests.test_arguments.test_nargs_envvar_only_if_values_empty.cli": [], "tests.test_arguments.test_empty_nargs": ["click.argument", "click.command"], "tests.test_arguments.test_empty_nargs.cmd": ["click.echo"], "tests.test_arguments.test_empty_nargs.cmd2": ["click.echo"], "tests.test_arguments.test_missing_arg": ["click.argument", "click.command"], "tests.test_arguments.test_missing_arg.cmd": ["click.echo"], "tests.test_arguments.test_missing_argument_string_cast": ["<builtin>.str", "click.Context", "click.Command", "pytest.raises", "click.Argument"], "click.Context": [], "tests.test_arguments.test_implicit_non_required": ["click.argument", "click.command"], "tests.test_arguments.test_implicit_non_required.cli": ["click.echo"], "tests.test_arguments.test_eat_options": ["click.option", "click.argument", "click.command"], "tests.test_arguments.test_eat_options.cmd": ["click.echo"], "tests.test_arguments.test_nargs_star_ordering": ["click.argument", "click.command"], "tests.test_arguments.test_nargs_star_ordering.cmd": ["click.echo"], "tests.test_arguments.test_nargs_specified_plus_star_ordering": ["click.argument", "click.command"], "tests.test_arguments.test_nargs_specified_plus_star_ordering.cmd": ["click.echo"], "tests.test_arguments.test_defaults_for_nargs": ["click.argument", "click.command"], "tests.test_arguments.test_defaults_for_nargs.cmd": ["click.echo"], "tests.test_arguments.test_multiple_param_decls_not_allowed": ["click.Choice", "click.argument", "pytest.raises", "click.command"], "tests.test_arguments.test_multiple_param_decls_not_allowed.copy": ["click.echo"], "tests.test_arguments.test_multiple_not_allowed": ["pytest.raises", "click.Argument"], "tests.test_arguments.test_nargs_bad_default": ["pytest.raises", "click.Argument"], "tests.test_arguments.test_subcommand_help": ["click.pass_context", "click.argument", "click.pass_obj", "click.option", "click.group"], "tests.test_arguments.test_subcommand_help.cli": ["<builtin>.dict"], "click.pass_obj": [], "tests.test_arguments.test_subcommand_help.cmd": ["click.echo"], "tests.test_arguments.test_nested_subcommand_help": ["click.group", "click.option", "click.argument"], "tests.test_arguments.test_nested_subcommand_help.cli": [], "tests.test_arguments.test_nested_subcommand_help.cmd": [], "tests.test_arguments.test_nested_subcommand_help.subcmd": ["click.echo"], "tests.test_types": ["pytest.mark.parametrize", "pytest.mark.skipif"], "tests.test_types.test_range": [], "tests.test_types.test_range_fail": ["pytest.raises"], "tests.test_types.test_float_range_no_clamp_open": ["click.FloatRange", "pytest.raises"], "click.FloatRange": [], "tests.test_types.test_cast_multi_default": ["click.Command", "click.Option", "click.Argument"], "tests.test_types.test_cast_multi_default.<lambda1>": [], "tests.test_types.test_path_type": ["click.Path", "click.Command", "click.Argument"], "tests.test_types.test_path_type.<lambda1>": [], "tests.test_types.test_path_resolve_symlink": ["click.Argument", "click.Path", "pathlib.Path", "click.Command", "click.Context"], "pathlib.Path": [], "tests.test_options": ["pytest.mark.parametrize"], "tests.test_options.test_prefixes": ["click.option", "re.search", "click.command"], "tests.test_options.test_prefixes.cli": ["click.echo"], "re.search": [], "tests.test_options.test_invalid_option": ["click.Option", "pytest.raises", "<builtin>.str"], "tests.test_options.test_invalid_nargs": ["click.option", "pytest.raises", "click.command"], "tests.test_options.test_invalid_nargs.cli": [], "tests.test_options.test_nargs_tup_composite_mult": ["click.option", "click.command"], "tests.test_options.test_nargs_tup_composite_mult.copy": ["click.echo"], "tests.test_options.test_counting": ["click.IntRange", "click.option", "re.search", "click.command"], "click.IntRange": [], "tests.test_options.test_counting.cli": ["click.echo"], "tests.test_options.test_unknown_options": ["click.command"], "tests.test_options.test_unknown_options.cli": [], "tests.test_options.test_suggest_possible_options": ["click.Command", "click.Option"], "tests.test_options.test_multiple_required": ["click.option", "click.command"], "tests.test_options.test_multiple_required.cli": ["click.echo"], "tests.test_options.test_init_good_default_list": ["click.Option"], "tests.test_options.test_init_bad_default_list": ["click.Option", "pytest.raises"], "tests.test_options.test_empty_envvar": ["click.Path", "click.option", "click.command"], "tests.test_options.test_empty_envvar.cli": ["click.echo"], "tests.test_options.test_multiple_envvar": ["click.Path", "click.option", "click.command"], "tests.test_options.test_multiple_envvar.cmd": ["click.echo"], "tests.test_options.test_trailing_blanks_boolean_envvar": ["click.option", "click.command"], "tests.test_options.test_trailing_blanks_boolean_envvar.cli": ["click.echo"], "tests.test_options.test_multiple_default_help": ["click.option", "click.command"], "tests.test_options.test_multiple_default_help.cmd": [], "tests.test_options.test_show_default_default_map": ["click.option", "click.command"], "tests.test_options.test_show_default_default_map.cmd": ["click.echo"], "tests.test_options.test_multiple_default_type": ["click.Command", "click.Option", "click.Context"], "tests.test_options.test_multiple_default_composite_type": ["click.Command", "click.Option", "<builtin>.isinstance", "click.Context"], "tests.test_options.test_parse_multiple_default_composite_type": ["click.option", "click.command"], "tests.test_options.test_parse_multiple_default_composite_type.cmd": ["click.echo"], "tests.test_options.test_dynamic_default_help_unset": ["click.option", "click.command"], "tests.test_options.test_dynamic_default_help_unset.<lambda1>": ["os.environ.get"], "os.environ.get": [], "tests.test_options.test_dynamic_default_help_unset.cmd": ["<builtin>.print"], "<builtin>.print": [], "tests.test_options.test_dynamic_default_help_text": ["click.option", "click.command"], "tests.test_options.test_dynamic_default_help_text.<lambda1>": ["os.environ.get"], "tests.test_options.test_dynamic_default_help_text.cmd": ["<builtin>.print"], "tests.test_options.test_dynamic_default_help_special_method": ["click.Command", "click.Option", "click.Context"], "tests.test_options.test_dynamic_default_help_special_method.Value.__call__": [], "tests.test_options.test_dynamic_default_help_special_method.Value.__str__": [], "tests.test_options.test_intrange_default_help_text": ["click.Command", "click.Option", "click.Context"], "tests.test_options.test_count_default_type_help": ["click.Command", "click.Option", "click.Context"], "tests.test_options.test_file_type_help_default": ["click.Command", "click.File", "click.Option", "click.Context"], "tests.test_options.test_toupper_envvar_prefix": ["click.option", "click.command"], "tests.test_options.test_toupper_envvar_prefix.cmd": ["click.echo"], "tests.test_options.test_nargs_envvar": ["click.option", "click.command"], "tests.test_options.test_nargs_envvar.cmd": ["click.echo"], "tests.test_options.test_show_envvar": ["click.option", "click.command"], "tests.test_options.test_show_envvar.cmd": [], "tests.test_options.test_show_envvar_auto_prefix": ["click.option", "click.command"], "tests.test_options.test_show_envvar_auto_prefix.cmd": [], "tests.test_options.test_show_envvar_auto_prefix_dash_in_command": ["click.group", "click.option"], "tests.test_options.test_show_envvar_auto_prefix_dash_in_command.cli": [], "tests.test_options.test_show_envvar_auto_prefix_dash_in_command.foo_bar": [], "tests.test_options.test_custom_validation": ["click.option", "click.command"], "tests.test_options.test_custom_validation.validate_pos_int": ["click.BadParameter"], "click.BadParameter": [], "tests.test_options.test_custom_validation.cmd": ["click.echo"], "tests.test_options.test_callback_validates_prompt": ["click.option", "click.command"], "tests.test_options.test_callback_validates_prompt.validate": ["click.BadParameter"], "tests.test_options.test_callback_validates_prompt.cli": ["click.echo"], "tests.test_options.test_winstyle_options": ["click.option", "click.command"], "tests.test_options.test_winstyle_options.cmd": ["click.echo"], "tests.test_options.test_legacy_options": ["click.option", "click.command"], "tests.test_options.test_legacy_options.cmd": ["click.echo"], "tests.test_options.test_missing_option_string_cast": ["click.Context", "click.Command", "click.Option", "pytest.raises", "<builtin>.str"], "tests.test_options.test_missing_required_flag": ["click.Command", "click.Option"], "tests.test_options.test_missing_choice": ["click.Choice", "click.option", "click.command"], "tests.test_options.test_missing_choice.cmd": ["click.echo"], "tests.test_options.test_case_insensitive_choice": ["click.Choice", "click.option", "click.command"], "tests.test_options.test_case_insensitive_choice.cmd": ["click.echo"], "tests.test_options.test_case_insensitive_choice.cmd2": ["click.echo"], "tests.test_options.test_case_insensitive_choice_returned_exactly": ["click.Choice", "click.option", "click.command"], "tests.test_options.test_case_insensitive_choice_returned_exactly.cmd": ["click.echo"], "tests.test_options.test_option_help_preserve_paragraphs": ["click.Path", "click.option", "click.command"], "tests.test_options.test_option_help_preserve_paragraphs.cmd": [], "tests.test_options.test_argument_custom_class": ["click.argument", "click.command"], "tests.test_options.test_argument_custom_class.CustomArgument.get_default": [], "tests.test_options.test_argument_custom_class.cmd": ["click.echo"], "tests.test_options.test_option_custom_class": ["click.option", "click.command"], "tests.test_options.test_option_custom_class.CustomOption.get_help_record": [], "tests.test_options.test_option_custom_class.cmd": ["click.echo"], "tests.test_options.test_option_custom_class_reusable": ["click.option", "click.command", "tests.test_options.test_option_custom_class_reusable.testoption"], "tests.test_options.test_option_custom_class_reusable.CustomOption.get_help_record": [], "tests.test_options.test_option_custom_class_reusable.testoption": [], "tests.test_options.test_option_custom_class_reusable.cmd1": ["click.echo"], "tests.test_options.test_option_custom_class_reusable.cmd2": ["click.echo"], "tests.test_options.test_bool_flag_with_type": ["click.option", "click.command"], "tests.test_options.test_bool_flag_with_type.cmd": [], "tests.test_options.test_aliases_for_flags": ["click.option", "click.command"], "tests.test_options.test_aliases_for_flags.cli": ["click.echo"], "tests.test_options.test_aliases_for_flags.cli_alt": ["click.echo"], "tests.test_options.test_option_names": ["click.option", "click.command"], "tests.test_options.test_option_names.cmd": ["click.echo", "<builtin>.str"], "tests.test_options.test_flag_duplicate_names": ["click.Option", "pytest.raises"], "tests.test_options.test_show_default_boolean_flag_name": ["click.Command", "click.Option", "click.Context"], "tests.test_options.test_show_true_default_boolean_flag_value": ["click.Command", "click.Option", "click.Context"], "tests.test_options.test_hide_false_default_boolean_flag_value": ["click.Command", "click.Option", "click.Context"], "tests.test_options.test_show_default_string": ["click.Command", "click.Option", "click.Context"], "tests.test_options.test_do_not_show_no_default": ["click.Command", "click.Option", "click.Context"], "tests.test_options.test_do_not_show_default_empty_multiple": ["click.Command", "click.Option", "click.Context"], "tests.test_options.test_show_default_precedence": ["click.Command", "click.Option", "click.Context"], "tests.test_options.test_option_with_optional_value": ["click.option", "click.argument", "click.command"], "tests.test_options.test_option_with_optional_value.cli": [], "tests.test_options.test_multiple_option_with_optional_value": ["click.Command", "click.Option", "click.Argument"], "tests.test_options.test_multiple_option_with_optional_value.<lambda1>": [], "tests.test_options.test_type_from_flag_value": ["click.Option"], "tests.test_options.test_is_bool_flag_is_correctly_set": [], "tests.test_options.test_invalid_flag_combinations": ["click.Option", "pytest.raises", "<builtin>.str"], "tests.test_custom_classes": [], "tests.test_custom_classes.test_command_context_class": ["click.Command.__init__", "<builtin>.isinstance", "click.Command.make_context"], "click.Command.__init__": [], "click.Command.make_context": [], "tests.test_custom_classes.test_context_invoke_type": ["click.pass_context", "click.argument", "click.command"], "tests.test_custom_classes.test_context_invoke_type.second": ["<builtin>.id", "<builtin>.isinstance"], "<builtin>.id": [], "tests.test_custom_classes.test_context_invoke_type.first": ["<builtin>.id", "<builtin>.isinstance"], "tests.test_custom_classes.test_context_formatter_class": ["click.Context.get_help", "click.Command", "click.Context.__init__"], "tests.test_custom_classes.test_context_formatter_class.CustomFormatter.write_heading": ["<builtin>.super", "click.style"], "click.style": [], "<builtin>.super": [], "click.Context.__init__": [], "click.Context.get_help": [], "tests.test_custom_classes.test_group_command_class": ["click.Group.command", "<builtin>.type", "click.Group.__init__"], "click.Group.__init__": [], "tests.test_custom_classes.test_group_command_class.<lambda1>": [], "click.Group.command": [], "tests.test_custom_classes.test_group_command_class.<lambda2>": [], "tests.test_custom_classes.test_group_group_class": ["click.Group.group", "click.Group.command", "<builtin>.type", "click.Group.__init__"], "tests.test_custom_classes.test_group_group_class.<lambda1>": [], "click.Group.group": [], "tests.test_custom_classes.test_group_group_class.<lambda2>": [], "tests.test_custom_classes.test_group_group_class_self": ["click.Group.group", "<builtin>.type", "click.Group.__init__"], "tests.test_custom_classes.test_group_group_class_self.<lambda1>": [], "tests.test_imports": [], "tests.test_imports.test_light_imports": ["json.loads", "subprocess.Popen"], "subprocess.Popen": [], "json.loads": [], "tests.test_testing": ["pytest.mark.parametrize", "pytest.mark.skipif"], "tests.test_testing.test_runner": ["click.testing.CliRunner", "click.command"], "tests.test_testing.test_runner.test": ["click.get_binary_stream"], "click.get_binary_stream": [], "tests.test_testing.test_echo_stdin_stream": ["click.testing.CliRunner", "click.command"], "tests.test_testing.test_echo_stdin_stream.test": ["click.get_binary_stream"], "tests.test_testing.test_echo_stdin_prompts": ["click.testing.CliRunner", "click.option", "click.command"], "tests.test_testing.test_echo_stdin_prompts.test_python_input": ["click.echo", "<builtin>.input"], "<builtin>.input": [], "tests.test_testing.test_echo_stdin_prompts.test_prompt": ["click.echo"], "tests.test_testing.test_echo_stdin_prompts.test_hidden_prompt": ["click.echo"], "tests.test_testing.test_echo_stdin_prompts.test_multiple_prompts": ["click.echo"], "tests.test_testing.test_runner_with_stream": ["click.testing.CliRunner", "click.command", "io.BytesIO"], "tests.test_testing.test_runner_with_stream.test": ["click.get_binary_stream"], "io.BytesIO": [], "tests.test_testing.test_prompts": ["click.testing.CliRunner", "click.option", "click.command"], "tests.test_testing.test_prompts.test": ["click.echo"], "tests.test_testing.test_getchar": ["click.testing.CliRunner", "click.command"], "tests.test_testing.test_getchar.continue_it": ["click.echo", "click.getchar"], "click.getchar": [], "tests.test_testing.test_getchar.getchar_echo": ["click.echo", "click.getchar"], "tests.test_testing.test_catch_exceptions": ["<builtin>.isinstance", "click.command", "<builtin>.len", "click.testing.CliRunner", "<builtin>.type", "pytest.raises"], "tests.test_testing.test_catch_exceptions.cli": [], "tests.test_testing.test_with_color": ["click.testing.CliRunner", "click.style", "click.command"], "tests.test_testing.test_with_color.cli": ["click.secho"], "click.secho": [], "tests.test_testing.test_with_color_but_pause_not_blocking": ["click.testing.CliRunner", "click.command"], "tests.test_testing.test_with_color_but_pause_not_blocking.cli": ["click.pause"], "click.pause": [], "tests.test_testing.test_exit_code_and_output_from_sys_exit": ["click.pass_context", "click.testing.CliRunner", "click.command"], "tests.test_testing.test_exit_code_and_output_from_sys_exit.cli_string": ["sys.exit", "click.echo"], "sys.exit": [], "tests.test_testing.test_exit_code_and_output_from_sys_exit.cli_string_ctx_exit": ["click.echo"], "tests.test_testing.test_exit_code_and_output_from_sys_exit.cli_int": ["sys.exit", "click.echo"], "tests.test_testing.test_exit_code_and_output_from_sys_exit.cli_int_ctx_exit": ["click.echo"], "tests.test_testing.test_exit_code_and_output_from_sys_exit.cli_float": ["sys.exit", "click.echo"], "tests.test_testing.test_exit_code_and_output_from_sys_exit.cli_float_ctx_exit": ["click.echo"], "tests.test_testing.test_exit_code_and_output_from_sys_exit.cli_no_error": ["click.echo"], "tests.test_testing.test_env": ["click.testing.CliRunner", "<builtin>.dict", "click.command"], "tests.test_testing.test_env.cli_env": ["click.echo"], "tests.test_testing.test_stderr": ["click.testing.CliRunner", "pytest.raises", "click.command"], "tests.test_testing.test_stderr.cli_stderr": ["click.echo"], "tests.test_testing.test_stderr.cli_empty_stderr": ["click.echo"], "tests.test_testing.test_args": ["click.testing.CliRunner", "click.option", "click.command"], "tests.test_testing.test_args.cli_args": ["click.echo"], "tests.test_testing.test_setting_prog_name_in_extra": ["click.testing.CliRunner", "click.command"], "tests.test_testing.test_setting_prog_name_in_extra.cli": ["click.echo"], "tests.test_testing.test_command_standalone_mode_returns_value": ["click.testing.CliRunner", "click.command"], "tests.test_testing.test_command_standalone_mode_returns_value.cli": ["click.echo"], "tests.test_testing.test_file_stdin_attrs": ["click.File", "click.argument", "click.command"], "tests.test_testing.test_file_stdin_attrs.cli": ["click.echo"], "tests.test_testing.test_isolated_runner": ["os.path.exists"], "tests.test_testing.test_isolated_runner_custom_tempdir": ["os.rmdir", "os.path.exists"], "os.rmdir": [], "tests.test_testing.test_isolation_stderr_errors": ["click.testing.CliRunner", "click.echo"], "tests.test_context": ["pytest.mark.parametrize"], "tests.test_context.test_ensure_context_objects": ["click.make_pass_decorator", "tests.test_context.test_ensure_context_objects.pass_foo", "click.group"], "tests.test_context.test_ensure_context_objects.Foo.__init__": [], "click.make_pass_decorator": [], "tests.test_context.test_ensure_context_objects.pass_foo": [], "tests.test_context.test_ensure_context_objects.cli": [], "tests.test_context.test_ensure_context_objects.test": ["click.echo"], "tests.test_context.test_get_context_objects": ["click.pass_context", "click.make_pass_decorator", "tests.test_context.test_get_context_objects.pass_foo", "click.group"], "tests.test_context.test_get_context_objects.Foo.__init__": [], "tests.test_context.test_get_context_objects.cli": ["tests.test_context.test_get_context_objects.Foo.__init__"], "tests.test_context.test_get_context_objects.pass_foo": [], "tests.test_context.test_get_context_objects.test": ["click.echo"], "tests.test_context.test_get_context_objects_no_ensuring": ["click.pass_context", "click.make_pass_decorator", "tests.test_context.test_get_context_objects_no_ensuring.pass_foo", "click.group"], "tests.test_context.test_get_context_objects_no_ensuring.Foo.__init__": [], "tests.test_context.test_get_context_objects_no_ensuring.cli": ["tests.test_context.test_get_context_objects_no_ensuring.Foo.__init__"], "tests.test_context.test_get_context_objects_no_ensuring.pass_foo": [], "tests.test_context.test_get_context_objects_no_ensuring.test": ["click.echo"], "tests.test_context.test_get_context_objects_missing": ["click.pass_context", "<builtin>.isinstance", "click.make_pass_decorator", "click.group", "tests.test_context.test_get_context_objects_missing.pass_foo", "<builtin>.str"], "tests.test_context.test_get_context_objects_missing.cli": [], "tests.test_context.test_get_context_objects_missing.pass_foo": [], "tests.test_context.test_get_context_objects_missing.test": ["click.echo"], "tests.test_context.test_multi_enter": ["click.pass_context", "click.command"], "tests.test_context.test_multi_enter.cli": [], "tests.test_context.test_multi_enter.cli.callback": [], "tests.test_context.test_global_context_object": ["click.pass_context", "click.get_current_context", "click.command"], "tests.test_context.test_global_context_object.cli": ["click.get_current_context"], "click.get_current_context": [], "tests.test_context.test_context_meta": ["click.pass_context", "click.command"], "tests.test_context.test_context_meta.set_language": ["click.get_current_context"], "tests.test_context.test_context_meta.get_language": ["click.get_current_context"], "tests.test_context.test_context_meta.cli": ["tests.test_context.test_context_meta.get_language", "tests.test_context.test_context_meta.set_language"], "tests.test_context.test_make_pass_meta_decorator": ["click.pass_context", "click.group", "click.decorators.pass_meta_key"], "tests.test_context.test_make_pass_meta_decorator.cli": [], "click.decorators.pass_meta_key": [], "tests.test_context.test_make_pass_meta_decorator.show": [], "tests.test_context.test_make_pass_meta_decorator_doc": ["click.decorators.pass_meta_key"], "tests.test_context.test_context_pushing": ["click.command", "click.Context"], "tests.test_context.test_context_pushing.cli": [], "tests.test_context.test_context_pushing.test_callback": [], "tests.test_context.test_pass_obj": ["click.pass_context", "click.group", "click.pass_obj"], "tests.test_context.test_pass_obj.cli": [], "tests.test_context.test_pass_obj.test": ["click.echo"], "tests.test_context.test_close_before_pop": ["click.pass_context", "click.command"], "tests.test_context.test_close_before_pop.cli": ["click.echo"], "tests.test_context.test_close_before_pop.cli.foo": ["click.get_current_context"], "tests.test_context.test_with_resource": ["tests.test_context.test_with_resource.manager", "click.Command", "contextlib.contextmanager", "click.Context"], "contextlib.contextmanager": [], "tests.test_context.test_with_resource.manager": [], "tests.test_context.test_make_pass_decorator_args": ["click.pass_context", "click.make_pass_decorator", "tests.test_context.test_make_pass_decorator_args.pass_foo", "click.group"], "tests.test_context.test_make_pass_decorator_args.cli": [], "tests.test_context.test_make_pass_decorator_args.pass_foo": [], "tests.test_context.test_make_pass_decorator_args.test1": ["click.echo"], "tests.test_context.test_make_pass_decorator_args.test2": ["click.echo"], "tests.test_context.test_propagate_show_default_setting": ["click.Group", "click.Command", "click.Option"], "tests.test_context.test_exit_not_standalone": ["click.pass_context", "click.command"], "tests.test_context.test_exit_not_standalone.cli": [], "tests.test_context.test_parameter_source": ["click.pass_context", "click.option", "click.command"], "tests.test_context.test_parameter_source.cli": [], "tests.test_context.test_propagate_opt_prefixes": ["click.Command", "click.Context"], "tests.test_termui": ["pytest.mark.parametrize", "platform.system", "pytest.mark.skipif"], "tests.test_termui.FakeClock.__init__": [], "tests.test_termui.FakeClock.advance_time": [], "tests.test_termui.FakeClock.time": [], "tests.test_termui._create_progress": ["<builtin>.tuple", "<builtin>.setattr", "<builtin>.range"], "<builtin>.tuple": [], "<builtin>.setattr": [], "tests.test_termui.test_progressbar_strip_regression": [], "tests.test_termui.test_progressbar_strip_regression.cli": ["tests.test_termui._create_progress"], "tests.test_termui.test_progressbar_strip_regression.<lambda1>": [], "tests.test_termui.test_progressbar_length_hint": [], "tests.test_termui.test_progressbar_length_hint.Hinted.__init__": ["<builtin>.list", "<builtin>.range"], "tests.test_termui.test_progressbar_length_hint.Hinted.__length_hint__": ["<builtin>.len"], "tests.test_termui.test_progressbar_length_hint.Hinted.__iter__": [], "tests.test_termui.test_progressbar_length_hint.Hinted.__next__": [], "tests.test_termui.test_progressbar_length_hint.cli": ["tests.test_termui.test_progressbar_length_hint.Hinted.__init__"], "tests.test_termui.test_progressbar_length_hint.<lambda1>": [], "tests.test_termui.test_progressbar_hidden": [], "tests.test_termui.test_progressbar_hidden.cli": ["tests.test_termui._create_progress"], "tests.test_termui.test_progressbar_hidden.<lambda1>": [], "tests.test_termui.test_progressbar_time_per_iteration": ["tests.test_termui._create_progress"], "tests.test_termui.test_progressbar_eta": ["tests.test_termui._create_progress"], "tests.test_termui.test_progressbar_format_eta": ["tests.test_termui._create_progress"], "tests.test_termui.test_progressbar_format_pos": ["tests.test_termui._create_progress"], "tests.test_termui.test_progressbar_format_bar": ["tests.test_termui._create_progress"], "tests.test_termui.test_progressbar_format_progress_line": ["tests.test_termui._create_progress"], "tests.test_termui.test_progressbar_format_progress_line_with_show_func": ["tests.test_termui._create_progress"], "tests.test_termui.test_progressbar_format_progress_line_with_show_func.item_show_func": [], "tests.test_termui.test_progressbar_init_exceptions": ["pytest.raises"], "tests.test_termui.test_progressbar_iter_outside_with_exceptions": ["<builtin>.iter", "pytest.raises"], "<builtin>.iter": [], "tests.test_termui.test_progressbar_is_iterator": [], "tests.test_termui.test_progressbar_is_iterator.cli": ["<builtin>.next", "<builtin>.range"], "<builtin>.next": [], "tests.test_termui.test_progressbar_is_iterator.<lambda1>": [], "tests.test_termui.test_choices_list_in_prompt": [], "tests.test_termui.test_choices_list_in_prompt.cli_with_choices": [], "tests.test_termui.test_choices_list_in_prompt.cli_without_choices": [], "tests.test_termui.test_file_prompt_default_format": [], "tests.test_termui.test_file_prompt_default_format.cli": [], "tests.test_termui.test_secho": [], "platform.system": [], "tests.test_termui.test_secho_non_text": [], "tests.test_termui.test_progressbar_yields_all_items": ["<builtin>.list", "<builtin>.range", "<builtin>.len"], "tests.test_termui.test_progressbar_update": ["tests.test_termui.FakeClock.__init__"], "tests.test_termui.test_progressbar_update.cli": ["<builtin>.print", "tests.test_termui.FakeClock.advance_time", "<builtin>.range"], "tests.test_termui.test_progressbar_update.<lambda1>": [], "tests.test_termui.test_progressbar_item_show_func": ["<builtin>.enumerate"], "tests.test_termui.test_progressbar_item_show_func.cli": ["<builtin>.range"], "tests.test_termui.test_progressbar_item_show_func.cli.<lambda1>": ["<builtin>.str"], "tests.test_termui.test_progressbar_item_show_func.<lambda1>": [], "<builtin>.enumerate": [], "tests.test_termui.test_progressbar_update_with_item_show_func": [], "tests.test_termui.test_progressbar_update_with_item_show_func.cli": [], "tests.test_termui.test_progressbar_update_with_item_show_func.cli.<lambda1>": [], "tests.test_termui.test_progressbar_update_with_item_show_func.<lambda1>": [], "tests.test_termui.test_progress_bar_update_min_steps": ["tests.test_termui._create_progress"], "tests.test_termui.test_getchar_windows": [], "tests.test_termui.test_getchar_windows.<lambda1>": [], "tests.test_termui.test_getchar_windows.<lambda2>": [], "tests.test_termui.test_getchar_special_key_windows": [], "tests.test_termui.test_getchar_special_key_windows.<lambda1>": [], "tests.test_termui.test_getchar_windows_exceptions": ["pytest.raises"], "tests.test_termui.test_getchar_windows_exceptions.<lambda1>": [], "tests.test_termui.test_fast_edit": [], "tests.test_termui.test_prompt_required_with_required": [], "tests.test_termui.test_prompt_required_with_required.cli": ["<builtin>.str"], "tests.test_termui.test_prompt_required_false": [], "tests.test_termui.test_prompt_required_false.cli": [], "tests.test_termui.test_confirmation_prompt": [], "tests.test_termui.test_confirmation_prompt.cli": [], "tests.test_parser": ["pytest.mark.parametrize"], "tests.test_parser.test_split_arg_string": ["click.parser.split_arg_string"], "click.parser.split_arg_string": [], "tests.test_parser.test_parser_default_prefixes": ["click.parser.OptionParser"], "click.parser.OptionParser": [], "tests.test_parser.test_parser_collects_prefixes": ["click.Command", "click.parser.OptionParser", "click.Option", "click.Context"], "tests.test_chain": ["pytest.mark.parametrize", "pytest.mark.xfail"], "tests.test_chain.debug": ["click.get_current_context", "sys._getframe", "click.echo"], "sys._getframe": [], "tests.test_chain.test_basic_chaining": ["click.group"], "tests.test_chain.test_basic_chaining.cli": [], "tests.test_chain.test_basic_chaining.sdist": ["click.echo"], "tests.test_chain.test_basic_chaining.bdist": ["click.echo"], "tests.test_chain.test_chaining_help": ["click.group"], "tests.test_chain.test_chaining_help.cli": [], "tests.test_chain.test_chaining_help.sdist": ["click.echo"], "tests.test_chain.test_chaining_help.bdist": ["click.echo"], "tests.test_chain.test_chaining_with_options": ["click.group", "click.option"], "tests.test_chain.test_chaining_with_options.cli": [], "tests.test_chain.test_chaining_with_options.sdist": ["click.echo"], "tests.test_chain.test_chaining_with_options.bdist": ["click.echo"], "tests.test_chain.test_no_command_result_callback": ["click.group"], "tests.test_chain.test_no_command_result_callback.cli": [], "tests.test_chain.test_no_command_result_callback.process_result": ["click.echo"], "tests.test_chain.test_chaining_with_arguments": ["click.group", "click.argument"], "tests.test_chain.test_chaining_with_arguments.cli": [], "tests.test_chain.test_chaining_with_arguments.sdist": ["click.echo"], "tests.test_chain.test_chaining_with_arguments.bdist": ["click.echo"], "tests.test_chain.test_pipeline": ["click.group", "click.option", "click.File"], "tests.test_chain.test_pipeline.cli": [], "tests.test_chain.test_pipeline.process_pipeline": ["click.echo"], "tests.test_chain.test_pipeline.make_uppercase": [], "tests.test_chain.test_pipeline.make_uppercase.processor": [], "tests.test_chain.test_pipeline.make_strip": [], "tests.test_chain.test_pipeline.make_strip.processor": [], "tests.test_chain.test_args_and_chain": ["click.group"], "tests.test_chain.test_args_and_chain.cli": ["tests.test_chain.debug"], "tests.test_chain.test_args_and_chain.a": ["tests.test_chain.debug"], "tests.test_chain.test_args_and_chain.b": ["tests.test_chain.debug"], "tests.test_chain.test_args_and_chain.c": ["tests.test_chain.debug"], "tests.test_chain.test_multicommand_arg_behavior": ["click.group", "click.argument", "pytest.raises"], "tests.test_chain.test_multicommand_arg_behavior.bad_cli": [], "tests.test_chain.test_multicommand_arg_behavior.bad_cli2": [], "tests.test_chain.test_multicommand_arg_behavior.cli": ["click.echo"], "tests.test_chain.test_multicommand_arg_behavior.a": ["click.echo"], "pytest.mark.xfail": [], "tests.test_chain.test_multicommand_chaining": ["click.group"], "tests.test_chain.test_multicommand_chaining.cli": ["tests.test_chain.debug"], "tests.test_chain.test_multicommand_chaining.l1a": ["tests.test_chain.debug"], "tests.test_chain.test_multicommand_chaining.l2a": ["tests.test_chain.debug"], "tests.test_chain.test_multicommand_chaining.l2b": ["tests.test_chain.debug"], "tests.test_chain.test_multicommand_chaining.l1b": ["tests.test_chain.debug"], "tests.test_command_decorators": [], "tests.test_command_decorators.test_command_no_parens": ["click.command"], "tests.test_command_decorators.test_command_no_parens.cli": ["click.echo"], "tests.test_command_decorators.test_group_no_parens": ["click.group"], "tests.test_command_decorators.test_group_no_parens.grp": ["click.echo"], "tests.test_command_decorators.test_group_no_parens.cmd1": ["click.echo"], "tests.test_command_decorators.test_group_no_parens.grp2": ["click.echo"], "tests.test_command_decorators.test_group_no_parens.cmd2": ["click.echo"], "tests.test_command_decorators.test_params_argument": ["click.argument", "click.command", "click.Argument"], "tests.test_command_decorators.test_params_argument.cli": ["click.echo"], "tests.test_info_dict": ["pytest.mark.parametrize"], "tests.test_info_dict.test_parameter": [], "tests.test_info_dict.test_command": [], "tests.test_info_dict.test_context": [], "tests.test_info_dict.test_paramtype_no_name": [], "tests.test_commands": ["pytest.mark.parametrize"], "tests.test_commands.test_other_command_invoke": ["click.pass_context", "click.argument", "click.command"], "tests.test_commands.test_other_command_invoke.cli": [], "tests.test_commands.test_other_command_invoke.other_cmd": ["click.echo"], "tests.test_commands.test_other_command_forward": ["click.pass_context", "click.Group", "click.option"], "tests.test_commands.test_other_command_forward.test": ["click.echo"], "tests.test_commands.test_other_command_forward.dist": [], "tests.test_commands.test_forwarded_params_consistency": ["click.pass_context", "click.Group", "click.option"], "tests.test_commands.test_forwarded_params_consistency.first": ["click.echo"], "tests.test_commands.test_forwarded_params_consistency.second": ["click.echo"], "tests.test_commands.test_auto_shorthelp": ["click.group", "re.search"], "tests.test_commands.test_auto_shorthelp.cli": [], "tests.test_commands.test_auto_shorthelp.short": [], "tests.test_commands.test_auto_shorthelp.special_chars": [], "tests.test_commands.test_auto_shorthelp.long": [], "tests.test_commands.test_help_truncation": ["click.command"], "tests.test_commands.test_help_truncation.cli": [], "tests.test_commands.test_no_args_is_help": ["click.command"], "tests.test_commands.test_no_args_is_help.cli": [], "tests.test_commands.test_default_maps": ["click.group", "click.option"], "tests.test_commands.test_default_maps.cli": [], "tests.test_commands.test_default_maps.foo": ["click.echo"], "tests.test_commands.test_group_with_args": ["click.group", "click.argument"], "tests.test_commands.test_group_with_args.cli": ["click.echo"], "tests.test_commands.test_group_with_args.move": ["click.echo"], "tests.test_commands.test_base_command": ["click.group", "tests.test_commands.test_base_command.OptParseCommand.__init__", "optparse.OptionParser"], "tests.test_commands.test_base_command.cli": [], "tests.test_commands.test_base_command.OptParseCommand.__init__": ["<builtin>.super"], "tests.test_commands.test_base_command.OptParseCommand.parse_args": ["<builtin>.vars", "<builtin>.str"], "<builtin>.vars": [], "tests.test_commands.test_base_command.OptParseCommand.get_usage": [], "tests.test_commands.test_base_command.OptParseCommand.get_help": [], "tests.test_commands.test_base_command.OptParseCommand.invoke": [], "optparse.OptionParser": [], "tests.test_commands.test_base_command.test_callback": ["click.echo"], "tests.test_commands.test_object_propagation": ["click.pass_context", "click.group", "click.option"], "tests.test_commands.test_object_propagation.cli": [], "tests.test_commands.test_object_propagation.sync": ["click.echo"], "tests.test_commands.test_other_command_invoke_with_defaults": ["click.pass_context", "click.option", "click.command"], "tests.test_commands.test_other_command_invoke_with_defaults.cli": [], "tests.test_commands.test_other_command_invoke_with_defaults.other_cmd": [], "tests.test_commands.test_invoked_subcommand": ["click.pass_context", "click.group"], "tests.test_commands.test_invoked_subcommand.cli": ["click.echo"], "tests.test_commands.test_invoked_subcommand.sync": ["click.echo"], "tests.test_commands.test_aliased_command_canonical_name": ["click.Group.command", "click.Group.__init__"], "tests.test_commands.test_aliased_command_canonical_name.AliasedGroup.get_command": [], "tests.test_commands.test_aliased_command_canonical_name.AliasedGroup.resolve_command": ["<builtin>.super"], "tests.test_commands.test_aliased_command_canonical_name.push": ["click.echo"], "tests.test_commands.test_group_add_command_name": ["click.Group", "click.Command", "click.Option"], "tests.test_commands.test_unprocessed_options": ["click.option", "click.argument", "<builtin>.dict", "click.command"], "tests.test_commands.test_unprocessed_options.cli": ["click.echo"], "tests.test_commands.test_deprecated_in_help_messages": ["click.command"], "tests.test_commands.test_deprecated_in_help_messages.cli": [], "tests.test_commands.test_deprecated_in_invocation": ["click.command"], "tests.test_commands.test_deprecated_in_invocation.deprecated_cmd": [], "tests.test_commands.test_command_parse_args_collects_option_prefixes": ["click.option", "click.command", "click.Context"], "tests.test_commands.test_command_parse_args_collects_option_prefixes.test": [], "tests.test_commands.test_group_parse_args_collects_base_option_prefixes": ["click.group", "click.option", "click.Context"], "tests.test_commands.test_group_parse_args_collects_base_option_prefixes.group": [], "tests.test_commands.test_group_parse_args_collects_base_option_prefixes.command1": [], "tests.test_commands.test_group_parse_args_collects_base_option_prefixes.command2": [], "tests.test_commands.test_group_invoke_collects_used_option_prefixes": ["click.pass_context", "click.group", "click.option", "<builtin>.set"], "<builtin>.set": [], "tests.test_commands.test_group_invoke_collects_used_option_prefixes.group": [], "tests.test_commands.test_group_invoke_collects_used_option_prefixes.command1": [], "tests.test_commands.test_group_invoke_collects_used_option_prefixes.command2": []}
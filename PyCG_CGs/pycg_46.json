{"tests.test_AudioClips": ["pytest.main", "pytest.mark.parametrize"], "tests.test_AudioClips.test_audioclip": ["moviepy.audio.io.AudioFileClip.AudioFileClip", "moviepy.audio.AudioClip.AudioClip", "os.path.join", "os.path.exists"], "os.path.join": [], "moviepy.audio.AudioClip.AudioClip": [], "os.path.exists": [], "moviepy.audio.io.AudioFileClip.AudioFileClip": [], "tests.test_AudioClips.test_audioclip_io": ["moviepy.audio.io.AudioFileClip.AudioFileClip", "moviepy.audio.AudioClip.AudioArrayClip", "numpy.random.random", "numpy.testing.assert_array_almost_equal", "os.path.join", "<builtin>.len"], "numpy.random.random": [], "moviepy.audio.AudioClip.AudioArrayClip": [], "<builtin>.len": [], "numpy.testing.assert_array_almost_equal": [], "tests.test_AudioClips.test_concatenate_audioclips_render": ["moviepy.audio.AudioClip.concatenate_audioclips", "moviepy.audio.AudioClip.AudioClip", "os.path.join"], "moviepy.audio.AudioClip.concatenate_audioclips": [], "tests.test_AudioClips.test_concatenate_audioclips_CompositeAudioClip": ["moviepy.audio.AudioClip.concatenate_audioclips", "moviepy.audio.AudioClip.AudioClip", "numpy.cumsum", "<builtin>.zip", "<builtin>.list", "<builtin>.isinstance", "<builtin>.sum", "<builtin>.max"], "tests.test_AudioClips.test_concatenate_audioclips_CompositeAudioClip.<lambda1>": ["numpy.sin"], "numpy.sin": [], "<builtin>.zip": [], "<builtin>.isinstance": [], "<builtin>.sum": [], "<builtin>.list": [], "numpy.cumsum": [], "<builtin>.max": [], "tests.test_AudioClips.test_CompositeAudioClip_by__init__": ["moviepy.audio.AudioClip.AudioClip", "moviepy.audio.AudioClip.CompositeAudioClip", "<builtin>.zip", "<builtin>.list", "<builtin>.isinstance", "<builtin>.max"], "tests.test_AudioClips.test_CompositeAudioClip_by__init__.<lambda1>": ["numpy.sin"], "moviepy.audio.AudioClip.CompositeAudioClip": [], "tests.test_AudioClips.test_concatenate_audioclip_with_audiofileclip": ["moviepy.audio.io.AudioFileClip.AudioFileClip", "moviepy.audio.AudioClip.AudioClip", "moviepy.audio.AudioClip.concatenate_audioclips", "os.path.join"], "tests.test_AudioClips.test_concatenate_audiofileclips": ["moviepy.audio.io.AudioFileClip.AudioFileClip", "moviepy.audio.AudioClip.concatenate_audioclips", "os.path.join"], "tests.test_AudioClips.test_audioclip_mono_max_volume": ["moviepy.audio.AudioClip.AudioClip", "<builtin>.isinstance"], "pytest.mark.parametrize": [], "tests.test_AudioClips.test_audioclip_stereo_max_volume": ["moviepy.audio.AudioClip.AudioClip", "<builtin>.enumerate", "<builtin>.len", "<builtin>.isinstance"], "tests.test_AudioClips.test_audioclip_stereo_max_volume.make_frame": ["<builtin>.int", "numpy.array", "<builtin>.range", "numpy.sin"], "<builtin>.int": [], "<builtin>.range": [], "numpy.array": [], "<builtin>.enumerate": [], "pytest.main": [], "tests.test_ffmpeg_tools": ["pytest.main"], "tests.test_ffmpeg_tools.test_ffmpeg_extract_subclip": ["moviepy.video.io.ffmpeg_tools.ffmpeg_extract_subclip", "moviepy.video.io.VideoFileClip.VideoFileClip", "shutil.copyfile", "os.mkdir", "os.path.join", "os.path.isfile", "shutil.rmtree", "os.path.isdir"], "os.path.isdir": [], "shutil.rmtree": [], "os.mkdir": [], "shutil.copyfile": [], "moviepy.video.io.ffmpeg_tools.ffmpeg_extract_subclip": [], "os.path.isfile": [], "moviepy.video.io.VideoFileClip.VideoFileClip": [], "tests.test_ffmpeg_tools.test_ffmpeg_resize": ["os.remove", "moviepy.video.io.ffmpeg_tools.ffmpeg_resize", "moviepy.video.io.VideoFileClip.VideoFileClip", "os.path.isfile", "os.path.join", "pytest.raises"], "os.remove": [], "moviepy.video.io.ffmpeg_tools.ffmpeg_resize": [], "pytest.raises": [], "tests.test_ffmpeg_tools.test_ffmpeg_stabilize_video": ["pytest.raises", "moviepy.video.io.ffmpeg_tools.ffmpeg_stabilize_video", "os.mkdir", "os.path.join", "os.path.isfile", "shutil.rmtree", "os.path.isdir"], "moviepy.video.io.ffmpeg_tools.ffmpeg_stabilize_video": [], "tests.test_editor": ["pytest.main"], "tests.test_editor.test_preview_methods": ["moviepy.video.VideoClip.VideoClip.show", "contextlib.redirect_stdout", "moviepy.audio.AudioClip.AudioClip.preview", "io.StringIO", "moviepy.video.VideoClip.VideoClip.preview", "<builtin>.str", "importlib.import_module", "pytest.raises", "moviepy.video.VideoClip.VideoClip.preview.__hash__"], "io.StringIO": [], "contextlib.redirect_stdout": [], "importlib.import_module": [], "moviepy.video.VideoClip.VideoClip.preview.__hash__": [], "moviepy.video.VideoClip.VideoClip.preview": [], "<builtin>.str": [], "moviepy.video.VideoClip.VideoClip.show": [], "moviepy.audio.AudioClip.AudioClip.preview": [], "tests.test_editor.test__init__preview_methods": ["<builtin>.str", "importlib.import_module", "pytest.raises"], "tests.test_fx": ["pytest.param", "pytest.mark.parametrize", "pytest.main", "decimal.Decimal"], "tests.test_fx.test_accel_decel": [], "tests.test_fx.test_blackwhite": ["<builtin>.tuple", "<builtin>.chr", "<builtin>.range", "random.randint", "moviepy.video.fx.blackwhite", "<builtin>.enumerate", "moviepy.BitmapClip"], "<builtin>.chr": [], "random.randint": [], "<builtin>.tuple": [], "moviepy.BitmapClip": [], "moviepy.video.fx.blackwhite": [], "tests.test_fx.test_multiply_color": ["moviepy.video.fx.multiply_color", "moviepy.BitmapClip"], "moviepy.video.fx.multiply_color": [], "tests.test_fx.test_crop": ["moviepy.video.fx.crop", "moviepy.BitmapClip"], "moviepy.video.fx.crop": [], "tests.test_fx.test_even_size": ["moviepy.video.fx.even_size", "moviepy.BitmapClip"], "moviepy.video.fx.even_size": [], "tests.test_fx.test_fadein": ["moviepy.video.fx.fadein", "moviepy.BitmapClip"], "moviepy.video.fx.fadein": [], "tests.test_fx.test_fadeout": ["moviepy.video.fx.fadeout", "os.path.join"], "moviepy.video.fx.fadeout": [], "tests.test_fx.test_freeze": ["moviepy.video.fx.freeze", "<builtin>.list", "<builtin>.enumerate", "<builtin>.hasattr", "<builtin>.len", "pytest.raises", "moviepy.BitmapClip"], "<builtin>.hasattr": [], "moviepy.video.fx.freeze": [], "tests.test_fx.test_freeze_region": ["moviepy.video.fx.freeze_region", "moviepy.BitmapClip"], "moviepy.video.fx.freeze_region": [], "tests.test_fx.test_gamma_corr": [], "tests.test_fx.test_headblur": [], "tests.test_fx.test_invert_colors": ["moviepy.video.fx.invert_colors", "moviepy.BitmapClip"], "moviepy.video.fx.invert_colors": [], "tests.test_fx.test_loop": ["moviepy.AudioClip", "moviepy.video.fx.loop", "os.path.join", "moviepy.BitmapClip"], "moviepy.video.fx.loop": [], "tests.test_fx.test_loop.<lambda1>": ["numpy.sin"], "moviepy.AudioClip": [], "tests.test_fx.test_lum_contrast": ["moviepy.video.fx.lum_contrast", "os.path.join"], "moviepy.video.fx.lum_contrast": [], "tests.test_fx.test_make_loopable": ["moviepy.video.fx.make_loopable", "os.path.join"], "moviepy.video.fx.make_loopable": [], "pytest.param": [], "tests.test_fx.test_margin": ["moviepy.video.fx.margin", "moviepy.ColorClip", "moviepy.BitmapClip"], "moviepy.ColorClip": [], "moviepy.video.fx.margin": [], "tests.test_fx.test_mask_and": ["<builtin>.tuple", "<builtin>.round", "numpy.array", "<builtin>.range", "numpy.array_equal", "random.randint", "random.uniform", "moviepy.ColorClip", "moviepy.VideoClip", "moviepy.video.fx.mask_and"], "random.uniform": [], "<builtin>.round": [], "moviepy.video.fx.mask_and": [], "numpy.array_equal": [], "tests.test_fx.test_mask_and.<lambda1>": [], "moviepy.VideoClip": [], "tests.test_fx.test_mask_and.<lambda2>": [], "tests.test_fx.test_mask_color": [], "tests.test_fx.test_mask_or": ["<builtin>.tuple", "moviepy.video.fx.mask_or", "<builtin>.round", "numpy.array", "<builtin>.range", "numpy.array_equal", "random.randint", "random.uniform", "moviepy.ColorClip", "moviepy.VideoClip"], "moviepy.video.fx.mask_or": [], "tests.test_fx.test_mask_or.<lambda1>": [], "tests.test_fx.test_mask_or.<lambda2>": [], "tests.test_fx.test_mirror_x": ["moviepy.video.fx.mirror_x", "moviepy.BitmapClip"], "moviepy.video.fx.mirror_x": [], "tests.test_fx.test_mirror_y": ["moviepy.video.fx.mirror_y", "moviepy.BitmapClip"], "moviepy.video.fx.mirror_y": [], "tests.test_fx.test_painting": [], "decimal.Decimal": [], "tests.test_fx.<lambda1>": [], "tests.test_fx.<lambda2>": [], "tests.test_fx.<lambda3>": [], "tests.test_fx.test_resize": ["pytest.skip", "<builtin>.range", "moviepy.ColorClip", "<builtin>.isinstance", "<builtin>.int", "<builtin>.hasattr", "<builtin>.len", "pytest.raises"], "pytest.skip": [], "tests.test_fx.<lambda4>": [], "tests.test_fx.test_rotate": ["math.degrees", "tests.test_fx.test_rotate.<lambda1>", "<builtin>.str", "importlib.import_module", "math.radians", "<builtin>.hasattr", "pytest.raises", "moviepy.BitmapClip"], "tests.test_fx.test_rotate.<lambda1>": ["math.radians"], "math.radians": [], "math.degrees": [], "tests.test_fx.test_rotate_nonstandard_angles": ["moviepy.ColorClip", "os.path.join", "moviepy.video.fx.rotate"], "moviepy.video.fx.rotate": [], "tests.test_fx.test_rotate_mask": ["moviepy.ColorClip"], "tests.test_fx.test_rotate_supported_PIL_kwargs": ["<builtin>.filter", "<builtin>.str", "importlib.import_module", "pytest.warns", "<builtin>.list", "<builtin>.len", "moviepy.BitmapClip"], "pytest.warns": [], "tests.test_fx.test_rotate_supported_PIL_kwargs.<lambda1>": [], "<builtin>.filter": [], "tests.test_fx.test_scroll": [], "tests.test_fx.test_multiply_speed": ["moviepy.video.fx.multiply_speed", "moviepy.BitmapClip"], "moviepy.video.fx.multiply_speed": [], "tests.test_fx.test_supersample": [], "tests.test_fx.test_time_mirror": ["moviepy.video.fx.time_mirror", "moviepy.BitmapClip"], "moviepy.video.fx.time_mirror": [], "tests.test_fx.test_time_symmetrize": ["moviepy.video.fx.time_symmetrize", "moviepy.BitmapClip"], "moviepy.video.fx.time_symmetrize": [], "tests.test_fx.test_audio_normalize": ["moviepy.AudioFileClip", "moviepy.audio.fx.audio_normalize"], "moviepy.AudioFileClip": [], "moviepy.audio.fx.audio_normalize": [], "tests.test_fx.test_audio_normalize_muted": ["numpy.array", "numpy.array_equal", "moviepy.AudioClip", "moviepy.audio.fx.audio_normalize"], "tests.test_fx.test_audio_normalize_muted.<lambda1>": [], "tests.test_fx.test_multiply_volume_audioclip": ["<builtin>.len", "moviepy.tools.convert_to_seconds", "numpy.array", "numpy.append", "numpy.array_equal", "moviepy.audio.fx.multiply_volume", "<builtin>.enumerate", "<builtin>.hasattr", "moviepy.AudioClip"], "tests.test_fx.test_multiply_volume_audioclip.<lambda1>": ["numpy.sin", "numpy.array"], "tests.test_fx.test_multiply_volume_audioclip.<lambda2>": ["numpy.sin"], "moviepy.audio.fx.multiply_volume": [], "moviepy.tools.convert_to_seconds": [], "numpy.append": [], "tests.test_fx.test_multiply_volume_videoclip": ["moviepy.VideoFileClip", "numpy.array_equal", "moviepy.audio.fx.multiply_volume", "numpy.zeros", "<builtin>.enumerate", "<builtin>.len"], "moviepy.VideoFileClip": [], "numpy.zeros": [], "tests.test_fx.test_multiply_stereo_volume": ["<builtin>.len", "moviepy.AudioClip", "numpy.array_equal", "moviepy.AudioFileClip", "numpy.zeros", "moviepy.audio.fx.multiply_stereo_volume"], "moviepy.audio.fx.multiply_stereo_volume": [], "tests.test_fx.test_multiply_stereo_volume.<lambda1>": ["numpy.sin"], "tests.test_fx.test_audio_delay": ["moviepy.audio.fx.audio_delay", "<builtin>.range", "numpy.array_equal", "numpy.linspace", "moviepy.audio.fx.multiply_volume", "numpy.zeros", "<builtin>.int", "moviepy.AudioClip", "<builtin>.max"], "moviepy.audio.fx.audio_delay": [], "numpy.linspace": [], "tests.test_fx.test_audio_fadein": ["moviepy.audio.fx.audio_fadein", "<builtin>.len", "moviepy.tools.convert_to_seconds", "<builtin>.round", "numpy.arange", "<builtin>.enumerate", "moviepy.AudioClip"], "moviepy.audio.fx.audio_fadein": [], "numpy.arange": [], "tests.test_fx.test_audio_fadeout": ["moviepy.tools.convert_to_seconds", "<builtin>.round", "numpy.arange", "<builtin>.enumerate", "moviepy.audio.fx.audio_fadeout", "moviepy.AudioClip"], "moviepy.audio.fx.audio_fadeout": [], "tests.test_BitmapClip": ["pytest.main"], "tests.test_BitmapClip.test_clip_generation": ["numpy.array", "<builtin>.list", "moviepy.video.VideoClip.BitmapClip", "numpy.array_equal"], "moviepy.video.VideoClip.BitmapClip": [], "tests.test_BitmapClip.test_setting_fps": ["moviepy.video.VideoClip.BitmapClip"], "tests.test_BitmapClip.test_setting_duration": ["moviepy.video.VideoClip.BitmapClip"], "tests.test_BitmapClip.test_to_bitmap": ["moviepy.video.VideoClip.BitmapClip"], "tests.test_videotools": ["pytest.mark.skipif", "moviepy.video.tools.cuts.FramesMatches", "moviepy.audio.AudioClip.AudioClip", "numpy.array", "pytest.mark.parametrize", "pytest.mark.skip", "moviepy.video.io.VideoFileClip.VideoFileClip", "moviepy.video.VideoClip.ImageClip", "moviepy.video.tools.cuts.FramesMatch", "importlib.import_module", "os.path.join", "pytest.param", "pytest.main", "moviepy.video.VideoClip.BitmapClip", "<builtin>.type"], "pytest.mark.skip": [], "tests.test_videotools.test_credits": ["moviepy.video.tools.credits.CreditsClip", "os.path.isfile", "os.path.join", "<builtin>.open"], "<builtin>.open": [], "moviepy.video.tools.credits.CreditsClip": [], "tests.test_videotools.test_detect_scenes": ["moviepy.video.compositing.concatenate.concatenate_videoclips", "moviepy.video.tools.cuts.detect_scenes", "<builtin>.len", "moviepy.video.VideoClip.ColorClip"], "moviepy.video.VideoClip.ColorClip": [], "moviepy.video.compositing.concatenate.concatenate_videoclips": [], "moviepy.video.tools.cuts.detect_scenes": [], "tests.test_videotools.test_find_video_period": ["<builtin>.round", "moviepy.video.tools.cuts.find_video_period", "moviepy.video.io.VideoFileClip.VideoFileClip"], "moviepy.video.tools.cuts.find_video_period": [], "tests.test_videotools.test_FramesMatches_from_clip": ["moviepy.video.tools.cuts.FramesMatches.from_clip", "<builtin>.round", "<builtin>.isinstance", "<builtin>.enumerate", "moviepy.video.VideoClip.BitmapClip"], "moviepy.video.tools.cuts.FramesMatches.from_clip": [], "tests.test_videotools.test_FramesMatches_filter": ["moviepy.video.tools.cuts.FramesMatches", "<builtin>.enumerate", "moviepy.video.tools.cuts.FramesMatch", "<builtin>.len"], "moviepy.video.tools.cuts.FramesMatch": [], "tests.test_videotools.test_FramesMatches_filter.<lambda1>": [], "moviepy.video.tools.cuts.FramesMatches": [], "tests.test_videotools.test_FramesMatches_save_load": ["moviepy.video.tools.cuts.FramesMatches", "moviepy.video.tools.cuts.FramesMatch", "os.path.join", "<builtin>.open", "<builtin>.enumerate", "moviepy.video.tools.cuts.FramesMatches.load"], "moviepy.video.tools.cuts.FramesMatches.load": [], "tests.test_videotools.test_FramesMatches_best": ["moviepy.video.tools.cuts.FramesMatches", "moviepy.video.tools.cuts.FramesMatch"], "tests.test_videotools.test_FramesMatches_select_scenes": ["moviepy.video.compositing.concatenate.concatenate_videoclips", "moviepy.video.tools.cuts.FramesMatches.from_clip", "<builtin>.len", "moviepy.video.io.VideoFileClip.VideoFileClip"], "tests.test_videotools.test_FramesMatches_write_gifs": ["moviepy.video.tools.cuts.FramesMatches.from_clip", "<builtin>.len", "<builtin>.open", "<builtin>.int", "moviepy.video.io.VideoFileClip.VideoFileClip", "os.listdir", "moviepy.video.tools.cuts.FramesMatch", "os.mkdir", "os.path.join", "os.path.isfile", "moviepy.video.compositing.concatenate.concatenate_videoclips", "<builtin>.isinstance", "shutil.rmtree", "os.path.isdir"], "os.listdir": [], "tests.test_videotools.test_color_gradient": ["moviepy.video.tools.drawing.color_gradient", "moviepy.video.tools.drawing.circle", "numpy.array_equal", "<builtin>.str", "<builtin>.isinstance", "pytest.raises"], "moviepy.video.tools.drawing.color_gradient": [], "moviepy.video.tools.drawing.circle": [], "tests.test_videotools.test_color_split": ["moviepy.video.tools.drawing.color_split", "numpy.array_equal"], "moviepy.video.tools.drawing.color_split": [], "tests.test_videotools.test_Interpolator": ["moviepy.video.tools.interpolators.Interpolator"], "moviepy.video.tools.interpolators.Interpolator": [], "tests.test_videotools.test_Trajectory": ["moviepy.video.tools.interpolators.Trajectory", "numpy.array", "numpy.array_equal"], "moviepy.video.tools.interpolators.Trajectory": [], "tests.test_videotools.test_Trajectory_addx": ["moviepy.video.tools.interpolators.Trajectory", "<builtin>.len"], "tests.test_videotools.test_Trajectory_addy": ["moviepy.video.tools.interpolators.Trajectory", "<builtin>.len"], "tests.test_videotools.test_Trajectory_from_to_file": ["os.remove", "moviepy.video.tools.interpolators.Trajectory.from_file", "numpy.array", "numpy.array_equal", "os.path.isfile", "os.path.join", "<builtin>.open"], "moviepy.video.tools.interpolators.Trajectory.from_file": [], "pytest.mark.skipif": [], "tests.test_videotools.test_find_objects": ["moviepy.video.tools.segmenting.find_objects", "numpy.array", "numpy.array_equal", "moviepy.video.VideoClip.ImageClip", "<builtin>.enumerate", "<builtin>.len"], "moviepy.video.VideoClip.ImageClip": [], "moviepy.video.tools.segmenting.find_objects": [], "tests.test_videotools.<lambda1>": ["numpy.array"], "<builtin>.type": [], "tests.test_videotools.test_ipython_display": ["tests.test_videotools.test_ipython_display.image_contents", "<builtin>.dict", "<builtin>.str", "importlib.import_module", "<builtin>.isinstance", "os.path.splitext", "pytest.raises", "<builtin>.NotImplementedError"], "<builtin>.dict": [], "tests.test_videotools.test_ipython_display.image_contents": [], "os.path.splitext": [], "<builtin>.NotImplementedError": [], "tests.test_videotools.test_ipython_display_not_available": ["<builtin>.str", "importlib.import_module", "pytest.raises"], "tests.test_videotools.test_find_audio_period": ["moviepy.audio.tools.cuts.find_audio_period", "moviepy.audio.AudioClip.AudioClip", "moviepy.audio.fx.multiply_volume.multiply_volume", "moviepy.video.fx.loop.loop", "<builtin>.round", "moviepy.audio.AudioClip.CompositeAudioClip", "pytest.approx"], "moviepy.audio.fx.multiply_volume.multiply_volume": [], "moviepy.video.fx.loop.loop": [], "moviepy.audio.tools.cuts.find_audio_period": [], "pytest.approx": [], "tests.test_ImageSequenceClip": ["pytest.main"], "tests.test_ImageSequenceClip.test_1": ["moviepy.video.io.ImageSequenceClip.ImageSequenceClip", "os.path.join", "<builtin>.range", "<builtin>.sum"], "moviepy.video.io.ImageSequenceClip.ImageSequenceClip": [], "tests.test_ImageSequenceClip.test_2": ["moviepy.video.io.ImageSequenceClip.ImageSequenceClip", "pytest.raises"], "tests.conftest": ["tempfile.gettempdir", "pytest.fixture", "functools.lru_cache", "contextlib.contextmanager"], "tempfile.gettempdir": [], "functools.lru_cache": [], "tests.conftest.get_video": ["moviepy.video.io.VideoFileClip.VideoFileClip"], "tests.conftest.get_stereo_wave": [], "tests.conftest.get_stereo_wave.make_stereo_frame": ["numpy.sin", "numpy.array"], "tests.conftest.get_mono_wave": [], "tests.conftest.get_mono_wave.make_mono_frame": ["numpy.sin"], "contextlib.contextmanager": [], "tests.conftest.get_static_files_server": ["threading.Thread", "socketserver.TCPServer"], "socketserver.TCPServer": [], "threading.Thread": [], "tests.conftest.get_moviepy_modules": ["contextlib.redirect_stdout", "pkgutil.walk_packages", "importlib.import_module", "io.StringIO"], "pkgutil.walk_packages": [], "tests.conftest.get_functions_with_decorator_defined": ["ast.parse", "tests.conftest.get_functions_with_decorator_defined.FunctionsWithDefinedDecoratorExtractor.__init__", "ast.NodeVisitor.visit", "inspect.getsource"], "tests.conftest.get_functions_with_decorator_defined.FunctionsWithDefinedDecoratorExtractor.__init__": ["<builtin>.super"], "<builtin>.super": [], "tests.conftest.get_functions_with_decorator_defined.FunctionsWithDefinedDecoratorExtractor.generic_visit": ["ast.NodeVisitor.generic_visit", "<builtin>.isinstance"], "ast.NodeVisitor.generic_visit": [], "inspect.getsource": [], "ast.parse": [], "ast.NodeVisitor.visit": [], "pytest.fixture": [], "tests.conftest.util": [], "tests.conftest.video": [], "tests.conftest.stereo_wave": [], "tests.conftest.mono_wave": [], "tests.conftest.static_files_server": [], "tests.conftest.moviepy_modules": [], "tests.conftest.functions_with_decorator_defined": [], "tests.test_ffmpeg_reader": ["pytest.main", "pytest.mark.parametrize"], "tests.test_ffmpeg_reader.test_ffmpeg_parse_infos": ["moviepy.video.io.ffmpeg_reader.ffmpeg_parse_infos"], "moviepy.video.io.ffmpeg_reader.ffmpeg_parse_infos": [], "tests.test_ffmpeg_reader.test_ffmpeg_parse_infos_video_nframes": ["moviepy.video.io.ffmpeg_reader.ffmpeg_parse_infos"], "tests.test_ffmpeg_reader.test_ffmpeg_parse_infos_decode_file": ["moviepy.video.io.ffmpeg_reader.ffmpeg_parse_infos", "<builtin>.len"], "tests.test_ffmpeg_reader.test_ffmpeg_parse_infos_multiple_audio_streams": ["os.remove", "moviepy.video.io.ffmpeg_reader.ffmpeg_parse_infos", "subprocess.check_call", "moviepy.audio.AudioClip.AudioClip", "os.path.join", "<builtin>.open", "<builtin>.len"], "subprocess.check_call": [], "tests.test_ffmpeg_reader.test_ffmpeg_parse_infos_metadata": ["os.remove", "moviepy.video.io.ffmpeg_reader.ffmpeg_parse_infos", "moviepy.audio.AudioClip.AudioClip", "tests.test_ffmpeg_reader.test_ffmpeg_parse_infos_metadata.get_value_from_dict_using_lower_key", "os.path.isfile", "os.path.join", "moviepy.video.VideoClip.BitmapClip"], "tests.test_ffmpeg_reader.test_ffmpeg_parse_infos_metadata.get_value_from_dict_using_lower_key": ["<builtin>.str"], "tests.test_ffmpeg_reader.test_ffmpeg_parse_infos_chapters": ["moviepy.video.io.ffmpeg_reader.ffmpeg_parse_infos", "<builtin>.isinstance", "<builtin>.len", "<builtin>.range"], "tests.test_ffmpeg_reader.test_ffmpeg_parse_infos_metadata_with_attached_pic": ["moviepy.video.io.ffmpeg_reader.ffmpeg_parse_infos", "<builtin>.len"], "tests.test_ffmpeg_reader.test_ffmpeg_parse_video_rotation": ["moviepy.video.io.ffmpeg_reader.ffmpeg_parse_infos"], "tests.test_ffmpeg_reader.test_correct_video_rotation": ["moviepy.video.io.ffmpeg_reader.ffmpeg_parse_infos", "os.path.join", "moviepy.video.io.VideoFileClip.VideoFileClip"], "tests.test_ffmpeg_reader.test_ffmpeg_parse_infos_multiline_metadata": ["<builtin>.len", "moviepy.video.io.ffmpeg_reader.FFmpegInfosParser"], "moviepy.video.io.ffmpeg_reader.FFmpegInfosParser": [], "tests.test_ffmpeg_reader.test_not_default_audio_stream_audio_bitrate": ["moviepy.video.io.ffmpeg_reader.FFmpegInfosParser"], "tests.test_ffmpeg_reader.test_stream_deidentation_not_raises_error": ["<builtin>.len", "moviepy.video.io.ffmpeg_reader.FFmpegInfosParser"], "tests.test_ffmpeg_reader.test_stream_square_brackets": ["<builtin>.len", "moviepy.video.io.ffmpeg_reader.FFmpegInfosParser"], "tests.test_ffmpeg_reader.test_stream_square_brackets_and_language": ["<builtin>.len", "moviepy.video.io.ffmpeg_reader.FFmpegInfosParser"], "tests.test_ffmpeg_reader.test_stream_missing_audio_bitrate": ["<builtin>.len", "moviepy.video.io.ffmpeg_reader.FFmpegInfosParser"], "tests.test_ffmpeg_reader.test_sequential_frame_pos": ["moviepy.video.io.ffmpeg_reader.FFMPEG_VideoReader", "numpy.array_equal"], "moviepy.video.io.ffmpeg_reader.FFMPEG_VideoReader": [], "tests.test_ffmpeg_reader.test_unusual_order_frame_pos": ["moviepy.video.io.ffmpeg_reader.FFMPEG_VideoReader", "numpy.array_equal"], "tests.test_ffmpeg_reader.test_large_skip_frame_pos": ["moviepy.video.io.ffmpeg_reader.FFMPEG_VideoReader"], "tests.test_ffmpeg_reader.test_large_small_skip_equal": ["moviepy.video.io.ffmpeg_reader.FFMPEG_VideoReader", "numpy.array_equal", "<builtin>.range", "numpy.arange"], "tests.test_ffmpeg_reader.test_seeking_beyond_file_end": ["moviepy.video.io.ffmpeg_reader.FFMPEG_VideoReader", "numpy.array_equal", "pytest.warns"], "tests.test_ffmpeg_reader.test_release_of_file_via_close": ["os.remove", "moviepy.video.VideoClip.ColorClip", "moviepy.video.compositing.CompositeVideoClip.clips_array", "time.time", "<builtin>.range", "moviepy.video.io.VideoFileClip.VideoFileClip", "os.path.join", "<builtin>.int"], "time.time": [], "moviepy.video.compositing.CompositeVideoClip.clips_array": [], "tests.test_ffmpeg_reader.test_failure_to_release_file": ["os.remove", "moviepy.video.VideoClip.ColorClip", "moviepy.video.compositing.CompositeVideoClip.clips_array", "<builtin>.range", "time.time", "moviepy.video.io.VideoFileClip.VideoFileClip", "os.path.join", "<builtin>.int", "<builtin>.print"], "<builtin>.print": [], "tests.test_compositing": ["pytest.main"], "tests.test_compositing.ClipPixelTest.__init__": [], "tests.test_compositing.ClipPixelTest.expect_color_at": ["<builtin>.abs"], "<builtin>.abs": [], "tests.test_compositing.test_clips_array": ["moviepy.video.compositing.CompositeVideoClip.clips_array", "os.path.join", "pytest.raises", "moviepy.video.VideoClip.ColorClip"], "tests.test_compositing.test_clips_array_duration": ["moviepy.video.compositing.CompositeVideoClip.clips_array", "pytest.raises", "os.path.join", "moviepy.video.VideoClip.ColorClip"], "tests.test_compositing.test_concatenate_self": ["moviepy.video.compositing.concatenate.concatenate_videoclips", "moviepy.video.VideoClip.BitmapClip", "os.path.join"], "tests.test_compositing.test_concatenate_floating_point": ["moviepy.video.compositing.concatenate.concatenate_videoclips", "os.path.join", "moviepy.video.VideoClip.ColorClip"], "tests.test_compositing.test_blit_with_opacity": ["tests.test_compositing.ClipPixelTest.expect_color_at", "moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip", "tests.test_compositing.ClipPixelTest.__init__", "moviepy.video.io.VideoFileClip.VideoFileClip"], "moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip": [], "tests.test_compositing.test_slide_in": ["moviepy.video.VideoClip.ColorClip", "moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip", "moviepy.video.compositing.transitions.slide_in", "numpy.arange", "<builtin>.int"], "moviepy.video.compositing.transitions.slide_in": [], "tests.test_compositing.test_slide_out": ["moviepy.video.VideoClip.ColorClip", "moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip", "<builtin>.round", "numpy.arange", "moviepy.video.compositing.transitions.slide_out"], "moviepy.video.compositing.transitions.slide_out": [], "tests": [], "tests.test_VideoClip": ["pytest.param", "pytest.main", "pytest.mark.parametrize", "pytest.mark.skip"], "tests.test_VideoClip.test_aspect_ratio": ["moviepy.video.VideoClip.BitmapClip"], "tests.test_VideoClip.test_n_frames": ["moviepy.video.VideoClip.VideoClip"], "moviepy.video.VideoClip.VideoClip": [], "tests.test_VideoClip.test_with_audio": ["moviepy.audio.AudioClip.AudioClip", "moviepy.video.VideoClip.VideoClip"], "tests.test_VideoClip.test_without_audio": ["moviepy.audio.AudioClip.AudioClip", "moviepy.video.VideoClip.VideoClip"], "tests.test_VideoClip.test_check_codec": ["<builtin>.str", "os.path.join"], "tests.test_VideoClip.test_write_frame_errors": ["os.remove", "<builtin>.str", "os.path.join", "os.path.exists", "pytest.raises"], "tests.test_VideoClip.test_write_frame_errors_with_redirected_logs": ["os.remove", "<builtin>.str", "os.path.join", "os.path.exists", "pytest.raises"], "tests.test_VideoClip.test_write_videofiles_with_temp_audiofile_path": ["moviepy.video.io.VideoFileClip.VideoFileClip", "os.listdir", "os.mkdir", "os.path.isfile", "os.path.exists", "os.path.join", "<builtin>.any"], "<builtin>.any": [], "tests.test_VideoClip.test_save_frame": ["os.remove", "moviepy.video.VideoClip.ColorClip", "moviepy.tools.convert_to_seconds", "<builtin>.round", "<builtin>.int", "<builtin>.range", "os.path.isfile", "os.path.join", "moviepy.video.VideoClip.BitmapClip", "PIL.Image.open", "<builtin>.len"], "PIL.Image.open": [], "tests.test_VideoClip.test_write_image_sequence": ["os.path.isfile", "os.path.join"], "tests.test_VideoClip.test_write_gif_imageio": ["os.path.isfile", "os.path.join"], "tests.test_VideoClip.test_write_gif_ffmpeg": ["os.path.isfile", "os.path.join"], "tests.test_VideoClip.test_write_gif_ffmpeg_pixel_format": ["os.path.isfile", "os.path.join"], "tests.test_VideoClip.test_write_gif_ffmpeg_tmpfiles": ["os.path.isfile", "os.path.join"], "tests.test_VideoClip.test_write_gif_ffmpeg_tmpfiles_pixel_format": ["os.path.isfile", "os.path.join"], "tests.test_VideoClip.test_write_gif_ImageMagick": ["os.path.join"], "tests.test_VideoClip.test_write_gif_ImageMagick_tmpfiles": ["os.path.isfile", "os.path.join"], "tests.test_VideoClip.test_write_gif_ImageMagick_tmpfiles_pixel_format": ["os.path.isfile", "os.path.join"], "tests.test_VideoClip.test_subfx": ["os.path.isfile", "os.path.join", "moviepy.video.io.VideoFileClip.VideoFileClip"], "tests.test_VideoClip.test_subfx.<lambda1>": ["moviepy.video.fx.multiply_speed.multiply_speed"], "moviepy.video.fx.multiply_speed.multiply_speed": [], "tests.test_VideoClip.test_oncolor": ["os.path.isfile", "pytest.raises", "os.path.join", "moviepy.video.VideoClip.ColorClip"], "tests.test_VideoClip.test_setaudio": ["moviepy.audio.AudioClip.AudioClip", "os.path.isfile", "os.path.join", "moviepy.video.VideoClip.ColorClip"], "tests.test_VideoClip.test_setaudio.<lambda1>": ["numpy.sin"], "tests.test_VideoClip.test_setaudio_with_audiofile": ["moviepy.audio.io.AudioFileClip.AudioFileClip", "os.path.isfile", "os.path.join", "moviepy.video.VideoClip.ColorClip"], "tests.test_VideoClip.test_setopacity": ["os.path.isfile", "os.path.join"], "tests.test_VideoClip.test_with_layer": ["moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip", "moviepy.video.VideoClip.BitmapClip"], "tests.test_VideoClip.test_compositing_with_same_layers": ["moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip", "moviepy.video.VideoClip.BitmapClip"], "tests.test_VideoClip.test_toimageclip": ["os.path.isfile", "os.path.join"], "tests.test_VideoClip.test_withoutaudio": [], "tests.test_VideoClip.test_setfps_withoutchangeduration": [], "tests.test_VideoClip.test_setfps_withchangeduration": [], "tests.test_VideoClip.test_copied_videoclip_write_videofile": ["<builtin>.list", "moviepy.video.VideoClip.BitmapClip", "os.path.join", "moviepy.video.io.VideoFileClip.VideoFileClip"], "tests.test_VideoClip.<lambda1>": [], "tests.test_VideoClip.<lambda2>": ["copy.copy"], "copy.copy": [], "tests.test_VideoClip.<lambda3>": ["copy.deepcopy"], "copy.deepcopy": [], "tests.test_VideoClip.test_videoclip_copy": ["<builtin>.setattr", "moviepy.audio.AudioClip.AudioClip", "<builtin>.getattr", "moviepy.video.VideoClip.VideoClip", "moviepy.video.VideoClip.BitmapClip"], "tests.test_VideoClip.test_videoclip_copy.<lambda1>": ["numpy.sin"], "<builtin>.setattr": [], "<builtin>.getattr": [], "tests.test_VideoClip.test_afterimage": ["moviepy.video.VideoClip.ColorClip", "moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip", "moviepy.video.VideoClip.ImageClip", "os.path.join", "moviepy.video.fx.mask_color.mask_color"], "moviepy.video.fx.mask_color.mask_color": [], "tests.test_ffmpeg_writer": ["pytest.param", "multiprocessing.cpu_count", "pytest.mark.parametrize"], "multiprocessing.cpu_count": [], "tests.test_ffmpeg_writer.test_ffmpeg_write_video": ["os.remove", "moviepy.video.io.ffmpeg_writer.ffmpeg_write_video", "moviepy.video.io.VideoFileClip.VideoFileClip", "<builtin>.dict", "os.path.isfile", "os.path.join", "moviepy.video.VideoClip.BitmapClip"], "moviepy.video.io.ffmpeg_writer.ffmpeg_write_video": [], "tests.test_ffmpeg_writer.test_ffmpeg_write_image": ["os.remove", "moviepy.video.tools.drawing.color_gradient", "<builtin>.range", "<builtin>.str", "moviepy.video.io.ffmpeg_writer.ffmpeg_write_image", "os.path.isfile", "os.path.join", "<builtin>.hasattr", "PIL.Image.open", "pytest.raises"], "moviepy.video.io.ffmpeg_writer.ffmpeg_write_image": [], "tests.test_ffmpeg_writer.test_write_gif": ["os.remove", "moviepy.video.VideoClip.ColorClip", "<builtin>.round", "moviepy.video.io.gif_writers.write_gif", "moviepy.video.io.VideoFileClip.VideoFileClip", "os.path.isfile", "os.path.join", "moviepy.video.compositing.concatenate.concatenate_videoclips", "moviepy.video.VideoClip.BitmapClip"], "moviepy.video.io.gif_writers.write_gif": [], "tests.test_SubtitlesClip": ["pytest.main", "pytest.mark.skip"], "tests.test_SubtitlesClip.test_subtitles": ["moviepy.video.tools.subtitles.SubtitlesClip", "moviepy.video.VideoClip.ColorClip", "moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip", "os.path.join", "moviepy.video.compositing.concatenate.concatenate_videoclips"], "tests.test_SubtitlesClip.test_subtitles.<lambda1>": ["moviepy.video.VideoClip.TextClip"], "moviepy.video.VideoClip.TextClip": [], "moviepy.video.tools.subtitles.SubtitlesClip": [], "tests.test_SubtitlesClip.test_file_to_subtitles": ["moviepy.video.tools.subtitles.file_to_subtitles"], "moviepy.video.tools.subtitles.file_to_subtitles": [], "tests.test_SubtitlesClip.test_file_to_subtitles_unicode": ["moviepy.video.tools.subtitles.file_to_subtitles"], "tests.test_TextClip": ["pytest.main", "pytest.mark.parametrize", "pytest.mark.skip"], "tests.test_TextClip.test_list": ["moviepy.video.VideoClip.TextClip.list", "<builtin>.isinstance"], "moviepy.video.VideoClip.TextClip.list": [], "tests.test_TextClip.test_search": ["moviepy.video.VideoClip.TextClip.search", "<builtin>.isinstance"], "moviepy.video.VideoClip.TextClip.search": [], "tests.test_TextClip.test_duration": ["moviepy.video.VideoClip.TextClip"], "tests.test_TextClip.test_text_filename_arguments_consistence": ["numpy.equal", "<builtin>.list", "os.path.join", "<builtin>.open", "<builtin>.len", "moviepy.video.VideoClip.TextClip"], "numpy.equal": [], "tests.test_TextClip.test_no_text_nor_filename_arguments": ["moviepy.video.VideoClip.TextClip", "pytest.raises"], "tests.test_VideoFileClip": ["pytest.main"], "tests.test_VideoFileClip.test_setup": ["moviepy.video.VideoClip.ColorClip", "moviepy.video.compositing.CompositeVideoClip.clips_array", "moviepy.video.io.VideoFileClip.VideoFileClip", "os.path.join", "os.path.exists"], "tests.test_VideoFileClip.test_ffmpeg_resizing": ["<builtin>.zip", "moviepy.video.io.VideoFileClip.VideoFileClip"], "tests.test_VideoFileClip.test_copied_videofileclip_write_videofile": ["moviepy.video.io.VideoFileClip.VideoFileClip", "<builtin>.list", "os.path.join", "os.path.exists", "<builtin>.isinstance", "<builtin>.type"], "tests.test_VideoFileClip.test_videofileclip_safe_deepcopy": ["copy.deepcopy", "moviepy.video.io.VideoFileClip.VideoFileClip"], "tests.test_VideoFileClip.test_videofileclip_safe_deepcopy.fake__copy__": [], "tests.test_examples": ["pytest.mark.skipif"], "tests.test_examples.test_matplotlib_simple_example": ["numpy.linspace", "matplotlib.pyplot.subplots", "moviepy.video.VideoClip.VideoClip", "os.path.join", "os.path.isfile", "matplotlib.pyplot.switch_backend"], "matplotlib.pyplot.switch_backend": [], "matplotlib.pyplot.subplots": [], "tests.test_examples.test_matplotlib_simple_example.make_frame": ["numpy.sin", "numpy.sinc", "moviepy.video.io.bindings.mplfig_to_npimage"], "numpy.sinc": [], "moviepy.video.io.bindings.mplfig_to_npimage": [], "tests.test_PR": ["pytest.main", "pytest.mark.skip"], "tests.test_PR.test_PR_306": ["moviepy.video.VideoClip.TextClip.list", "pytest.raises"], "tests.test_PR.test_PR_339": ["moviepy.video.VideoClip.TextClip"], "tests.test_PR.test_PR_373": ["moviepy.video.tools.interpolators.Trajectory.load_list", "<builtin>.range", "moviepy.video.tools.interpolators.Trajectory.save_list", "os.path.join", "<builtin>.len"], "moviepy.video.tools.interpolators.Trajectory.load_list": [], "moviepy.video.tools.interpolators.Trajectory.save_list": [], "tests.test_PR.test_PR_458": ["os.path.join", "moviepy.video.VideoClip.ColorClip"], "tests.test_PR.test_PR_515": ["moviepy.video.io.VideoFileClip.VideoFileClip"], "tests.test_PR.test_PR_528": ["moviepy.video.fx.scroll.scroll", "os.path.join", "moviepy.video.VideoClip.ImageClip"], "moviepy.video.fx.scroll.scroll": [], "tests.test_PR.test_PR_529": ["moviepy.video.io.VideoFileClip.VideoFileClip"], "tests.test_PR.test_PR_610": ["moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip", "moviepy.video.VideoClip.ColorClip"], "tests.test_PR.test_PR_1137_video": ["pathlib.Path", "<builtin>.isinstance"], "pathlib.Path": [], "tests.test_PR.test_PR_1137_audio": ["moviepy.audio.io.AudioFileClip.AudioFileClip", "pathlib.Path", "<builtin>.isinstance"], "tests.test_PR.test_PR_1137_image": ["pathlib.Path", "moviepy.video.VideoClip.ImageClip"], "tests.test_PR.test_PR_1137_subtitles": ["moviepy.video.tools.subtitles.SubtitlesClip", "pathlib.Path"], "tests.test_PR.test_PR_1137_subtitles.make_textclip": ["moviepy.video.VideoClip.TextClip"], "tests.test_issues": ["pytest.main", "pytest.mark.skipif"], "tests.test_issues.test_issue_145": ["moviepy.video.compositing.concatenate.concatenate_videoclips", "pytest.raises", "moviepy.video.VideoClip.ColorClip"], "tests.test_issues.test_issue_190": [], "tests.test_issues.test_issue_285": ["moviepy.video.compositing.concatenate.concatenate_videoclips", "moviepy.video.VideoClip.ImageClip"], "tests.test_issues.test_issue_334": ["moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip", "moviepy.video.VideoClip.ImageClip", "moviepy.video.io.VideoFileClip.VideoFileClip", "os.path.join", "moviepy.video.compositing.concatenate.concatenate_videoclips"], "tests.test_issues.test_issue_334.posi": ["<builtin>.len"], "tests.test_issues.test_issue_334.size": ["<builtin>.len"], "tests.test_issues.test_issue_354": ["moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip", "moviepy.video.VideoClip.ImageClip"], "tests.test_issues.test_issue_359": ["os.path.join", "moviepy.video.VideoClip.ColorClip"], "tests.test_issues.test_issue_368": ["numpy.linspace", "numpy.meshgrid", "matplotlib.pyplot.subplots", "sklearn.datasets.make_moons", "moviepy.video.VideoClip.VideoClip", "os.path.join", "matplotlib.pyplot.switch_backend"], "sklearn.datasets.make_moons": [], "numpy.meshgrid": [], "tests.test_issues.test_issue_368.make_frame": ["numpy.maximum", "sklearn.svm.SVC", "numpy.minimum", "numpy.linspace", "numpy.arange", "moviepy.video.io.bindings.mplfig_to_npimage"], "sklearn.svm.SVC": [], "numpy.maximum": [], "numpy.minimum": [], "tests.test_issues.test_issue_407": ["moviepy.video.compositing.concatenate.concatenate_videoclips", "pytest.raises", "moviepy.video.VideoClip.ColorClip"], "tests.test_issues.test_issue_416": ["moviepy.video.compositing.concatenate.concatenate_videoclips", "moviepy.video.VideoClip.ColorClip"], "tests.test_issues.test_issue_417": ["moviepy.video.compositing.CompositeVideoClip.CompositeVideoClip", "moviepy.video.VideoClip.ImageClip"], "tests.test_issues.test_issue_470": ["moviepy.audio.io.AudioFileClip.AudioFileClip", "pytest.raises", "os.path.join"], "tests.test_issues.test_issue_547": ["moviepy.video.compositing.concatenate.concatenate_videoclips", "moviepy.video.VideoClip.ColorClip"], "tests.test_issues.test_issue_636": ["moviepy.video.io.VideoFileClip.VideoFileClip"], "tests.test_issues.test_issue_655": ["<builtin>.next", "moviepy.video.io.VideoFileClip.VideoFileClip"], "<builtin>.next": [], "tests.test_Clip": ["pytest.main", "pytest.mark.parametrize"], "tests.test_Clip.test_clip_equality": ["moviepy.video.VideoClip.BitmapClip"], "tests.test_Clip.test_clip_with_is_mask": ["moviepy.video.VideoClip.BitmapClip"], "tests.test_Clip.test_clip_with_start": ["moviepy.video.VideoClip.ColorClip"], "tests.test_Clip.test_clip_with_end": ["moviepy.video.VideoClip.ColorClip"], "tests.test_Clip.test_clip_with_duration": ["<builtin>.hasattr", "pytest.raises", "moviepy.video.VideoClip.ColorClip"], "tests.test_Clip.<lambda1>": [], "tests.test_Clip.<lambda2>": ["copy.copy"], "tests.test_Clip.<lambda3>": ["copy.deepcopy"], "tests.test_Clip.test_clip_copy": ["<builtin>.getattr", "<builtin>.setattr", "moviepy.Clip.Clip"], "moviepy.Clip.Clip": [], "tests.test_Clip.test_clip_subclip": ["moviepy.video.VideoClip.ColorClip", "<builtin>.range", "<builtin>.hasattr", "moviepy.video.VideoClip.BitmapClip", "pytest.raises"], "tests.test_Clip.test_clip_cutout": ["moviepy.video.VideoClip.BitmapClip"], "tests.test_Clip.test_clip_memoize": ["moviepy.video.VideoClip.BitmapClip", "<builtin>.isinstance"], "tests.test_tools": ["shutil.which", "pytest.mark.skipif", "pytest.mark.parametrize", "pytest.mark.skip", "os.path.join", "pytest.param", "pytest.main"], "tests.test_tools.test_find_extensions": ["moviepy.tools.find_extension"], "moviepy.tools.find_extension": [], "tests.test_tools.test_find_extensions_not_found": ["moviepy.tools.find_extension", "pytest.raises"], "tests.test_tools.test_cvsecs": ["moviepy.tools.convert_to_seconds"], "shutil.which": [], "tests.test_tools.test_subprocess_call": ["moviepy.tools.subprocess_call", "pytest.raises"], "moviepy.tools.subprocess_call": [], "tests.test_tools.test_cross_platform_popen_params": ["importlib.import_module", "<builtin>.len"], "tests.test_tools.test_deprecated_version_of": ["<builtin>.len", "pytest.warns", "moviepy.tools.deprecated_version_of"], "tests.test_tools.test_deprecated_version_of.to_file": [], "moviepy.tools.deprecated_version_of": [], "tests.test_tools.test_download_webfile": ["os.remove", "moviepy.video.io.downloader.download_webfile", "shutil.which", "filecmp.cmp", "<builtin>.str", "os.path.isfile", "os.path.join", "<builtin>.hasattr", "<builtin>.len", "pytest.raises"], "moviepy.video.io.downloader.download_webfile": [], "filecmp.cmp": [], "tests.test_tools.test_config": ["os.remove", "pytest.raises", "os.environ.get", "os.mkdir", "<builtin>.str", "importlib.import_module", "os.path.join", "os.path.isfile", "os.path.isdir", "shutil.rmtree", "<builtin>.open"], "os.environ.get": [], "tests.test_tools.test_config_check": ["os.remove", "contextlib.redirect_stdout", "io.StringIO", "importlib.import_module", "os.path.isfile", "<builtin>.open"], "tests.test_tools.test_decorators_argument_converters_consistency": ["contextlib.redirect_stdout", "importlib.import_module", "io.StringIO"]}
{"tests.test_formatter": [], "tests.test_formatter.TestFormatterFormatToken.test_format": ["datetime.datetime"], "datetime.datetime": [], "tests.test_formatter.TestFormatterFormatToken.test_year": ["datetime.datetime"], "tests.test_formatter.TestFormatterFormatToken.test_month": ["datetime.datetime"], "tests.test_formatter.TestFormatterFormatToken.test_day": ["datetime.datetime"], "tests.test_formatter.TestFormatterFormatToken.test_hour": ["datetime.datetime"], "tests.test_formatter.TestFormatterFormatToken.test_minute": ["datetime.datetime"], "tests.test_formatter.TestFormatterFormatToken.test_second": ["datetime.datetime"], "tests.test_formatter.TestFormatterFormatToken.test_sub_second": ["datetime.datetime"], "tests.test_formatter.TestFormatterFormatToken.test_timestamp": ["<builtin>.str", "datetime.datetime.now", "<builtin>.int"], "datetime.datetime.now": [], "<builtin>.str": [], "<builtin>.int": [], "tests.test_formatter.TestFormatterFormatToken.test_timezone": ["datetime.datetime.utcnow", "dateutil.tz.gettz"], "dateutil.tz.gettz": [], "datetime.datetime.utcnow": [], "utils.make_full_tz_list": [], "tests.test_formatter.TestFormatterFormatToken": ["pytest.mark.parametrize", "utils.make_full_tz_list"], "pytest.mark.parametrize": [], "tests.test_formatter.TestFormatterFormatToken.test_timezone_formatter": ["datetime.datetime", "dateutil.tz.gettz", "pytz.timezone"], "pytz.timezone": [], "tests.test_formatter.TestFormatterFormatToken.test_am_pm": ["datetime.datetime"], "tests.test_formatter.TestFormatterFormatToken.test_week": ["datetime.datetime"], "tests.test_formatter.TestFormatterFormatToken.test_nonsense": ["datetime.datetime"], "tests.test_formatter.TestFormatterFormatToken.test_escape": ["datetime.datetime"], "tests.test_formatter.TestFormatterBuiltinFormats.test_atom": [], "tests.test_formatter.TestFormatterBuiltinFormats.test_cookie": [], "tests.test_formatter.TestFormatterBuiltinFormats.test_rfc_822": [], "tests.test_formatter.TestFormatterBuiltinFormats.test_rfc_850": [], "tests.test_formatter.TestFormatterBuiltinFormats.test_rfc_1036": [], "tests.test_formatter.TestFormatterBuiltinFormats.test_rfc_1123": [], "tests.test_formatter.TestFormatterBuiltinFormats.test_rfc_2822": [], "tests.test_formatter.TestFormatterBuiltinFormats.test_rfc3339": [], "tests.test_formatter.TestFormatterBuiltinFormats.test_rss": [], "tests.test_formatter.TestFormatterBuiltinFormats.test_w3c": [], "tests.test_arrow": ["pytest.fixture"], "tests.test_arrow.TestTestArrowInit.test_init_bad_input": ["pytest.raises", "arrow.arrow.Arrow"], "pytest.raises": [], "arrow.arrow.Arrow": [], "tests.test_arrow.TestTestArrowInit.test_init": ["dateutil.tz.tzutc", "datetime.datetime", "arrow.arrow.Arrow", "dateutil.tz.gettz"], "dateutil.tz.tzutc": [], "tests.test_arrow.TestTestArrowInit.test_init_pytz_timezone": ["datetime.datetime", "utils.assert_datetime_equality", "arrow.arrow.Arrow", "dateutil.tz.gettz", "pytz.timezone"], "utils.assert_datetime_equality": [], "tests.test_arrow.TestTestArrowInit.test_init_with_fold": ["arrow.arrow.Arrow", "<builtin>.hasattr"], "<builtin>.hasattr": [], "tests.test_arrow.TestTestArrowFactory.test_now": ["utils.assert_datetime_equality", "dateutil.tz.tzlocal", "arrow.arrow.Arrow.now", "datetime.datetime.now"], "arrow.arrow.Arrow.now": [], "dateutil.tz.tzlocal": [], "tests.test_arrow.TestTestArrowFactory.test_utcnow": ["dateutil.tz.tzutc", "utils.assert_datetime_equality", "arrow.arrow.Arrow.utcnow", "datetime.datetime.utcnow"], "arrow.arrow.Arrow.utcnow": [], "tests.test_arrow.TestTestArrowFactory.test_fromtimestamp": ["time.time", "dateutil.tz.tzlocal", "arrow.arrow.Arrow.fromtimestamp", "utils.assert_datetime_equality", "datetime.datetime.fromtimestamp", "pytest.raises", "datetime.datetime.now", "dateutil.tz.gettz"], "time.time": [], "arrow.arrow.Arrow.fromtimestamp": [], "datetime.datetime.fromtimestamp": [], "tests.test_arrow.TestTestArrowFactory.test_utcfromtimestamp": ["time.time", "arrow.arrow.Arrow.utcfromtimestamp", "utils.assert_datetime_equality", "dateutil.tz.tzutc", "datetime.datetime.utcnow", "pytest.raises"], "arrow.arrow.Arrow.utcfromtimestamp": [], "tests.test_arrow.TestTestArrowFactory.test_fromdatetime": ["arrow.arrow.Arrow.fromdatetime", "dateutil.tz.tzutc", "datetime.datetime"], "arrow.arrow.Arrow.fromdatetime": [], "tests.test_arrow.TestTestArrowFactory.test_fromdatetime_dt_tzinfo": ["arrow.arrow.Arrow.fromdatetime", "datetime.datetime", "dateutil.tz.gettz"], "tests.test_arrow.TestTestArrowFactory.test_fromdatetime_tzinfo_arg": ["arrow.arrow.Arrow.fromdatetime", "datetime.datetime", "dateutil.tz.gettz"], "tests.test_arrow.TestTestArrowFactory.test_fromdate": ["datetime.datetime", "arrow.arrow.Arrow.fromdate", "datetime.date", "dateutil.tz.gettz"], "datetime.date": [], "arrow.arrow.Arrow.fromdate": [], "tests.test_arrow.TestTestArrowFactory.test_strptime": ["arrow.arrow.Arrow.strptime", "dateutil.tz.tzutc", "datetime.datetime", "dateutil.tz.gettz"], "arrow.arrow.Arrow.strptime": [], "tests.test_arrow.TestTestArrowFactory.test_fromordinal": ["<builtin>.str", "<builtin>.int", "pytest.raises", "arrow.arrow.Arrow.fromordinal", "arrow.arrow.Arrow.utcnow", "datetime.datetime.fromordinal"], "arrow.arrow.Arrow.fromordinal": [], "datetime.datetime.fromordinal": [], "tests.test_arrow.TestTestArrowRepresentation.test_repr": [], "tests.test_arrow.TestTestArrowRepresentation.test_str": [], "tests.test_arrow.TestTestArrowRepresentation.test_hash": [], "tests.test_arrow.TestTestArrowRepresentation.test_format": [], "tests.test_arrow.TestTestArrowRepresentation.test_bare_format": [], "tests.test_arrow.TestTestArrowRepresentation.test_format_no_format_string": ["<builtin>.str"], "tests.test_arrow.TestTestArrowRepresentation.test_clone": [], "tests.test_arrow.TestArrowAttribute.test_getattr_base": ["pytest.raises"], "tests.test_arrow.TestArrowAttribute.test_getattr_week": [], "tests.test_arrow.TestArrowAttribute.test_getattr_quarter": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowAttribute.test_getattr_dt_value": [], "tests.test_arrow.TestArrowAttribute.test_tzinfo": ["dateutil.tz.tzutc"], "tests.test_arrow.TestArrowAttribute.test_naive": [], "tests.test_arrow.TestArrowAttribute.test_timestamp": [], "tests.test_arrow.TestArrowAttribute.test_int_timestamp": ["<builtin>.int"], "tests.test_arrow.TestArrowAttribute.test_float_timestamp": [], "tests.test_arrow.TestArrowAttribute.test_getattr_fold": ["pytest.raises", "arrow.arrow.Arrow"], "tests.test_arrow.TestArrowAttribute.test_getattr_ambiguous": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowAttribute.test_getattr_imaginary": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowComparison.test_eq": [], "tests.test_arrow.TestArrowComparison.test_ne": [], "tests.test_arrow.TestArrowComparison.test_gt": ["pytest.raises"], "tests.test_arrow.TestArrowComparison.test_ge": ["pytest.raises"], "tests.test_arrow.TestArrowComparison.test_lt": ["pytest.raises"], "tests.test_arrow.TestArrowComparison.test_le": ["pytest.raises"], "tests.test_arrow.TestArrowMath.test_add_timedelta": ["dateutil.tz.tzutc", "datetime.datetime", "datetime.timedelta"], "datetime.timedelta": [], "tests.test_arrow.TestArrowMath.test_add_other": ["pytest.raises"], "tests.test_arrow.TestArrowMath.test_radd": ["dateutil.tz.tzutc", "datetime.datetime", "datetime.timedelta"], "tests.test_arrow.TestArrowMath.test_sub_timedelta": ["dateutil.tz.tzutc", "datetime.datetime", "datetime.timedelta"], "tests.test_arrow.TestArrowMath.test_sub_datetime": ["dateutil.tz.tzutc", "datetime.datetime", "datetime.timedelta"], "tests.test_arrow.TestArrowMath.test_sub_arrow": ["dateutil.tz.tzutc", "arrow.arrow.Arrow", "datetime.timedelta"], "tests.test_arrow.TestArrowMath.test_sub_other": ["pytest.raises", "<builtin>.object"], "<builtin>.object": [], "tests.test_arrow.TestArrowMath.test_rsub_datetime": ["dateutil.tz.tzutc", "datetime.datetime", "datetime.timedelta"], "tests.test_arrow.TestArrowMath.test_rsub_other": ["pytest.raises", "datetime.timedelta"], "tests.test_arrow.TestArrowDatetimeInterface.test_date": [], "tests.test_arrow.TestArrowDatetimeInterface.test_time": [], "tests.test_arrow.TestArrowDatetimeInterface.test_timetz": [], "tests.test_arrow.TestArrowDatetimeInterface.test_astimezone": ["dateutil.tz.gettz"], "tests.test_arrow.TestArrowDatetimeInterface.test_utcoffset": [], "tests.test_arrow.TestArrowDatetimeInterface.test_dst": [], "tests.test_arrow.TestArrowDatetimeInterface.test_timetuple": [], "tests.test_arrow.TestArrowDatetimeInterface.test_utctimetuple": [], "tests.test_arrow.TestArrowDatetimeInterface.test_toordinal": [], "tests.test_arrow.TestArrowDatetimeInterface.test_weekday": [], "tests.test_arrow.TestArrowDatetimeInterface.test_isoweekday": [], "tests.test_arrow.TestArrowDatetimeInterface.test_isocalendar": [], "tests.test_arrow.TestArrowDatetimeInterface.test_isoformat": [], "tests.test_arrow.TestArrowDatetimeInterface.test_isoformat_timespec": [], "tests.test_arrow.TestArrowDatetimeInterface.test_simplejson": ["simplejson.loads", "simplejson.dumps"], "simplejson.dumps": [], "simplejson.loads": [], "tests.test_arrow.TestArrowDatetimeInterface.test_ctime": [], "tests.test_arrow.TestArrowDatetimeInterface.test_strftime": [], "tests.test_arrow.TestArrowFalsePositiveDst.test_dst": ["arrow.arrow.Arrow", "dateutil.tz.gettz"], "tests.test_arrow.TestArrowConversion.test_to": ["arrow.arrow.Arrow.fromdatetime", "datetime.datetime.now", "dateutil.tz.gettz", "dateutil.tz.tzutc"], "tests.test_arrow.TestArrowConversion.test_to_pacific_then_utc": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowConversion.test_to_amsterdam_then_utc": ["arrow.arrow.Arrow", "datetime.timedelta"], "tests.test_arrow.TestArrowConversion.test_to_israel_same_offset": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowConversion.test_anchorage_dst": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowConversion.test_chicago_fall": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowConversion.test_toronto_gap": ["datetime.datetime", "arrow.arrow.Arrow"], "tests.test_arrow.TestArrowConversion.test_sydney_gap": ["datetime.datetime", "arrow.arrow.Arrow"], "tests.test_arrow.TestArrowPickling.test_pickle_and_unpickle": ["pickle.loads", "arrow.arrow.Arrow.utcnow", "pickle.dumps"], "pickle.dumps": [], "pickle.loads": [], "tests.test_arrow.TestArrowReplace.test_not_attr": ["arrow.arrow.Arrow.utcnow", "pytest.raises"], "tests.test_arrow.TestArrowReplace.test_replace": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowReplace.test_replace_tzinfo": ["arrow.arrow.Arrow.utcnow", "dateutil.tz.gettz"], "tests.test_arrow.TestArrowReplace.test_replace_fold": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowReplace.test_replace_fold_and_other": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowReplace.test_replace_week": ["arrow.arrow.Arrow.utcnow", "pytest.raises"], "tests.test_arrow.TestArrowReplace.test_replace_quarter": ["arrow.arrow.Arrow.utcnow", "pytest.raises"], "tests.test_arrow.TestArrowReplace.test_replace_quarter_and_fold": ["pytest.raises", "arrow.arrow.utcnow"], "arrow.arrow.utcnow": [], "tests.test_arrow.TestArrowReplace.test_replace_other_kwargs": ["pytest.raises", "arrow.arrow.utcnow"], "tests.test_arrow.TestArrowShift.test_not_attr": ["arrow.arrow.Arrow.utcnow", "pytest.raises"], "tests.test_arrow.TestArrowShift.test_shift": ["dateutil.relativedelta.TU", "dateutil.relativedelta.FR", "arrow.arrow.Arrow", "dateutil.relativedelta.SA", "dateutil.relativedelta.SU", "dateutil.relativedelta.WE", "pytest.raises", "dateutil.relativedelta.MO", "dateutil.relativedelta.TH"], "dateutil.relativedelta.MO": [], "dateutil.relativedelta.TU": [], "dateutil.relativedelta.WE": [], "dateutil.relativedelta.TH": [], "dateutil.relativedelta.FR": [], "dateutil.relativedelta.SA": [], "dateutil.relativedelta.SU": [], "tests.test_arrow.TestArrowShift.test_shift_negative": ["dateutil.relativedelta.TU", "dateutil.relativedelta.FR", "arrow.arrow.Arrow", "dateutil.relativedelta.SA", "dateutil.relativedelta.SU", "dateutil.relativedelta.WE", "pytest.raises", "dateutil.relativedelta.MO", "dateutil.relativedelta.TH"], "tests.test_arrow.TestArrowShift.test_shift_quarters_bug": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowShift.test_shift_positive_imaginary": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowShift.test_shift_negative_imaginary": ["arrow.arrow.Arrow"], "pytest.mark.skipif": [], "tests.test_arrow.TestArrowShift": ["pytest.mark.skipif"], "tests.test_arrow.TestArrowShift.test_shift_kiritimati": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowShift.shift_imaginary_seconds": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowRange.test_year": ["<builtin>.list", "arrow.arrow.Arrow", "datetime.datetime", "arrow.arrow.Arrow.range"], "arrow.arrow.Arrow.range": [], "<builtin>.list": [], "tests.test_arrow.TestArrowRange.test_quarter": ["<builtin>.list", "arrow.arrow.Arrow", "datetime.datetime", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_month": ["<builtin>.list", "arrow.arrow.Arrow", "datetime.datetime", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_week": ["<builtin>.list", "arrow.arrow.Arrow", "datetime.datetime", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_day": ["<builtin>.list", "arrow.arrow.Arrow", "datetime.datetime", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_hour": ["<builtin>.list", "arrow.arrow.Arrow", "datetime.datetime", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_minute": ["<builtin>.list", "arrow.arrow.Arrow", "datetime.datetime", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_second": ["<builtin>.list", "arrow.arrow.Arrow", "datetime.datetime", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_arrow": ["<builtin>.list", "arrow.arrow.Arrow", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_naive_tz": ["datetime.datetime", "arrow.arrow.Arrow.range", "dateutil.tz.gettz"], "tests.test_arrow.TestArrowRange.test_aware_same_tz": ["arrow.arrow.Arrow", "dateutil.tz.gettz", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_aware_different_tz": ["datetime.datetime", "dateutil.tz.gettz", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_aware_tz": ["datetime.datetime", "dateutil.tz.gettz", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_imaginary": ["<builtin>.len", "<builtin>.set", "arrow.arrow.Arrow", "arrow.arrow.Arrow.range"], "<builtin>.len": [], "<builtin>.set": [], "tests.test_arrow.TestArrowRange.test_unsupported": ["<builtin>.next", "datetime.datetime.utcnow", "pytest.raises", "arrow.arrow.Arrow.range"], "<builtin>.next": [], "tests.test_arrow.TestArrowRange.test_range_over_months_ending_on_different_days": ["<builtin>.list", "arrow.arrow.Arrow", "datetime.datetime", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_range_over_quarter_months_ending_on_different_days": ["<builtin>.list", "arrow.arrow.Arrow", "datetime.datetime", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowRange.test_range_over_year_maintains_end_date_across_leap_year": ["<builtin>.list", "arrow.arrow.Arrow", "datetime.datetime", "arrow.arrow.Arrow.range"], "tests.test_arrow.TestArrowSpanRange.test_year": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "arrow.arrow.Arrow.span_range": [], "tests.test_arrow.TestArrowSpanRange.test_quarter": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_month": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_week": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_day": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_days": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_hour": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_minute": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_second": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_naive_tz": ["datetime.datetime", "dateutil.tz.gettz", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_aware_same_tz": ["datetime.datetime", "dateutil.tz.gettz", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_aware_different_tz": ["datetime.datetime", "dateutil.tz.gettz", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_aware_tz": ["datetime.datetime", "dateutil.tz.gettz", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_bounds_param_is_passed": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_exact_bound_exclude": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_exact_floor_equals_end": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_exact_bound_include": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowSpanRange.test_small_interval_exact_open_bounds": ["arrow.arrow.Arrow", "datetime.datetime", "<builtin>.list", "arrow.arrow.Arrow.span_range"], "tests.test_arrow.TestArrowInterval.test_incorrect_input": ["arrow.arrow.Arrow.interval", "pytest.raises", "datetime.datetime", "<builtin>.list"], "arrow.arrow.Arrow.interval": [], "tests.test_arrow.TestArrowInterval.test_correct": ["arrow.arrow.Arrow", "arrow.arrow.Arrow.interval", "datetime.datetime", "<builtin>.list"], "tests.test_arrow.TestArrowInterval.test_bounds_param_is_passed": ["arrow.arrow.Arrow", "arrow.arrow.Arrow.interval", "datetime.datetime", "<builtin>.list"], "tests.test_arrow.TestArrowInterval.test_exact": ["arrow.arrow.Arrow", "arrow.arrow.Arrow.interval", "datetime.datetime", "<builtin>.list"], "tests.test_arrow.TestArrowSpan.test_span_attribute": ["pytest.raises"], "tests.test_arrow.TestArrowSpan.test_span_year": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_span_quarter": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_span_quarter_count": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_span_year_count": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_span_month": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_span_week": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_span_day": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_span_hour": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_span_minute": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_span_second": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_span_microsecond": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_floor": [], "tests.test_arrow.TestArrowSpan.test_span_inclusive_inclusive": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_span_exclusive_inclusive": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_span_exclusive_exclusive": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_bounds_are_validated": ["pytest.raises"], "tests.test_arrow.TestArrowSpan.test_exact": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_exact_inclusive_inclusive": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_exact_exclusive_inclusive": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_exact_exclusive_exclusive": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowSpan.test_all_parameters_specified": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_arrow.TestArrowHumanize.test_granularity": ["pytest.raises"], "tests.test_arrow.TestArrowHumanize.test_multiple_granularity": ["pytest.raises"], "tests.test_arrow.TestArrowHumanize.test_seconds": [], "tests.test_arrow.TestArrowHumanize.test_minute": [], "tests.test_arrow.TestArrowHumanize.test_minutes": [], "tests.test_arrow.TestArrowHumanize.test_hour": [], "tests.test_arrow.TestArrowHumanize.test_hours": [], "tests.test_arrow.TestArrowHumanize.test_day": ["pytest.raises"], "tests.test_arrow.TestArrowHumanize.test_days": [], "tests.test_arrow.TestArrowHumanize.test_week": [], "tests.test_arrow.TestArrowHumanize.test_weeks": [], "pytest.mark.xfail": [], "tests.test_arrow.TestArrowHumanize": ["pytest.mark.xfail"], "tests.test_arrow.TestArrowHumanize.test_month": [], "tests.test_arrow.TestArrowHumanize.test_month_plus_4_days": [], "tests.test_arrow.TestArrowHumanize.test_months": [], "tests.test_arrow.TestArrowHumanize.test_year": [], "tests.test_arrow.TestArrowHumanize.test_years": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowHumanize.test_arrow": ["arrow.arrow.Arrow.fromdatetime"], "tests.test_arrow.TestArrowHumanize.test_datetime_tzinfo": ["arrow.arrow.Arrow.fromdatetime", "dateutil.tz.tzutc"], "tests.test_arrow.TestArrowHumanize.test_other": ["arrow.arrow.Arrow.fromdatetime", "pytest.raises", "<builtin>.object"], "tests.test_arrow.TestArrowHumanize.test_invalid_locale": ["arrow.arrow.Arrow.fromdatetime", "pytest.raises"], "tests.test_arrow.TestArrowHumanize.test_none": ["arrow.arrow.Arrow.utcnow"], "tests.test_arrow.TestArrowHumanize.test_week_limit": ["arrow.arrow.Arrow.utcnow"], "tests.test_arrow.TestArrowHumanize.test_untranslated_granularity": ["arrow.arrow.Arrow.utcnow", "pytest.raises"], "tests.test_arrow.TestArrowHumanize.test_empty_granularity_list": ["pytest.raises", "arrow.arrow.Arrow"], "tests.test_arrow.TestArrowHumanize.test_no_floats": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowHumanize.test_no_floats_multi_gran": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowHumanizeTestsWithLocale.test_now": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowHumanizeTestsWithLocale.test_seconds": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowHumanizeTestsWithLocale.test_years": ["arrow.arrow.Arrow"], "pytest.fixture": [], "tests.test_arrow.locale_list_no_weeks": [], "tests.test_arrow.locale_list_with_weeks": [], "tests.test_arrow.slavic_locales": [], "tests.test_arrow.TestArrowDehumanize.test_now": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_seconds": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_minute": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_minutes": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_hour": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_hours": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_week": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_weeks": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_year": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_years": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_gt_than_10_years": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_mixed_granularity": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_mixed_granularity_hours": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_mixed_granularity_day": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_mixed_granularity_day_hour": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_unsupported_locale": ["pytest.raises", "arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_normalized_locale": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_require_relative_unit": ["pytest.raises", "arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_scrambled_input": ["<builtin>.sorted", "pytest.raises", "arrow.arrow.Arrow"], "<builtin>.sorted": [], "tests.test_arrow.TestArrowDehumanize.test_no_units_modified": ["arrow.locales.get_locale", "pytest.raises", "arrow.arrow.Arrow"], "arrow.locales.get_locale": [], "tests.test_arrow.TestArrowDehumanize.test_slavic_locales": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowDehumanize.test_czech_slovak": ["arrow.arrow.Arrow"], "tests.test_arrow.TestArrowIsBetween.test_start_before_end": ["arrow.arrow.Arrow.fromdatetime", "datetime.datetime"], "tests.test_arrow.TestArrowIsBetween.test_exclusive_exclusive_bounds": ["arrow.arrow.Arrow.fromdatetime", "datetime.datetime"], "tests.test_arrow.TestArrowIsBetween.test_exclusive_exclusive_bounds_same_date": ["arrow.arrow.Arrow.fromdatetime", "datetime.datetime"], "tests.test_arrow.TestArrowIsBetween.test_inclusive_exclusive_bounds": ["arrow.arrow.Arrow.fromdatetime", "datetime.datetime"], "tests.test_arrow.TestArrowIsBetween.test_exclusive_inclusive_bounds": ["arrow.arrow.Arrow.fromdatetime", "datetime.datetime"], "tests.test_arrow.TestArrowIsBetween.test_inclusive_inclusive_bounds_same_date": ["arrow.arrow.Arrow.fromdatetime", "datetime.datetime"], "tests.test_arrow.TestArrowIsBetween.test_inclusive_inclusive_bounds_target_before_start": ["arrow.arrow.Arrow.fromdatetime", "datetime.datetime"], "tests.test_arrow.TestArrowIsBetween.test_type_error_exception": ["arrow.arrow.Arrow.fromdatetime", "pytest.raises", "datetime.datetime"], "tests.test_arrow.TestArrowIsBetween.test_value_error_exception": ["arrow.arrow.Arrow.fromdatetime", "pytest.raises", "datetime.datetime"], "tests.test_arrow.TestArrowUtil.test_get_datetime": ["time.time", "arrow.arrow.Arrow.utcfromtimestamp", "<builtin>.str", "datetime.datetime.utcnow", "pytest.raises", "arrow.arrow.Arrow.utcnow", "arrow.arrow.Arrow._get_datetime"], "arrow.arrow.Arrow._get_datetime": [], "tests.test_arrow.TestArrowUtil.test_get_tzinfo": ["arrow.arrow.Arrow._get_tzinfo", "<builtin>.str", "pytest.raises"], "arrow.arrow.Arrow._get_tzinfo": [], "tests.test_arrow.TestArrowUtil.test_get_iteration_params": ["arrow.arrow.Arrow._get_iteration_params", "pytest.raises"], "arrow.arrow.Arrow._get_iteration_params": [], "tests.test_factory": [], "tests.test_factory.TestGet.test_no_args": ["utils.assert_datetime_equality", "dateutil.tz.tzutc", "datetime.datetime.utcnow"], "tests.test_factory.TestGet.test_timestamp_one_arg_no_arg": [], "tests.test_factory.TestGet.test_one_arg_none": ["pytest.raises"], "tests.test_factory.TestGet.test_struct_time": ["time.gmtime", "utils.assert_datetime_equality", "dateutil.tz.tzutc", "datetime.datetime.utcnow"], "time.gmtime": [], "tests.test_factory.TestGet.test_one_arg_timestamp": ["time.time", "datetime.datetime.utcfromtimestamp", "<builtin>.str", "<builtin>.int", "dateutil.tz.tzutc", "pytest.raises"], "datetime.datetime.utcfromtimestamp": [], "tests.test_factory.TestGet.test_one_arg_expanded_timestamp": ["dateutil.tz.tzutc", "datetime.datetime.utcfromtimestamp"], "tests.test_factory.TestGet.test_one_arg_timestamp_with_tzinfo": ["time.time", "utils.assert_datetime_equality", "datetime.datetime.fromtimestamp", "dateutil.tz.tzutc", "dateutil.tz.gettz"], "tests.test_factory.TestGet.test_one_arg_arrow": [], "tests.test_factory.TestGet.test_one_arg_datetime": ["dateutil.tz.tzutc", "datetime.datetime.utcnow"], "tests.test_factory.TestGet.test_one_arg_date": ["dateutil.tz.tzutc", "datetime.date.today", "datetime.datetime"], "datetime.date.today": [], "tests.test_factory.TestGet.test_one_arg_tzinfo": ["utils.assert_datetime_equality", "dateutil.tz.tzutc", "datetime.datetime.utcnow", "dateutil.tz.gettz"], "tests.test_factory.TestGet.test_one_arg_dateparser_datetime": ["dateutil.tz.tzutc", "pytest.importorskip", "datetime.datetime"], "pytest.importorskip": [], "tests.test_factory.TestGet.test_kwarg_tzinfo": ["utils.assert_datetime_equality", "dateutil.tz.tzutc", "datetime.datetime.utcnow", "dateutil.tz.gettz"], "tests.test_factory.TestGet.test_kwarg_tzinfo_string": ["utils.assert_datetime_equality", "dateutil.tz.tzutc", "pytest.raises", "datetime.datetime.utcnow", "dateutil.tz.gettz"], "tests.test_factory.TestGet.test_kwarg_normalize_whitespace": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_factory.TestGet.test_one_arg_datetime_tzinfo_kwarg": ["utils.assert_datetime_equality", "datetime.datetime", "dateutil.tz.gettz"], "tests.test_factory.TestGet.test_one_arg_arrow_tzinfo_kwarg": ["utils.assert_datetime_equality", "datetime.datetime", "dateutil.tz.gettz", "arrow.Arrow"], "arrow.Arrow": [], "tests.test_factory.TestGet.test_one_arg_date_tzinfo_kwarg": ["arrow.Arrow", "datetime.date", "dateutil.tz.gettz"], "tests.test_factory.TestGet.test_one_arg_iso_calendar_tzinfo_kwarg": ["utils.assert_datetime_equality", "arrow.Arrow"], "tests.test_factory.TestGet.test_one_arg_iso_str": ["utils.assert_datetime_equality", "dateutil.tz.tzutc", "datetime.datetime.utcnow"], "tests.test_factory.TestGet.test_one_arg_iso_calendar": ["pytest.raises", "datetime.datetime"], "tests.test_factory.TestGet.test_one_arg_other": ["pytest.raises", "<builtin>.object"], "tests.test_factory.TestGet.test_one_arg_bool": ["pytest.raises"], "tests.test_factory.TestGet.test_one_arg_decimal": ["dateutil.tz.tzutc", "datetime.datetime", "decimal.Decimal"], "decimal.Decimal": [], "tests.test_factory.TestGet.test_two_args_datetime_tzinfo": ["datetime.datetime", "dateutil.tz.gettz"], "tests.test_factory.TestGet.test_two_args_datetime_tz_str": ["datetime.datetime", "dateutil.tz.gettz"], "tests.test_factory.TestGet.test_two_args_date_tzinfo": ["datetime.datetime", "datetime.date", "dateutil.tz.gettz"], "tests.test_factory.TestGet.test_two_args_date_tz_str": ["datetime.datetime", "datetime.date", "dateutil.tz.gettz"], "tests.test_factory.TestGet.test_two_args_datetime_other": ["datetime.datetime.utcnow", "pytest.raises", "<builtin>.object"], "tests.test_factory.TestGet.test_two_args_date_other": ["datetime.date.today", "pytest.raises", "<builtin>.object"], "tests.test_factory.TestGet.test_two_args_str_str": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_factory.TestGet.test_two_args_str_tzinfo": ["utils.assert_datetime_equality", "datetime.datetime", "dateutil.tz.gettz"], "tests.test_factory.TestGet.test_two_args_twitter_format": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_factory.TestGet.test_two_args_str_list": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_factory.TestGet.test_two_args_unicode_unicode": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_factory.TestGet.test_two_args_other": ["pytest.raises", "<builtin>.object"], "tests.test_factory.TestGet.test_three_args_with_tzinfo": ["dateutil.tz.tzlocal", "datetime.datetime"], "tests.test_factory.TestGet.test_three_args": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_factory.TestGet.test_full_kwargs": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_factory.TestGet.test_three_kwargs": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_factory.TestGet.test_tzinfo_string_kwargs": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_factory.TestGet.test_insufficient_kwargs": ["pytest.raises"], "tests.test_factory.TestGet.test_locale": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_factory.TestGet.test_locale_kwarg_only": ["dateutil.tz.tzutc"], "tests.test_factory.TestGet.test_locale_with_tzinfo": ["dateutil.tz.gettz"], "tests.test_factory.TestUtcNow.test_utcnow": ["utils.assert_datetime_equality", "dateutil.tz.tzutc", "datetime.datetime.utcnow"], "tests.test_factory.TestNow.test_no_tz": ["utils.assert_datetime_equality", "dateutil.tz.tzlocal", "datetime.datetime.now"], "tests.test_factory.TestNow.test_tzinfo": ["utils.assert_datetime_equality", "datetime.datetime.now", "dateutil.tz.gettz"], "tests.test_factory.TestNow.test_tz_str": ["utils.assert_datetime_equality", "datetime.datetime.now", "dateutil.tz.gettz"], "tests.conftest": ["pytest.fixture"], "tests.conftest.time_utcnow": ["arrow.arrow.Arrow.utcnow"], "tests.conftest.time_2013_01_01": ["arrow.arrow.Arrow.utcnow", "datetime.datetime", "arrow.arrow.Arrow"], "tests.conftest.time_2013_02_03": ["arrow.arrow.Arrow"], "tests.conftest.time_2013_02_15": ["arrow.arrow.Arrow.fromdatetime", "datetime.datetime"], "tests.conftest.time_1975_12_25": ["arrow.arrow.Arrow.fromdatetime", "datetime.datetime", "dateutil.tz.gettz"], "tests.conftest.arrow_formatter": ["arrow.formatter.DateTimeFormatter"], "arrow.formatter.DateTimeFormatter": [], "tests.conftest.arrow_factory": ["arrow.factory.ArrowFactory"], "arrow.factory.ArrowFactory": [], "tests.conftest.lang_locales": [], "tests.conftest.lang_locale": ["arrow.locales.get_locale_by_class_name"], "arrow.locales.get_locale_by_class_name": [], "tests.conftest.dt_parser": ["arrow.parser.DateTimeParser"], "arrow.parser.DateTimeParser": [], "tests.conftest.dt_parser_regex": [], "tests.conftest.tzinfo_parser": ["arrow.parser.TzinfoParser"], "arrow.parser.TzinfoParser": [], "tests.test_locales": [], "tests.test_locales.TestLocaleValidation.test_locale_validation": ["<builtin>.all", "<builtin>.len"], "<builtin>.all": [], "tests.test_locales.TestLocaleValidation.test_locale_name_validation": ["<builtin>.len"], "tests.test_locales.TestLocaleValidation.test_duplicated_locale_name": ["pytest.raises"], "tests.test_locales.TestModule.test_get_locale": ["pytest.raises", "arrow.arrow.locales.get_locale"], "arrow.arrow.locales.get_locale": [], "tests.test_locales.TestModule.test_get_locale_by_class_name": ["pytest.raises", "arrow.arrow.locales.get_locale_by_class_name"], "arrow.arrow.locales.get_locale_by_class_name": [], "tests.test_locales.TestModule.test_locales": ["<builtin>.len"], "tests.test_locales.TestCustomLocale.test_custom_locale_subclass": ["arrow.locales.get_locale"], "tests.test_locales.TestEnglishLocale.test_describe": [], "tests.test_locales.TestEnglishLocale.test_format_timeframe": [], "tests.test_locales.TestEnglishLocale.test_format_relative_now": [], "tests.test_locales.TestEnglishLocale.test_format_relative_past": [], "tests.test_locales.TestEnglishLocale.test_format_relative_future": [], "tests.test_locales.TestEnglishLocale.test_ordinal_number": [], "tests.test_locales.TestEnglishLocale.test_meridian_invalid_token": [], "tests.test_locales.TestItalianLocale.test_ordinal_number": [], "tests.test_locales.TestSpanishLocale.test_ordinal_number": [], "tests.test_locales.TestSpanishLocale.test_format_timeframe": [], "tests.test_locales.TestFrenchLocale.test_ordinal_number": [], "tests.test_locales.TestFrenchLocale.test_month_abbreviation": [], "tests.test_locales.TestFrenchCanadianLocale.test_month_abbreviation": [], "tests.test_locales.TestRussianLocale.test_singles_timeframe": [], "tests.test_locales.TestRussianLocale.test_singles_relative": [], "tests.test_locales.TestRussianLocale.test_plurals_timeframe": [], "tests.test_locales.TestRussianLocale.test_plurals_relative": [], "tests.test_locales.TestRussianLocale.test_plurals2": [], "tests.test_locales.TestPolishLocale.test_plurals": [], "tests.test_locales.TestIcelandicLocale.test_format_timeframe": ["pytest.raises"], "tests.test_locales.TestMalayalamLocale.test_format_timeframe": [], "tests.test_locales.TestMalayalamLocale.test_format_relative_now": [], "tests.test_locales.TestMalayalamLocale.test_format_relative_past": [], "tests.test_locales.TestMalayalamLocale.test_format_relative_future": [], "tests.test_locales.TestMalteseLocale.test_format_timeframe": [], "tests.test_locales.TestMalteseLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestHindiLocale.test_format_timeframe": [], "tests.test_locales.TestHindiLocale.test_format_relative_now": [], "tests.test_locales.TestHindiLocale.test_format_relative_past": [], "tests.test_locales.TestHindiLocale.test_format_relative_future": [], "tests.test_locales.TestCzechLocale.test_format_timeframe": [], "tests.test_locales.TestCzechLocale.test_format_relative_now": [], "tests.test_locales.TestCzechLocale.test_format_relative_future": [], "tests.test_locales.TestCzechLocale.test_format_relative_past": [], "tests.test_locales.TestSlovakLocale.test_format_timeframe": [], "tests.test_locales.TestSlovakLocale.test_format_relative_now": [], "tests.test_locales.TestSlovakLocale.test_format_relative_future": [], "tests.test_locales.TestSlovakLocale.test_format_relative_past": [], "tests.test_locales.TestBulgarianLocale.test_plurals2": [], "tests.test_locales.TestMacedonianLocale.test_singles_mk": [], "tests.test_locales.TestMacedonianLocale.test_meridians_mk": [], "tests.test_locales.TestMacedonianLocale.test_describe_mk": [], "tests.test_locales.TestMacedonianLocale.test_relative_mk": [], "tests.test_locales.TestMacedonianLocale.test_plurals_mk": [], "tests.test_locales.TestMacedonianLocale.test_multi_describe_mk": [], "tests.test_locales.TestHebrewLocale.test_couple_of_timeframe": [], "tests.test_locales.TestHebrewLocale.test_describe_multi": [], "tests.test_locales.TestAzerbaijaniLocale.test_singles_mk": [], "tests.test_locales.TestAzerbaijaniLocale.test_describe_mk": [], "tests.test_locales.TestAzerbaijaniLocale.test_relative_mk": [], "tests.test_locales.TestAzerbaijaniLocale.test_plurals_mk": [], "tests.test_locales.TestMarathiLocale.test_dateCoreFunctionality": ["arrow.arrow.Arrow"], "tests.test_locales.TestMarathiLocale.test_format_timeframe": [], "tests.test_locales.TestMarathiLocale.test_format_relative_now": [], "tests.test_locales.TestMarathiLocale.test_format_relative_past": [], "tests.test_locales.TestMarathiLocale.test_format_relative_future": [], "tests.test_locales.TestMarathiLocale.test_ordinal_number": [], "tests.test_locales.TestFinnishLocale.test_format_timeframe": [], "tests.test_locales.TestFinnishLocale.test_format_relative_now": [], "tests.test_locales.TestFinnishLocale.test_format_relative_past": [], "tests.test_locales.TestFinnishLocale.test_format_relative_future": [], "tests.test_locales.TestFinnishLocale.test_ordinal_number": [], "tests.test_locales.TestGeorgianLocale.test_format_timeframe": [], "tests.test_locales.TestGeorgianLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestGermanLocale.test_ordinal_number": [], "tests.test_locales.TestGermanLocale.test_define": [], "tests.test_locales.TestGermanLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestHungarianLocale.test_format_timeframe": [], "tests.test_locales.TestEsperantoLocale.test_format_timeframe": [], "tests.test_locales.TestEsperantoLocale.test_ordinal_number": [], "tests.test_locales.TestLaotianLocale.test_year_full": [], "tests.test_locales.TestLaotianLocale.test_year_abbreviation": [], "tests.test_locales.TestLaotianLocale.test_format_relative_now": [], "tests.test_locales.TestLaotianLocale.test_format_relative_past": [], "tests.test_locales.TestLaotianLocale.test_format_relative_future": [], "tests.test_locales.TestLaotianLocale.test_format_timeframe": [], "tests.test_locales.TestLaotianLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestThaiLocale.test_year_full": [], "tests.test_locales.TestThaiLocale.test_year_abbreviation": [], "tests.test_locales.TestThaiLocale.test_format_relative_now": [], "tests.test_locales.TestThaiLocale.test_format_relative_past": [], "tests.test_locales.TestThaiLocale.test_format_relative_future": [], "tests.test_locales.TestBengaliLocale.test_ordinal_number": [], "tests.test_locales.TestRomanianLocale.test_timeframes": [], "tests.test_locales.TestRomanianLocale.test_relative_timeframes": [], "tests.test_locales.TestArabicLocale.test_timeframes": [], "tests.test_locales.TestNepaliLocale.test_format_timeframe": [], "tests.test_locales.TestNepaliLocale.test_format_relative_now": [], "tests.test_locales.TestNepaliLocale.test_format_relative_future": [], "tests.test_locales.TestNepaliLocale.test_format_relative_past": [], "tests.test_locales.TestIndonesianLocale.test_timeframes": [], "tests.test_locales.TestIndonesianLocale.test_format_relative_now": [], "tests.test_locales.TestIndonesianLocale.test_format_relative_past": [], "tests.test_locales.TestIndonesianLocale.test_format_relative_future": [], "tests.test_locales.TestTagalogLocale.test_singles_tl": [], "tests.test_locales.TestTagalogLocale.test_meridians_tl": [], "tests.test_locales.TestTagalogLocale.test_describe_tl": [], "tests.test_locales.TestTagalogLocale.test_relative_tl": [], "tests.test_locales.TestTagalogLocale.test_plurals_tl": [], "tests.test_locales.TestTagalogLocale.test_multi_describe_tl": [], "tests.test_locales.TestTagalogLocale.test_ordinal_number_tl": [], "tests.test_locales.TestCroatianLocale.test_format_timeframe": [], "tests.test_locales.TestCroatianLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestSerbianLocale.test_format_timeframe": [], "tests.test_locales.TestSerbianLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestLatinLocale.test_format_timeframe": [], "tests.test_locales.TestLatinLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestLithuanianLocale.test_format_timeframe": [], "tests.test_locales.TestLithuanianLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestMalayLocale.test_format_timeframe": [], "tests.test_locales.TestMalayLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestSamiLocale.test_format_timeframe": [], "tests.test_locales.TestSamiLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestZuluLocale.test_format_timeframe": [], "tests.test_locales.TestZuluLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestAlbanianLocale.test_format_timeframe": [], "tests.test_locales.TestAlbanianLocale.test_weekday_and_month": ["arrow.arrow.Arrow"], "tests.test_locales.TestUrduLocale.test_format_timeframe": [], "tests.test_locales.TestUrduLocale.test_weekday_and_month": ["arrow.arrow.Arrow"], "tests.test_locales.TestEstonianLocale.test_format_timeframe": [], "tests.test_locales.TestPortugueseLocale.test_format_timeframe": [], "tests.test_locales.TestLatvianLocale.test_format_timeframe": [], "tests.test_locales.TestLatvianLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestBrazilianPortugueseLocale.test_format_timeframe": [], "tests.test_locales.TestHongKongLocale.test_format_timeframe": [], "tests.test_locales.TestHongKongLocale.test_format_relative_now": [], "tests.test_locales.TestHongKongLocale.test_format_relative_past": [], "tests.test_locales.TestHongKongLocale.test_format_relative_future": [], "tests.test_locales.TestChineseTWLocale.test_format_timeframe": [], "tests.test_locales.TestChineseTWLocale.test_format_relative_now": [], "tests.test_locales.TestChineseTWLocale.test_format_relative_past": [], "tests.test_locales.TestChineseTWLocale.test_format_relative_future": [], "tests.test_locales.TestChineseCNLocale.test_format_timeframe": [], "tests.test_locales.TestChineseCNLocale.test_format_relative_now": [], "tests.test_locales.TestChineseCNLocale.test_format_relative_past": [], "tests.test_locales.TestChineseCNLocale.test_format_relative_future": [], "tests.test_locales.TestSwahiliLocale.test_format_timeframe": [], "tests.test_locales.TestSwahiliLocale.test_format_relative_now": [], "tests.test_locales.TestSwahiliLocale.test_format_relative_past": [], "tests.test_locales.TestSwahiliLocale.test_format_relative_future": [], "tests.test_locales.TestKoreanLocale.test_format_timeframe": [], "tests.test_locales.TestKoreanLocale.test_format_relative": [], "tests.test_locales.TestKoreanLocale.test_ordinal_number": [], "tests.test_locales.TestDutchLocale.test_plurals": [], "tests.test_locales.TestJapaneseLocale.test_format_timeframe": [], "tests.test_locales.TestSwedishLocale.test_plurals": [], "tests.test_locales.TestOdiaLocale.test_ordinal_number": [], "tests.test_locales.TestOdiaLocale.test_format_timeframe": [], "tests.test_locales.TestOdiaLocale.test_format_relative_now": [], "tests.test_locales.TestOdiaLocale.test_format_relative_past": [], "tests.test_locales.TestOdiaLocale.test_format_relative_future": [], "tests.test_locales.TestTurkishLocale.test_singles_mk": [], "tests.test_locales.TestTurkishLocale.test_meridians_mk": [], "tests.test_locales.TestTurkishLocale.test_describe_mk": [], "tests.test_locales.TestTurkishLocale.test_relative_mk": [], "tests.test_locales.TestTurkishLocale.test_plurals_mk": [], "tests.test_locales.TestLuxembourgishLocale.test_ordinal_number": [], "tests.test_locales.TestLuxembourgishLocale.test_define": [], "tests.test_locales.TestLuxembourgishLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestTamilLocale.test_format_timeframe": [], "tests.test_locales.TestTamilLocale.test_ordinal_number": [], "tests.test_locales.TestTamilLocale.test_format_relative_now": [], "tests.test_locales.TestTamilLocale.test_format_relative_past": [], "tests.test_locales.TestTamilLocale.test_format_relative_future": [], "tests.test_locales.TestTamilLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestSinhalaLocale.test_format_timeframe": [], "tests.test_locales.TestSinhalaLocale.test_describe_si": [], "tests.test_locales.TestSinhalaLocale.test_format_relative_now": [], "tests.test_locales.TestSinhalaLocale.test_format_relative_future": [], "tests.test_locales.TestSinhalaLocale.test_format_relative_past": [], "tests.test_locales.TestSinhalaLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestKazakhLocale.test_singles_mk": [], "tests.test_locales.TestKazakhLocale.test_describe_mk": [], "tests.test_locales.TestKazakhLocale.test_relative_mk": [], "tests.test_locales.TestKazakhLocale.test_plurals_mk": [], "tests.test_locales.TestNorwegianLocale.test_describe": [], "tests.test_locales.TestNorwegianLocale.test_plurals": [], "tests.test_locales.TestNorwegianLocale.test_ordinal_number": [], "tests.test_locales.TestNorwegianLocale.test_format_timeframe": [], "tests.test_locales.TestNorwegianLocale.test_format_relative_now": [], "tests.test_locales.TestNorwegianLocale.test_format_relative_past": [], "tests.test_locales.TestNorwegianLocale.test_format_relative_future": [], "tests.test_locales.TestNorwegianLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestNewNorwegianLocale.test_describe": [], "tests.test_locales.TestNewNorwegianLocale.test_plurals": [], "tests.test_locales.TestNewNorwegianLocale.test_ordinal_number": [], "tests.test_locales.TestNewNorwegianLocale.test_format_timeframe": [], "tests.test_locales.TestNewNorwegianLocale.test_format_relative_now": [], "tests.test_locales.TestNewNorwegianLocale.test_format_relative_past": [], "tests.test_locales.TestNewNorwegianLocale.test_format_relative_future": [], "tests.test_locales.TestNewNorwegianLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestDanishLocale.test_describe": [], "tests.test_locales.TestDanishLocale.test_plurals": [], "tests.test_locales.TestDanishLocale.test_ordinal_number": [], "tests.test_locales.TestDanishLocale.test_format_timeframe": [], "tests.test_locales.TestDanishLocale.test_format_relative_now": [], "tests.test_locales.TestDanishLocale.test_format_relative_past": [], "tests.test_locales.TestDanishLocale.test_format_relative_future": [], "tests.test_locales.TestDanishLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestAmharicLocale.test_format_timeframe": [], "tests.test_locales.TestAmharicLocale.test_describe_am": [], "tests.test_locales.TestAmharicLocale.test_format_relative_now": [], "tests.test_locales.TestAmharicLocale.test_ordinal_number": [], "tests.test_locales.TestAmharicLocale.test_format_relative_future": [], "tests.test_locales.TestAmharicLocale.test_format_relative_past": [], "tests.test_locales.TestAmharicLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestArmenianLocale.test_describe": [], "tests.test_locales.TestArmenianLocale.test_meridians_hy": [], "tests.test_locales.TestArmenianLocale.test_format_timeframe": [], "tests.test_locales.TestArmenianLocale.test_weekday": ["arrow.arrow.Arrow"], "tests.test_locales.TestUzbekLocale.test_singles_mk": [], "tests.test_locales.TestUzbekLocale.test_describe_mk": [], "tests.test_locales.TestUzbekLocale.test_relative_mk": [], "tests.test_locales.TestUzbekLocale.test_plurals_mk": [], "tests": [], "tests.test_util": [], "tests.test_util.TestUtil.test_next_weekday": ["pytest.raises", "arrow.util.next_weekday", "datetime.datetime"], "arrow.util.next_weekday": [], "tests.test_util.TestUtil.test_is_timestamp": ["time.time", "arrow.util.is_timestamp", "<builtin>.str", "<builtin>.int"], "arrow.util.is_timestamp": [], "tests.test_util.TestUtil.test_validate_ordinal": ["<builtin>.str", "arrow.util.validate_ordinal", "<builtin>.type", "datetime.datetime.max.toordinal", "<builtin>.int", "pytest.raises", "datetime.datetime.utcnow", "<builtin>.float", "pytest.fail"], "arrow.util.validate_ordinal": [], "<builtin>.type": [], "pytest.fail": [], "datetime.datetime.max.toordinal": [], "<builtin>.float": [], "tests.test_util.TestUtil.test_normalize_timestamp": ["arrow.util.normalize_timestamp", "pytest.raises"], "arrow.util.normalize_timestamp": [], "tests.test_util.TestUtil.test_iso_gregorian": ["arrow.util.iso_to_gregorian", "pytest.raises"], "arrow.util.iso_to_gregorian": [], "tests.utils": [], "tests.utils.make_full_tz_list": ["<builtin>.set", "dateutil.zoneinfo.get_zonefile_instance"], "dateutil.zoneinfo.get_zonefile_instance": [], "tests.utils.assert_datetime_equality": ["<builtin>.abs"], "<builtin>.abs": [], "tests.test_parser": [], "tests.test_parser.TestDateTimeParser.test_parse_multiformat": ["pytest.raises"], "tests.test_parser.TestDateTimeParser.test_parse_multiformat_all_fail": ["pytest.raises"], "tests.test_parser.TestDateTimeParser.test_parse_multiformat_unself_expected_fail": ["pytest.raises"], "tests.test_parser.TestDateTimeParser.test_parse_token_nonsense": [], "tests.test_parser.TestDateTimeParser.test_parse_token_invalid_meridians": [], "tests.test_parser.TestDateTimeParser.test_parser_no_caching": ["<builtin>.range"], "<builtin>.range": [], "tests.test_parser.TestDateTimeParser.test_parser_1_line_caching": ["<builtin>.range"], "tests.test_parser.TestDateTimeParser.test_parser_multiple_line_caching": ["<builtin>.range"], "tests.test_parser.TestDateTimeParser.test_YY_and_YYYY_format_list": ["dateutil.tz.tzutc", "datetime.datetime"], "tests.test_parser.TestDateTimeParser.test_timestamp_format_list": ["pytest.raises", "datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_list": [], "tests.test_parser.TestDateTimeParserParse.test_parse_unrecognized_token": ["pytest.raises", "arrow.parser.DateTimeParser"], "tests.test_parser.TestDateTimeParserParse.test_parse_parse_no_match": ["pytest.raises"], "tests.test_parser.TestDateTimeParserParse.test_parse_separators": ["pytest.raises"], "tests.test_parser.TestDateTimeParserParse.test_parse_numbers": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_am": ["pytest.raises"], "tests.test_parser.TestDateTimeParserParse.test_parse_year_two_digit": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_timestamp": ["time.time", "datetime.datetime.fromtimestamp", "<builtin>.int", "dateutil.tz.tzutc", "pytest.raises"], "tests.test_parser.TestDateTimeParserParse": ["pytest.mark.parametrize", "utils.make_full_tz_list", "pytest.mark.skipif"], "tests.test_parser.TestDateTimeParserParse.test_parse_negative_timestamp": ["time.time", "dateutil.tz.tzutc", "datetime.datetime.fromtimestamp", "<builtin>.int"], "tests.test_parser.TestDateTimeParserParse.test_parse_expanded_timestamp": ["<builtin>.round", "datetime.datetime.fromtimestamp", "<builtin>.int", "dateutil.tz.tzutc", "pytest.raises"], "<builtin>.round": [], "tests.test_parser.TestDateTimeParserParse.test_parse_names": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_pm": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_tz_hours_only": ["dateutil.tz.tzoffset", "datetime.datetime"], "dateutil.tz.tzoffset": [], "tests.test_parser.TestDateTimeParserParse.test_parse_tz_zz": ["dateutil.tz.tzoffset", "datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_tz_name_zzz": ["pytest.raises", "datetime.datetime", "dateutil.tz.gettz"], "tests.test_parser.TestDateTimeParserParse.test_parse_subsecond": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_subsecond_rounding": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_subsecond_rounding_overflow": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_long_year": ["pytest.raises"], "tests.test_parser.TestDateTimeParserParse.test_parse_with_extra_words_at_start_and_end_invalid": ["pytest.raises"], "tests.test_parser.TestDateTimeParserParse.test_parse_with_extra_words_at_start_and_end_valid": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_with_punctuation_fences": ["pytest.raises", "datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_with_leading_and_trailing_whitespace": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_YYYY_DDDD": ["pytest.raises", "datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_YYYY_DDD": ["pytest.raises", "datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_YYYY_MM_DDDD": ["pytest.raises"], "tests.test_parser.TestDateTimeParserParse.test_parse_DDD_only": ["pytest.raises"], "tests.test_parser.TestDateTimeParserParse.test_parse_DDDD_only": ["pytest.raises"], "tests.test_parser.TestDateTimeParserParse.test_parse_ddd_and_dddd": ["dateutil.tz.tzoffset", "arrow.parser.DateTimeParser", "datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_ddd_and_dddd_ignore_case": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_ddd_and_dddd_then_format": ["arrow.formatter.DateTimeFormatter"], "tests.test_parser.TestDateTimeParserParse.test_parse_HH_24": ["pytest.raises", "datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_W": ["pytest.raises", "datetime.datetime"], "tests.test_parser.TestDateTimeParserParse.test_parse_normalize_whitespace": ["pytest.raises", "datetime.datetime"], "tests.test_parser.TestDateTimeParserRegex.test_format_year": [], "tests.test_parser.TestDateTimeParserRegex.test_format_month": [], "tests.test_parser.TestDateTimeParserRegex.test_format_day": [], "tests.test_parser.TestDateTimeParserRegex.test_format_hour": [], "tests.test_parser.TestDateTimeParserRegex.test_format_minute": [], "tests.test_parser.TestDateTimeParserRegex.test_format_second": [], "tests.test_parser.TestDateTimeParserRegex.test_format_subsecond": [], "tests.test_parser.TestDateTimeParserRegex.test_format_tz": [], "tests.test_parser.TestDateTimeParserRegex.test_format_am_pm": [], "tests.test_parser.TestDateTimeParserRegex.test_format_timestamp": [], "tests.test_parser.TestDateTimeParserRegex.test_format_timestamp_milli": [], "tests.test_parser.TestDateTimeParserRegex.test_escape": ["arrow.parser.DateTimeParser._ESCAPE_RE.findall"], "arrow.parser.DateTimeParser._ESCAPE_RE.findall": [], "tests.test_parser.TestDateTimeParserRegex.test_month_names": ["arrow.parser.DateTimeParser"], "tests.test_parser.TestDateTimeParserRegex.test_month_abbreviations": ["arrow.parser.DateTimeParser"], "tests.test_parser.TestDateTimeParserRegex.test_digits": ["arrow.parser.DateTimeParser._ONE_OR_TWO_OR_THREE_DIGIT_RE.findall", "arrow.parser.DateTimeParser._ONE_OR_TWO_DIGIT_RE.findall", "arrow.parser.DateTimeParser._FOUR_DIGIT_RE.findall", "arrow.parser.DateTimeParser._TWO_DIGIT_RE.findall", "arrow.parser.DateTimeParser._THREE_DIGIT_RE.findall", "arrow.parser.DateTimeParser._ONE_OR_MORE_DIGIT_RE.findall"], "arrow.parser.DateTimeParser._ONE_OR_TWO_DIGIT_RE.findall": [], "arrow.parser.DateTimeParser._ONE_OR_TWO_OR_THREE_DIGIT_RE.findall": [], "arrow.parser.DateTimeParser._ONE_OR_MORE_DIGIT_RE.findall": [], "arrow.parser.DateTimeParser._TWO_DIGIT_RE.findall": [], "arrow.parser.DateTimeParser._THREE_DIGIT_RE.findall": [], "arrow.parser.DateTimeParser._FOUR_DIGIT_RE.findall": [], "tests.test_parser.TestDateTimeParserRegex.test_tz": ["arrow.parser.DateTimeParser._TZ_ZZ_RE.search", "arrow.parser.DateTimeParser._TZ_ZZ_RE.findall", "arrow.parser.DateTimeParser._TZ_NAME_RE.findall", "arrow.parser.DateTimeParser._TZ_Z_RE.search", "arrow.parser.DateTimeParser._TZ_Z_RE.findall"], "arrow.parser.DateTimeParser._TZ_Z_RE.findall": [], "arrow.parser.DateTimeParser._TZ_Z_RE.search": [], "arrow.parser.DateTimeParser._TZ_ZZ_RE.findall": [], "arrow.parser.DateTimeParser._TZ_ZZ_RE.search": [], "arrow.parser.DateTimeParser._TZ_NAME_RE.findall": [], "tests.test_parser.TestDateTimeParserRegex.test_timestamp": ["arrow.parser.DateTimeParser._TIMESTAMP_RE.findall"], "arrow.parser.DateTimeParser._TIMESTAMP_RE.findall": [], "tests.test_parser.TestDateTimeParserRegex.test_timestamp_milli": ["arrow.parser.DateTimeParser._TIMESTAMP_EXPANDED_RE.findall"], "arrow.parser.DateTimeParser._TIMESTAMP_EXPANDED_RE.findall": [], "tests.test_parser.TestDateTimeParserRegex.test_time": ["arrow.parser.DateTimeParser._TIME_RE.findall"], "arrow.parser.DateTimeParser._TIME_RE.findall": [], "tests.test_parser.TestDateTimeParserISO.test_YYYY": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_DDDD": ["pytest.raises", "datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_DDDD_HH_mm_ssZ": ["dateutil.tz.tzoffset", "dateutil.tz.tzutc", "datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DDDD": ["pytest.raises"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM": ["datetime.datetime", "arrow.parser.DateTimeParser.SEPARATORS.join"], "arrow.parser.DateTimeParser.SEPARATORS.join": [], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DD": ["datetime.datetime", "arrow.parser.DateTimeParser.SEPARATORS.join"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DDTHH_mmZ": ["dateutil.tz.tzoffset", "datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DDTHH_mm": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DDTHH": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DDTHHZ": ["dateutil.tz.tzoffset", "datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DDTHH_mm_ssZ": ["dateutil.tz.tzoffset", "datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DDTHH_mm_ss": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DD_HH_mmZ": ["dateutil.tz.tzoffset", "datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DD_HH_mm": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DD_HH": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_invalid_time": ["pytest.raises"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DD_HH_mm_ssZ": ["dateutil.tz.tzoffset", "datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DD_HH_mm_ss": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DDTHH_mm_ss_S": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_YYYY_MM_DDTHH_mm_ss_SZ": ["dateutil.tz.tzoffset", "dateutil.tz.tzutc", "datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_W": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_invalid_Z": ["pytest.raises"], "tests.test_parser.TestDateTimeParserISO.test_parse_subsecond": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_gnu_date": ["dateutil.tz.tzoffset", "datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_isoformat": ["datetime.datetime.utcnow"], "tests.test_parser.TestDateTimeParserISO.test_parse_iso_normalize_whitespace": ["dateutil.tz.tzutc", "pytest.raises", "datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_parse_iso_with_leading_and_trailing_whitespace": ["pytest.raises"], "tests.test_parser.TestDateTimeParserISO.test_parse_iso_with_extra_words_at_start_and_end_invalid": ["pytest.raises"], "tests.test_parser.TestDateTimeParserISO.test_iso8601_basic_format": ["dateutil.tz.tzoffset", "dateutil.tz.tzutc", "pytest.raises", "datetime.datetime"], "tests.test_parser.TestDateTimeParserISO.test_midnight_end_day": ["pytest.raises", "datetime.datetime"], "tests.test_parser.TestTzinfoParser.test_parse_local": ["dateutil.tz.tzlocal"], "tests.test_parser.TestTzinfoParser.test_parse_utc": ["dateutil.tz.tzutc"], "tests.test_parser.TestTzinfoParser.test_parse_utc_withoffset": ["dateutil.tz.tzoffset"], "tests.test_parser.TestTzinfoParser.test_parse_iso": ["dateutil.tz.tzoffset"], "tests.test_parser.TestTzinfoParser.test_parse_str": ["dateutil.tz.gettz"], "tests.test_parser.TestTzinfoParser.test_parse_fails": ["pytest.raises"], "tests.test_parser.TestDateTimeParserMonthName.test_shortmonth_capitalized": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserMonthName.test_shortmonth_allupper": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserMonthName.test_shortmonth_alllower": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserMonthName.test_month_capitalized": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserMonthName.test_month_allupper": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserMonthName.test_month_alllower": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserMonthName.test_localized_month_name": ["arrow.parser.DateTimeParser", "datetime.datetime"], "tests.test_parser.TestDateTimeParserMonthName.test_localized_month_abbreviation": ["arrow.parser.DateTimeParser", "datetime.datetime"], "tests.test_parser.TestDateTimeParserMeridians.test_meridians_lowercase": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserMeridians.test_meridians_capitalized": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserMeridians.test_localized_meridians_lowercase": ["arrow.parser.DateTimeParser", "datetime.datetime"], "tests.test_parser.TestDateTimeParserMeridians.test_localized_meridians_capitalized": ["arrow.parser.DateTimeParser", "datetime.datetime"], "tests.test_parser.TestDateTimeParserMeridians.test_es_meridians": ["pytest.raises", "arrow.parser.DateTimeParser", "datetime.datetime"], "tests.test_parser.TestDateTimeParserMeridians.test_fr_meridians": ["pytest.raises", "arrow.parser.DateTimeParser"], "tests.test_parser.TestDateTimeParserMonthOrdinalDay.test_english": ["pytest.raises", "arrow.parser.DateTimeParser", "datetime.datetime"], "tests.test_parser.TestDateTimeParserMonthOrdinalDay.test_italian": ["arrow.parser.DateTimeParser", "datetime.datetime"], "tests.test_parser.TestDateTimeParserMonthOrdinalDay.test_spanish": ["arrow.parser.DateTimeParser", "datetime.datetime"], "tests.test_parser.TestDateTimeParserMonthOrdinalDay.test_french": ["arrow.parser.DateTimeParser", "datetime.datetime"], "tests.test_parser.TestDateTimeParserSearchDate.test_parse_search": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserSearchDate.test_parse_search_with_numbers": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserSearchDate.test_parse_search_with_names": ["datetime.datetime"], "tests.test_parser.TestDateTimeParserSearchDate.test_parse_search_locale_with_names": ["arrow.parser.DateTimeParser", "datetime.datetime"], "tests.test_parser.TestDateTimeParserSearchDate.test_parse_search_fails": ["pytest.raises"], "tests.test_parser.TestDateTimeParserSearchDate.test_escape": ["datetime.datetime"], "tests.test_parser.TestFuzzInput.test_no_match_group": ["<builtin>.str", "pytest.raises"], "tests.test_parser.TestFuzzInput.test_regex_module_error": ["<builtin>.str", "pytest.raises"], "tests.test_api": [], "tests.test_api.TestModule.test_get": ["arrow.api.get"], "arrow.api.get": [], "tests.test_api.TestModule.test_utcnow": ["arrow.api.utcnow"], "arrow.api.utcnow": [], "tests.test_api.TestModule.test_now": ["arrow.api.now"], "arrow.api.now": [], "tests.test_api.TestModule.test_factory": ["<builtin>.isinstance", "arrow.api.factory"], "arrow.api.factory": [], "<builtin>.isinstance": []}
{"test.test_lowlevel": ["pytest.main", "<builtin>.len", "<builtin>.exec"], "test.test_lowlevel.test_detect_encoding_nocookie": ["<builtin>.iter", "pudb.lowlevel.detect_encoding"], "<builtin>.iter": [], "pudb.lowlevel.detect_encoding": [], "test.test_lowlevel.test_detect_encoding_cookie": ["<builtin>.iter", "pudb.lowlevel.detect_encoding"], "test.test_lowlevel.test_decode_lines": ["<builtin>.iter", "<builtin>.list", "pudb.lowlevel.decode_lines"], "pudb.lowlevel.decode_lines": [], "<builtin>.list": [], "test.test_lowlevel._remove_common_indentation": ["<builtin>.ValueError"], "<builtin>.ValueError": [], "test.test_lowlevel.test_executable_lines": ["test.test_lowlevel.test_executable_lines.get_exec_lines"], "test.test_lowlevel.test_executable_lines.get_exec_lines": ["<builtin>.compile", "test.test_lowlevel._remove_common_indentation", "pudb.lowlevel.get_executable_lines_for_codes_recursive"], "<builtin>.compile": [], "pudb.lowlevel.get_executable_lines_for_codes_recursive": [], "<builtin>.len": [], "<builtin>.exec": [], "pytest.main": [], "test.test_settings": [], "test.test_settings.test_load_breakpoints": ["pudb.settings.load_breakpoints"], "pudb.settings.load_breakpoints": [], "test.test_settings.test_save_breakpoints": ["pudb.settings.save_breakpoints", "collections.namedtuple"], "collections.namedtuple": [], "pudb.settings.save_breakpoints": [], "test.test_var_view": [], "test.test_var_view.test_get_stringifier": ["pudb.var_view.InspectInfo", "pudb.var_view.get_stringifier", "numpy.zeros", "numpy.float32", "<builtin>.isinstance"], "numpy.float32": [], "numpy.zeros": [], "pudb.var_view.InspectInfo": [], "pudb.var_view.get_stringifier": [], "<builtin>.isinstance": [], "test.test_var_view.FrameVarInfoForTesting.__init__": ["<builtin>.set", "<builtin>.super"], "<builtin>.super": [], "<builtin>.set": [], "test.test_var_view.FrameVarInfoForTesting.get_inspect_info": ["<builtin>.super"], "test.test_var_view.Reasonable.__init__": [], "test.test_var_view.Reasonable.bar": [], "test.test_var_view.Reasonable.red": [], "test.test_var_view.Reasonable.blue": [], "test.test_var_view.Reasonable.green": [], "test.test_var_view.Reasonable._private": [], "test.test_var_view.Reasonable.__magicsomething__": [], "test.test_var_view.method_factory": [], "test.test_var_view.method_factory.method": ["<builtin>.getattr", "<builtin>.isinstance"], "<builtin>.getattr": [], "test.test_var_view.generate_containerlike_class": ["itertools.combinations", "<builtin>.len", "<builtin>.sorted", "<builtin>.setattr", "<builtin>.range", "test.test_var_view.method_factory", "<builtin>.map"], "<builtin>.range": [], "itertools.combinations": [], "<builtin>.map": [], "<builtin>.sorted": [], "test.test_var_view.generate_containerlike_class.ContainerlikeClass.__init__": ["<builtin>.dict"], "<builtin>.dict": [], "test.test_var_view.generate_containerlike_class.ContainerlikeClass.name": [], "<builtin>.setattr": [], "test.test_var_view.BaseValueWalkerTestCase.setUp": [], "test.test_var_view.BaseValueWalkerTestCase.value_string": ["<builtin>.repr"], "<builtin>.repr": [], "test.test_var_view.BaseValueWalkerTestCase.walked_values": [], "test.test_var_view.BaseValueWalkerTestCase.expected_attrs": ["<builtin>.getattr", "<builtin>.sorted", "<builtin>.dir", "test.test_var_view.BaseValueWalkerTestCase.value_string", "<builtin>.str"], "<builtin>.str": [], "<builtin>.dir": [], "test.test_var_view.BaseValueWalkerTestCase": ["contextlib.contextmanager"], "contextlib.contextmanager": [], "test.test_var_view.BaseValueWalkerTestCase.patched_logging": [], "test.test_var_view.BaseValueWalkerTestCase.patched_logging.fake_exception_log": ["unittest.TestCase.fail"], "unittest.TestCase.fail": [], "test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents": ["pudb.var_view.BasicValueWalker", "test.test_var_view.FrameVarInfoForTesting.__init__", "<builtin>.enumerate", "test.test_var_view.BaseValueWalkerTestCase.patched_logging", "<builtin>.isinstance", "test.test_var_view.BaseValueWalkerTestCase.expected_attrs", "test.test_var_view.BaseValueWalkerTestCase.value_string", "<builtin>.repr", "test.test_var_view.BaseValueWalkerTestCase.walked_values", "unittest.TestCase.assertListEqual"], "pudb.var_view.BasicValueWalker": [], "<builtin>.enumerate": [], "unittest.TestCase.assertListEqual": [], "test.test_var_view.BaseValueWalkerTestCase.assert_class_counts_equal": ["unittest.TestCase.assertDictEqual"], "unittest.TestCase.assertDictEqual": [], "test.test_var_view.ValueWalkerTest.test_simple_values": ["pudb.var_view.BasicValueWalker", "test.test_var_view.FrameVarInfoForTesting.__init__", "<builtin>.complex", "<builtin>.float", "<builtin>.enumerate", "test.test_var_view.BaseValueWalkerTestCase.patched_logging", "<builtin>.repr", "test.test_var_view.BaseValueWalkerTestCase.walked_values", "unittest.TestCase.assertListEqual", "<builtin>.str"], "<builtin>.float": [], "<builtin>.complex": [], "test.test_var_view.ValueWalkerTest.test_simple_values_expandable": ["<builtin>.float", "<builtin>.complex", "test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents"], "test.test_var_view.ValueWalkerTest.test_set": ["test.test_var_view.BaseValueWalkerTestCase.assert_class_counts_equal", "test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents"], "test.test_var_view.ValueWalkerTest.test_frozenset": ["test.test_var_view.BaseValueWalkerTestCase.assert_class_counts_equal", "<builtin>.frozenset", "test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents"], "<builtin>.frozenset": [], "test.test_var_view.ValueWalkerTest.test_dict": ["test.test_var_view.BaseValueWalkerTestCase.assert_class_counts_equal", "<builtin>.range", "<builtin>.frozenset", "test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents"], "test.test_var_view.ValueWalkerTest.test_list": ["test.test_var_view.BaseValueWalkerTestCase.assert_class_counts_equal", "test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents"], "test.test_var_view.ValueWalkerTest.test_tuple": ["test.test_var_view.BaseValueWalkerTestCase.assert_class_counts_equal", "test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents"], "test.test_var_view.ValueWalkerTest.test_containerlike_classes": ["<builtin>.zip", "unittest.TestCase.assertEqual", "<builtin>.enumerate", "test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents", "test.test_var_view.BaseValueWalkerTestCase.assert_class_counts_equal", "<builtin>.range", "test.test_var_view.generate_containerlike_class"], "<builtin>.zip": [], "unittest.TestCase.assertEqual": [], "test.test_var_view.ValueWalkerTest.test_empty_frozenset": ["<builtin>.frozenset", "test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents"], "test.test_var_view.ValueWalkerTest.test_empty_set": ["<builtin>.set", "test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents"], "test.test_var_view.ValueWalkerTest.test_empty_dict": ["test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents"], "test.test_var_view.ValueWalkerTest.test_empty_list": ["test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents"], "test.test_var_view.ValueWalkerTest.test_reasonable_class": ["test.test_var_view.BaseValueWalkerTestCase.assert_class_counts_equal", "test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents"], "test.test_var_view.ValueWalkerTest.test_maybe_unreasonable_classes": ["test.test_var_view.BaseValueWalkerTestCase.assert_class_counts_equal", "test.test_var_view.generate_containerlike_class.ContainerlikeClass.name", "test.test_var_view.generate_containerlike_class", "test.test_var_view.BaseValueWalkerTestCase.assert_walks_contents"], "test": [], "test.test_make_canvas": ["pytest.main", "<builtin>.len", "<builtin>.exec"], "test.test_make_canvas.test_simple": ["pudb.ui_tools.make_canvas", "<builtin>.len", "<builtin>.list"], "pudb.ui_tools.make_canvas": [], "test.test_make_canvas.test_multiple": ["pudb.ui_tools.make_canvas", "<builtin>.list"], "test.test_make_canvas.test_boundary": ["pudb.ui_tools.make_canvas", "<builtin>.len", "<builtin>.list"], "test.test_make_canvas.test_byte_boundary": ["pudb.ui_tools.make_canvas", "<builtin>.len", "<builtin>.list"], "test.test_make_canvas.test_wide_chars": ["pudb.ui_tools.make_canvas", "<builtin>.list"], "test.test_run": ["pytest.mark.parametrize", "pytest.param", "test.test_run.csv"], "test.test_run.csv": [], "pytest.param": [], "pytest.mark.parametrize": [], "test.test_run.test_main_version": ["pudb.run.main", "pytest.raises"], "pytest.raises": [], "pudb.run.main": [], "test.test_run.test_main_v_with_args": ["pudb.run.main", "pytest.raises"], "test.test_source_code_providers": [], "test.test_source_code_providers.TestNullSourceCodeProvider.test_get_lines": ["<builtin>.len", "<builtin>.isinstance", "pudb.debugger.NullSourceCodeProvider"], "pudb.debugger.NullSourceCodeProvider": [], "test.test_source_code_providers.TestFileSourceCodeProvider.test_string_file_name": ["<builtin>.len", "pudb.debugger.FileSourceCodeProvider", "<builtin>.isinstance"], "pudb.debugger.FileSourceCodeProvider": [], "test.test_source_code_providers.TestFileSourceCodeProvider.test_get_lines": ["<builtin>.len", "pudb.debugger.FileSourceCodeProvider", "<builtin>.isinstance"], "test.test_source_code_providers.TestDirectSourceCodeProvider.test_get_lines": ["<builtin>.len", "pudb.debugger.DirectSourceCodeProvider", "<builtin>.isinstance"], "pudb.debugger.DirectSourceCodeProvider": []}
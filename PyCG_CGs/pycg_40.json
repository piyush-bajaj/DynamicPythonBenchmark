{"tests.test_config": [], "tests.test_config.test_custom_attachment_types": [], "tests.test_utils": ["pytest.mark.parametrize"], "tests.test_utils.test_join_path": ["lektor.utils.join_path"], "lektor.utils.join_path": [], "tests.test_utils.test_is_path_child_of": ["lektor.utils.is_path_child_of"], "lektor.utils.is_path_child_of": [], "tests.test_utils.test_magic_split_ext": ["lektor.utils.magic_split_ext"], "lektor.utils.magic_split_ext": [], "tests.test_utils.test_slugify": ["lektor.utils.slugify"], "lektor.utils.slugify": [], "tests.test_utils.test_url_builder": ["lektor.utils.build_url"], "lektor.utils.build_url": [], "tests.test_utils.test_parse_path": ["lektor.utils.parse_path"], "lektor.utils.parse_path": [], "pytest.mark.parametrize": [], "tests.test_utils.test_make_relative_url": ["lektor.utils.make_relative_url"], "lektor.utils.make_relative_url": [], "tests.test_utils.test_make_relative_url_relative_source_absolute_target": ["pytest.raises", "lektor.utils.make_relative_url"], "pytest.raises": [], "tests.test_utils.test_unique_everseen": ["lektor.utils.unique_everseen", "<builtin>.tuple"], "lektor.utils.unique_everseen": [], "<builtin>.tuple": [], "tests.test_devcli": ["pytest.mark.parametrize", "pytest.fixture"], "pytest.fixture": [], "tests.test_devcli.can_symlink": ["os.symlink"], "os.symlink": [], "tests.test_devcli.default_author": [], "tests.test_devcli.default_author_email": [], "tests.test_devcli.test_new_plugin": ["<builtin>.open", "os.listdir", "<builtin>.set", "textwrap.dedent", "os.path.join"], "os.path.join": [], "os.listdir": [], "<builtin>.set": [], "textwrap.dedent": [], "<builtin>.open": [], "tests.test_devcli.test_new_plugin_abort_plugin_exists": ["os.mkdir", "os.path.join"], "os.mkdir": [], "tests.test_devcli.test_new_plugin_abort_cancel": [], "tests.test_devcli.test_new_plugin_name_only": ["<builtin>.open", "os.listdir", "textwrap.dedent", "os.path.join"], "tests.test_devcli.test_new_plugin_name_param": ["os.listdir"], "tests.test_devcli.test_new_plugin_path": ["os.listdir", "<builtin>.set"], "tests.test_devcli.test_new_plugin_path_param": ["os.listdir", "<builtin>.set"], "tests.test_devcli.test_new_plugin_path_and_name_params": ["os.listdir", "<builtin>.set"], "tests.test_devcli.test_new_theme": ["<builtin>.open", "os.readlink", "os.listdir", "<builtin>.set", "inifile.IniFile", "os.path.join"], "os.readlink": [], "inifile.IniFile": [], "tests.test_devcli.test_new_theme_abort_theme_exists": ["os.mkdir", "os.path.join"], "tests.test_devcli.test_new_theme_abort_cancel": [], "tests.test_devcli.test_new_theme_name_only": ["<builtin>.open", "os.readlink", "os.listdir", "<builtin>.set", "inifile.IniFile", "os.path.join"], "tests.test_devcli.test_new_theme_name_param": ["os.listdir"], "tests.test_devcli.test_new_theme_path": ["os.listdir", "<builtin>.set"], "tests.test_devcli.test_new_theme_path_param": ["os.listdir", "<builtin>.set"], "tests.test_devcli.test_new_theme_path_and_name_params": ["os.listdir", "<builtin>.set"], "tests.test_devcli.test_new_theme_varying_names": ["os.listdir", "os.path.join"], "tests.test_watcher": [], "tests.test_watcher.IterateInThread.__init__": ["threading.Thread.start", "threading.Thread.__init__"], "threading.Thread.__init__": [], "threading.Thread.start": [], "tests.test_watcher.IterateInThread.run": [], "tests.test_watcher.IterateInThread.__next__": ["pytest.fail"], "pytest.fail": [], "tests.test_watcher.BrokenObserver.start": ["<builtin>.OSError"], "<builtin>.OSError": [], "tests.test_watcher.TestBasicWatcher": ["pytest.fixture"], "tests.test_watcher.TestBasicWatcher.paths": ["<builtin>.str"], "<builtin>.str": [], "tests.test_watcher.TestBasicWatcher.test_creates_observer": ["<builtin>.isinstance", "lektor.watcher.BasicWatcher"], "lektor.watcher.BasicWatcher": [], "<builtin>.isinstance": [], "tests.test_watcher.TestBasicWatcher.test_default_observer_broken": ["lektor.watcher.BasicWatcher"], "tests.test_watcher.TestBasicWatcher.test_default_observer_is_polling": ["pytest.raises", "lektor.watcher.BasicWatcher"], "tests.test_watcher.TestBasicWatcher.test_perverse_usage": ["<builtin>.isinstance", "lektor.watcher.BasicWatcher"], "tests.test_watcher.TestBasicWatcher.test_raises_error_if_started_twice": ["pytest.raises", "lektor.watcher.BasicWatcher"], "tests.test_watcher.TestBasicWatcher.test_iter": ["lektor.watcher.BasicWatcher", "<builtin>.str", "<builtin>.print", "tests.test_watcher.IterateInThread.__init__", "<builtin>.next"], "<builtin>.next": [], "<builtin>.print": [], "tests.test_watcher.test_is_interesting": ["lektor.utils.get_cache_dir", "functools.partial", "<builtin>.str", "py.path.local", "lektor.watcher.Watcher"], "lektor.utils.get_cache_dir": [], "py.path.local": [], "lektor.watcher.Watcher": [], "functools.partial": [], "tests.test_watcher.test_watch": ["tests.test_watcher.test_watch.events", "<builtin>.list", "lektor.watcher.watch"], "tests.test_watcher.test_watch.events": ["<builtin>.KeyboardInterrupt"], "<builtin>.KeyboardInterrupt": [], "lektor.watcher.watch": [], "<builtin>.list": [], "tests.test_datamodel": ["pytest.mark.parametrize", "pytest.fixture"], "tests.test_datamodel.slug_format": [], "tests.test_datamodel.datamodel": ["lektor.datamodel.DataModel", "lektor.datamodel.ChildConfig"], "lektor.datamodel.ChildConfig": [], "lektor.datamodel.DataModel": [], "tests.test_datamodel.test_PaginationConfig_init_raises_on_invalid_per_page": ["pytest.raises", "lektor.datamodel.PaginationConfig"], "lektor.datamodel.PaginationConfig": [], "tests.test_datamodel.test_get_default_child_slug": [], "tests.test_datamodel.test_get_default_child_slug_reports_failure": ["re.search", "lektor.reporter.BufferReporter"], "lektor.reporter.BufferReporter": [], "re.search": [], "tests.test_db": ["pytest.mark.parametrize", "pytest.mark.usefixtures", "pytest.fixture"], "tests.test_db.test_root": [], "tests.test_db.test_project_implied_model": [], "tests.test_db.test_child_query_visibility_setting": [], "tests.test_db.test_alt_fallback": ["lektor.db.get_alts"], "lektor.db.get_alts": [], "tests.test_db.test_alt_parent": [], "tests.test_db.test_url_matching_with_customized_slug_in_alt": ["lektor.db.get_alts"], "tests.test_db.test_resolve_url": [], "tests.test_db.test_resolve_url_hidden_page": [], "tests.test_db.test_resolve_url_asset": [], "tests.test_db.test_resolve_url_invalid_path": [], "tests.test_db.test_basic_alts": ["lektor.db.get_alts", "lektor.context.Context"], "lektor.context.Context": [], "tests.test_db.test_basic_query_syntax": ["<builtin>.len"], "<builtin>.len": [], "tests.test_db.test_basic_query_syntax_template": ["<builtin>.len"], "tests.test_db.test_is_child_of": [], "tests.test_db.test_undiscoverable_basics": [], "tests.test_db.test_attachment_api": ["<builtin>.len", "<builtin>.sorted", "<builtin>.isinstance"], "<builtin>.sorted": [], "tests.test_db.test_attachment_url_path_with_alt": [], "tests.test_db.test_query_normalization": [], "tests.test_db.test_distinct": ["<builtin>.isinstance", "<builtin>.set"], "tests.test_db.test_root_pagination": ["<builtin>.open", "os.mkdir", "os.path.join", "lektor.db.Database"], "lektor.db.Database": [], "tests.test_db.test_undefined_order": ["lektor.db.Query.order_by", "lektor.db.Query.__init__"], "tests.test_db.test_undefined_order.TestQuery._iterate": [], "lektor.db.Query.__init__": [], "lektor.db.Query.order_by": [], "tests.test_db.test_hidden_flag": [], "tests.test_db.test_default_order_by": ["<builtin>.open", "<builtin>.list", "lektor.db.Database", "os.mkdir", "os.path.join"], "tests.test_db.test_offset_without_limit_query": [], "tests.test_db.test_Pad_get_invalid_path": [], "tests.test_db.test_Database_iter_items_invalid_path": ["<builtin>.len", "<builtin>.list", "lektor.db.Database"], "tests.test_db.write_files": ["inspect.cleandoc"], "inspect.cleandoc": [], "tests.test_db.dotted_slug_test_records": ["tests.test_db.write_files"], "tests.test_db.primary_alt_is_prefixed": ["tests.test_db.write_files"], "tests.test_db.paginated_pages": ["tests.test_db.write_files"], "tests.test_db.dummy_attachment": ["tests.test_db.write_files"], "pytest.mark.usefixtures": [], "tests.test_db.test_Record_get_clean_url_path": [], "tests.test_db.test_Record_get_url_path_defaults_to_primary_alt": [], "tests.test_db.test_Page_url_path": [], "tests.test_db.test_Page_url_path_is_for_primary_alt": [], "tests.test_db.test_Page_url_path_raise_error_if_paginated_and_dotted": ["<builtin>.str", "pytest.raises", "re.match"], "re.match": [], "tests.test_db.test_Attachment_url_path_is_for_primary_alt": [], "tests.test_unicode": ["pytest.fixture"], "tests.test_unicode.pad": ["lektor.project.Project.from_path"], "lektor.project.Project.from_path": [], "tests.test_unicode.builder": ["<builtin>.str", "lektor.builder.Builder"], "lektor.builder.Builder": [], "tests.test_unicode.test_unicode_project_folder": [], "tests.test_unicode.test_unicode_attachment_filename": ["<builtin>.len", "lektor.reporter.BufferReporter"], "tests.test_unicode.test_bad_file_ignored": ["<builtin>.len", "lektor.reporter.BufferReporter"], "tests.test_editor": ["pytest.mark.parametrize", "pytest.fixture"], "tests.test_editor.test_make_editor_session": ["lektor.editor.make_editor_session"], "lektor.editor.make_editor_session": [], "tests.test_editor.test_make_editor_session_raises_bad_edit": ["<builtin>.str", "pytest.raises", "lektor.editor.make_editor_session"], "tests.test_editor.test_basic_editor": ["<builtin>.open"], "tests.test_editor.test_create_alt": ["<builtin>.open"], "tests.test_editor.original_data": [], "tests.test_editor.fallback_data": [], "tests.test_editor.editor_data": ["lektor.editor.MutableEditorData"], "lektor.editor.MutableEditorData": [], "tests.test_editor.test_editor_data_ischanged": [], "tests.test_editor.test_editor_data_getitem": ["pytest.raises"], "tests.test_editor.test_editor_data_setitem": ["pytest.raises"], "tests.test_editor.test_editor_data_setitem_possibly_implied_key": [], "tests.test_editor.test_editor_data_delitem": [], "tests.test_editor.test_editor_data_delitem_raises_keyerror": ["pytest.raises"], "tests.test_editor.test_revert_key": [], "tests.test_editor.test_editor_data_iter": ["<builtin>.list"], "tests.test_editor.test_editor_data_len": ["<builtin>.len"], "tests.test_editor.test_editor_data_keys": ["<builtin>.len", "<builtin>.list"], "tests.test_editor.test_editor_data_items": ["<builtin>.len", "<builtin>.list"], "tests.test_editor.test_editor_data_values": ["<builtin>.len", "<builtin>.list"], "tests.test_editor.test_deprecated_data_proxy_methods": ["pytest.deprecated_call", "lektor.editor.make_editor_session", "<builtin>.set", "<builtin>.len"], "pytest.deprecated_call": [], "tests.test_environment": ["pytest.fixture"], "tests.test_environment.compile_template": [], "tests.test_environment.compile_template.compile_template": ["pathlib.Path"], "pathlib.Path": [], "tests.test_environment.test_jinja2_feature_autoescape": ["html.unescape"], "html.unescape": [], "tests.test_environment.test_jinja2_feature_with": [], "tests.test_environment.test_jinja2_feature_do": [], "tests.test_environment.test_no_reference_cycle_in_environment": ["sys.getrefcount"], "sys.getrefcount": [], "tests.test_quickstart": ["pytest.mark.skipif", "lektor.utils.locate_executable", "pytest.mark.usefixtures", "pytest.fixture"], "tests.test_quickstart.git_config_file": ["<builtin>.str"], "pytest.mark.skipif": [], "tests.test_quickstart.test_default_author_from_pwd": ["typing.NamedTuple.__init__", "lektor.quickstart.get_default_author"], "typing.NamedTuple.__init__": [], "lektor.quickstart.get_default_author": [], "tests.test_quickstart.test_default_author_from_username": ["lektor.quickstart.get_default_author"], "lektor.utils.locate_executable": [], "tests.test_quickstart.test_default_author_email": ["lektor.quickstart.get_default_author_email"], "lektor.quickstart.get_default_author_email": [], "tests.test_quickstart.test_default_author_email_from_EMAIL": ["lektor.quickstart.get_default_author_email"], "tests.test_quickstart.test_default_author_email_no_default": ["lektor.quickstart.get_default_author_email"], "tests.test_videotools": ["pytest.mark.skipif", "lektor.utils.locate_executable", "pytest.mark.parametrize", "tests.test_videotools.require_ffmpeg"], "tests.test_videotools.test_get_timecode": ["lektor.videotools.get_timecode"], "lektor.videotools.get_timecode": [], "tests.test_videotools.test_get_ffmpeg_quality": ["lektor.videotools.get_ffmpeg_quality"], "lektor.videotools.get_ffmpeg_quality": [], "tests.test_videotools.test_get_ffmpeg_quality_bad_range": ["lektor.videotools.get_ffmpeg_quality", "pytest.raises"], "tests.test_videotools.test_dimensions_aspect_ratio": [], "tests.test_videotools.test_dimensions_fit_within": ["lektor.videotools.Dimensions"], "lektor.videotools.Dimensions": [], "tests.test_videotools.test_dimensions_cover": ["lektor.videotools.Dimensions"], "tests.test_videotools.test_dimensions_stretch": ["lektor.videotools.Dimensions"], "tests.test_videotools.test_dimensions_invalid_resize": ["pytest.raises", "lektor.videotools.Dimensions"], "tests.test_videotools.require_ffmpeg": [], "tests.test_videotools.test_metadata": ["datetime.timedelta"], "datetime.timedelta": [], "tests.test_videotools.test_thumbnail_height": ["<builtin>.open", "os.path.join"], "tests.test_pagination": ["pytest.mark.parametrize", "pytest.fixture"], "tests.test_pagination.test_paginated_children": ["<builtin>.len"], "tests.test_pagination.test_unpaginated_children": ["<builtin>.len"], "tests.test_pagination.test_pagination_access": [], "tests.test_pagination.test_pagination_attributes": [], "tests.test_pagination.test_url_matching_for_pagination": [], "tests.test_pagination.test_parent_access": [], "tests.test_pagination.test_pagination_url_paths": [], "tests.test_pagination.test_unpaginated_children_other_alt": ["<builtin>.len"], "tests.test_pagination.test_prev_next": [], "tests.test_pagination.test_url_matching_for_alt_pagination": [], "tests.test_pagination.test_pagination_items_filter": ["<builtin>.sorted"], "tests.test_pagination.test_virtual_path_behavior": [], "tests.test_pagination.pagination": [], "tests.test_pagination.test_iter_pages": ["<builtin>.list"], "tests.test_compat": ["pytest.mark.parametrize"], "tests.test_compat.test_ensure_tree_writeable": ["lektor.compat._ensure_tree_writeable", "os.access"], "lektor.compat._ensure_tree_writeable": [], "os.access": [], "tests.test_compat.test_TemporaryDirectory": ["pathlib.Path", "os.chmod", "os.path.exists"], "os.chmod": [], "os.path.exists": [], "tests.conftest": ["pytest.fixture"], "tests.conftest.data_path": ["pathlib.Path"], "tests.conftest.temporary_lektor_cache": ["_pytest.monkeypatch.MonkeyPatch"], "tests.conftest.temporary_lektor_cache.get_cache_dir": ["<builtin>.str"], "_pytest.monkeypatch.MonkeyPatch": [], "tests.conftest.save_sys_path": ["sys.modules.copy", "sys.path.copy", "importlib.invalidate_caches"], "sys.path.copy": [], "sys.modules.copy": [], "importlib.invalidate_caches": [], "tests.conftest.project": ["lektor.project.Project.from_path"], "tests.conftest.scratch_project_data": ["tests.conftest.scratch_project_data.write_text"], "tests.conftest.scratch_project_data.write_text": ["textwrap.dedent"], "tests.conftest.scratch_project": ["lektor.project.Project.from_path"], "tests.conftest.env": ["lektor.environment.Environment"], "lektor.environment.Environment": [], "tests.conftest.scratch_env": ["lektor.environment.Environment"], "tests.conftest.pad": ["lektor.db.Database"], "tests.conftest.scratch_pad": ["lektor.db.Database"], "tests.conftest.scratch_tree": ["lektor.db.Tree"], "lektor.db.Tree": [], "tests.conftest.builder": ["<builtin>.str", "lektor.builder.Builder"], "tests.conftest.scratch_builder": ["<builtin>.str", "lektor.builder.Builder"], "tests.conftest.child_sources_test_project_builder": ["<builtin>.str", "lektor.builder.Builder", "lektor.project.Project.from_path"], "tests.conftest.eval_expr": [], "tests.conftest.eval_expr.eval_expr": ["lektor.environment.expressions.Expression"], "lektor.environment.expressions.Expression": [], "tests.conftest.reporter": ["lektor.reporter.BufferReporter"], "tests.conftest.project_cli_runner": ["shutil.copytree", "os.listdir", "os.path.isdir", "shutil.copy2", "os.path.join"], "os.path.isdir": [], "shutil.copytree": [], "shutil.copy2": [], "tests.conftest.no_utils": ["lektor.utils.locate_executable.cache_clear"], "lektor.utils.locate_executable.cache_clear": [], "tests.test_images": ["markers.imagemagick", "pytest.fixture", "pytest.mark.skip"], "tests.test_images.almost_equal": ["<builtin>.abs"], "<builtin>.abs": [], "tests.test_images.make_svg": [], "tests.test_images.make_svg._make_svg": ["io.BytesIO"], "io.BytesIO": [], "tests.test_images.test_exif": ["<builtin>.getattr", "datetime.datetime", "tests.test_images.almost_equal", "<builtin>.isinstance"], "datetime.datetime": [], "<builtin>.getattr": [], "tests.test_images.test_image_attributes": [], "tests.test_images.test_is_rotated": ["<builtin>.open", "lektor.imagetools.is_rotated"], "lektor.imagetools.is_rotated": [], "tests.test_images.test_image_info_svg_declaration": ["lektor.imagetools.get_image_info"], "lektor.imagetools.get_image_info": [], "tests.test_images.test_image_info_svg_length": ["lektor.imagetools.get_image_info"], "tests.test_images.test_thumbnail_dimensions_reported": ["<builtin>.open", "os.path.join"], "markers.imagemagick": [], "tests.test_images.test_thumbnail_dimensions_real": ["<builtin>.open", "lektor.imagetools.get_image_info", "os.path.join"], "tests.test_images.test_thumbnails_similar": ["<builtin>.open", "<builtin>.len", "hashlib.md5", "<builtin>.range", "os.path.join"], "hashlib.md5": [], "<builtin>.range": [], "tests.test_images.test_thumbnails_differing": ["<builtin>.open", "<builtin>.len", "hashlib.md5", "<builtin>.range", "os.path.join"], "tests.test_images.test_thumbnail_quality": ["os.path.getsize", "os.path.join", "os.path.isfile"], "os.path.isfile": [], "os.path.getsize": [], "pytest.mark.skip": [], "tests.test_images.test_large_thumbnail_returns_original": ["<builtin>.open", "os.path.join"], "tests.test_images.test_dimensions": ["lektor.imagetools.compute_dimensions"], "lektor.imagetools.compute_dimensions": [], "tests.test_images.DummyContext.__init__": [], "tests.test_images.DummyContext.sub_artifact": [], "tests.test_images.DummyContext.sub_artifact.decorate": ["tests.test_images.DummyContext.add_sub_artifact"], "tests.test_images.DummyContext.add_sub_artifact": [], "tests.test_images.Test_make_image_thumbnail": ["pytest.mark.parametrize", "<builtin>.iter", "pytest.fixture"], "tests.test_images.Test_make_image_thumbnail.ctx": ["tests.test_images.DummyContext.__init__"], "tests.test_images.Test_make_image_thumbnail.test_jpg": ["os.path.join"], "tests.test_images.Test_make_image_thumbnail.svg_image": ["<builtin>.str"], "tests.test_images.Test_make_image_thumbnail.source_url_path": [], "tests.test_images.Test_make_image_thumbnail.test_no_width_or_height": ["pytest.raises", "lektor.imagetools.make_image_thumbnail", "<builtin>.len"], "lektor.imagetools.make_image_thumbnail": [], "tests.test_images.Test_make_image_thumbnail.test_warn_fallback_to_fit": ["pytest.warns", "<builtin>.len", "lektor.imagetools.make_image_thumbnail"], "pytest.warns": [], "tests.test_images.Test_make_image_thumbnail.test_unknown_image_format": ["pytest.raises", "lektor.imagetools.make_image_thumbnail", "<builtin>.len", "os.path.join"], "tests.test_images.Test_make_image_thumbnail.test_svg": ["<builtin>.len", "lektor.imagetools.make_image_thumbnail"], "tests.test_images.Test_make_image_thumbnail.test_scale": ["warnings.simplefilter", "<builtin>.len", "lektor.imagetools.make_image_thumbnail"], "warnings.simplefilter": [], "tests.test_images.Test_make_image_thumbnail.test_no_implicit_upscale": ["<builtin>.len", "lektor.imagetools.make_image_thumbnail"], "<builtin>.iter": [], "tests.test_images.Test_make_image_thumbnail.test_upscale_false": ["<builtin>.len", "lektor.imagetools.make_image_thumbnail"], "tests.test_pluginsystem": ["pytest.mark.parametrize", "pytest.mark.usefixtures", "pytest.fixture"], "tests.test_pluginsystem.DummyPlugin.__getattr__": ["<builtin>.AttributeError"], "<builtin>.AttributeError": [], "tests.test_pluginsystem.DummyPlugin.__getattr__.hook": [], "tests.test_pluginsystem.DummyPlugin.on_legacy_event": [], "tests.test_pluginsystem.DummyPlugin.on_one_type_error": ["<builtin>.len", "<builtin>.TypeError"], "<builtin>.TypeError": [], "tests.test_pluginsystem.dummy_plugin_calls": [], "tests.test_pluginsystem.DummyDistribution": ["inspect.cleandoc"], "tests.test_pluginsystem.DummyDistribution.__init__": [], "tests.test_pluginsystem.DummyDistribution.read_text": [], "tests.test_pluginsystem.DummyDistribution.locate_file": [], "tests.test_pluginsystem.DummyPluginLoader.create_module": [], "tests.test_pluginsystem.DummyPluginLoader.exec_module": ["<builtin>.setattr"], "<builtin>.setattr": [], "tests.test_pluginsystem.DummyPluginFinder.__init__": [], "tests.test_pluginsystem.DummyPluginFinder.find_spec": ["importlib.abc.Loader.__init__", "importlib.machinery.ModuleSpec"], "importlib.abc.Loader.__init__": [], "importlib.machinery.ModuleSpec": [], "tests.test_pluginsystem.DummyPluginFinder.find_distributions": [], "tests.test_pluginsystem.dummy_plugin_distribution": ["tests.test_pluginsystem.DummyPluginFinder.__init__", "tests.test_pluginsystem.DummyDistribution.__init__"], "tests.test_pluginsystem.dummy_plugin": [], "tests.test_pluginsystem.test_get_plugin": ["lektor.pluginsystem.get_plugin"], "lektor.pluginsystem.get_plugin": [], "tests.test_pluginsystem.test_get_plugin_from_context": ["lektor.pluginsystem.get_plugin", "lektor.context.Context"], "tests.test_pluginsystem.test_get_plugin_missing": ["pytest.raises", "lektor.pluginsystem.get_plugin"], "tests.test_pluginsystem.test_get_plugin_no_env_or_ctx": ["pytest.raises", "lektor.pluginsystem.get_plugin"], "tests.test_pluginsystem.TestPlugin": ["pytest.mark.usefixtures", "pytest.mark.requiresinternet", "pytest.fixture"], "tests.test_pluginsystem.TestPlugin.scratch_project_data": [], "tests.test_pluginsystem.TestPlugin.scratch_plugin": [], "tests.test_pluginsystem.TestPlugin.test_env": [], "tests.test_pluginsystem.TestPlugin.test_env_went_away": ["pytest.raises", "lektor.pluginsystem.Plugin.__init__", "unittest.mock.Mock", "<builtin>.getattr"], "unittest.mock.Mock": [], "lektor.pluginsystem.Plugin.__init__": [], "tests.test_pluginsystem.TestPlugin.test_version": [], "tests.test_pluginsystem.TestPlugin.test_version_missing": [], "tests.test_pluginsystem.TestPlugin.test_path": ["pathlib.Path", "<builtin>.str"], "pytest.mark.requiresinternet": [], "tests.test_pluginsystem.TestPlugin.test_path_installed_plugin_is_none": ["lektor.packages.add_package_to_project", "lektor.pluginsystem.get_plugin"], "lektor.packages.add_package_to_project": [], "tests.test_pluginsystem.TestPlugin.test_import_name": [], "tests.test_pluginsystem.TestPlugin.test_get_lektor_config": [], "tests.test_pluginsystem.TestPlugin.test_get_lektor_config_from_context": ["lektor.context.Context"], "tests.test_pluginsystem.TestPlugin.test_config_filename": ["pathlib.Path", "<builtin>.str"], "tests.test_pluginsystem.TestPlugin.test_get_config": [], "tests.test_pluginsystem.TestPlugin.test_get_config_records_dependency": ["lektor.context.Context"], "tests.test_pluginsystem.TestPlugin.test_get_config_returns_cached_value": ["lektor.context.Context"], "tests.test_pluginsystem.TestPlugin.test_get_config_fresh": ["lektor.context.Context"], "tests.test_pluginsystem.TestPlugin.test_emit": [], "tests.test_pluginsystem.TestPlugin.test_to_json": ["pathlib.Path", "<builtin>.str"], "tests.test_pluginsystem.test_find_plugins": ["lektor.pluginsystem._find_plugins", "<builtin>.list"], "lektor.pluginsystem._find_plugins": [], "tests.test_pluginsystem.test_check_dist_name": ["lektor.pluginsystem._check_dist_name"], "lektor.pluginsystem._check_dist_name": [], "tests.test_pluginsystem.test_check_dist_name_raises": ["pytest.raises", "lektor.pluginsystem._check_dist_name"], "tests.test_pluginsystem.TestPluginController": ["pytest.fixture"], "tests.test_pluginsystem.TestPluginController.extra_flags": [], "tests.test_pluginsystem.TestPluginController.plugin_controller": ["lektor.pluginsystem.PluginController"], "lektor.pluginsystem.PluginController": [], "tests.test_pluginsystem.TestPluginController.test_env": [], "tests.test_pluginsystem.TestPluginController.test_env_went_away": ["pytest.raises", "unittest.mock.Mock", "lektor.pluginsystem.PluginController", "<builtin>.getattr"], "tests.test_pluginsystem.TestPluginController.test_instantiate_plugin": ["<builtin>.isinstance"], "tests.test_pluginsystem.TestPluginController.test_instantiate_plugin_error": ["pytest.raises"], "tests.test_pluginsystem.TestPluginController.test_iter_plugins": ["<builtin>.list"], "tests.test_pluginsystem.TestPluginController.test_emit": [], "tests.test_pluginsystem.TestPluginController.test_emit_with_kwargs": [], "tests.test_pluginsystem.TestPluginController.test_emit_deprecation_warning": ["pytest.deprecated_call"], "tests.test_pluginsystem.TestPluginController.test_emit_is_not_confused_by_type_error": ["pytest.raises"], "tests.test_pluginsystem.test_cli_integration": ["<builtin>.print"], "tests.test_types": ["pytest.mark.parametrize"], "tests.test_types.DummySource.url_to": [], "tests.test_types.make_field": ["lektor.datamodel.Field"], "lektor.datamodel.Field": [], "tests.test_types.test_markdown": ["markupsafe.escape", "tests.test_types.make_field", "<builtin>.isinstance", "markupsafe.Markup", "lektor.context.Context"], "markupsafe.escape": [], "markupsafe.Markup": [], "tests.test_types.test_markdown_links": ["lektor.context.Context", "re.match", "tests.test_types.test_markdown_links.md", "tests.test_types.make_field"], "tests.test_types.test_markdown_links.md": ["<builtin>.str", "<builtin>.isinstance"], "tests.test_types.test_markdown_linking": [], "tests.test_types.test_markdown_images": ["re.search"], "tests.test_types.test_markdown_warns_on_invalid_options": ["pytest.warns", "<builtin>.str", "tests.test_types.make_field"], "tests.test_types.test_markdown_does_not_warn_on_valid_options": ["warnings.simplefilter", "warnings.catch_warnings", "tests.test_types.make_field"], "warnings.catch_warnings": [], "tests.test_types.test_string": ["lektor.context.Context", "<builtin>.isinstance", "tests.test_types.make_field"], "tests.test_types.test_text": ["lektor.context.Context", "<builtin>.isinstance", "tests.test_types.make_field"], "tests.test_types.test_integer": ["lektor.context.Context", "<builtin>.isinstance", "tests.test_types.make_field"], "tests.test_types.test_float": ["lektor.context.Context", "<builtin>.isinstance", "tests.test_types.make_field"], "tests.test_types.test_boolean": ["lektor.context.Context", "<builtin>.isinstance", "tests.test_types.make_field"], "tests.test_types.test_datetime": ["lektor.context.Context", "<builtin>.isinstance", "tests.test_types.make_field"], "tests.test_types.test_datetime_timezone_utc": ["lektor.context.Context", "babel.dates.get_timezone", "<builtin>.isinstance", "tests.test_types.make_field"], "babel.dates.get_timezone": [], "tests.test_types.test_datetime_timezone_est": ["lektor.context.Context", "babel.dates.get_timezone", "<builtin>.isinstance", "tests.test_types.make_field"], "tests.test_types.test_datetime_timezone_location": ["lektor.context.Context", "babel.dates.get_timezone", "<builtin>.isinstance", "tests.test_types.make_field"], "tests.test_types.test_datetime_timezone_kst": ["lektor.context.Context", "<builtin>.isinstance", "datetime.timedelta", "tests.test_types.make_field"], "tests.test_types.test_datetime_timezone_acst": ["lektor.context.Context", "<builtin>.isinstance", "datetime.timedelta", "tests.test_types.make_field"], "tests.test_types.test_datetime_timezone_mst": ["lektor.context.Context", "<builtin>.isinstance", "datetime.timedelta", "tests.test_types.make_field"], "tests.test_types.test_datetime_timezone_mart": ["lektor.context.Context", "<builtin>.isinstance", "datetime.timedelta", "tests.test_types.make_field"], "tests.test_types.test_datetime_timezone_name": ["lektor.context.Context", "<builtin>.isinstance", "datetime.timedelta", "tests.test_types.make_field"], "tests.admin.test_serve": ["pytest.mark.parametrize", "pytest.mark.usefixtures", "pytest.fixture"], "tests.admin.test_serve.dummy_app": ["flask.Flask"], "flask.Flask": [], "tests.admin.test_serve.dummy_app_context": [], "tests.admin.test_serve.test_rewrite_html_for_editing": ["lektor.admin.modules.serve._rewrite_html_for_editing"], "lektor.admin.modules.serve._rewrite_html_for_editing": [], "tests.admin.test_serve.test_rewrite_html_for_editing_adds_livereload": ["lektor.admin.modules.serve._rewrite_html_for_editing"], "tests.admin.test_serve.make_dummy_artifact": [], "tests.admin.test_serve.make_dummy_artifact.make_dummy_artifact": ["<builtin>.str", "lektor.builder.Artifact"], "lektor.builder.Artifact": [], "tests.admin.test_serve.test_send_html_for_editing": ["lektor.admin.modules.serve._send_html_for_editing"], "lektor.admin.modules.serve._send_html_for_editing": [], "tests.admin.test_serve.test_send_html_for_editing_etag_depends_on_edit_url": ["lektor.admin.modules.serve._send_html_for_editing"], "tests.admin.test_serve.test_send_html_for_editing_etag_depends_on_artifact_name": ["lektor.admin.modules.serve._send_html_for_editing"], "tests.admin.test_serve.test_send_html_for_editing_raises_404": ["pytest.raises", "lektor.admin.modules.serve._send_html_for_editing"], "tests.admin.test_serve.test_deduce_mimetype": ["lektor.admin.modules.serve._deduce_mimetype"], "lektor.admin.modules.serve._deduce_mimetype": [], "tests.admin.test_serve.test_checked_send_file": ["lektor.admin.modules.serve._checked_send_file"], "lektor.admin.modules.serve._checked_send_file": [], "tests.admin.test_serve.test_checked_send_file_raises_404": ["lektor.admin.modules.serve._checked_send_file", "pytest.raises"], "tests.admin.test_serve.write_text": ["inspect.cleandoc"], "tests.admin.test_serve.project_path": ["tests.admin.test_serve.write_text", "shutil.copytree"], "tests.admin.test_serve.output_path": [], "tests.admin.test_serve.flag": [], "tests.admin.test_serve.app": ["lektor.project.Project.from_path", "lektor.admin.webui.LektorApp", "lektor.environment.Environment", "lektor.admin.webui.LektorInfo"], "lektor.admin.webui.LektorInfo": [], "lektor.admin.webui.LektorApp": [], "tests.admin.test_serve.TestArtifactServer": ["pytest.mark.parametrize", "pytest.fixture"], "tests.admin.test_serve.TestArtifactServer.a_s": ["lektor.admin.modules.serve.ArtifactServer", "lektor.admin.context.LektorContext._make"], "lektor.admin.context.LektorContext._make": [], "lektor.admin.modules.serve.ArtifactServer": [], "tests.admin.test_serve.TestArtifactServer.pad": [], "tests.admin.test_serve.TestArtifactServer.failure_controller": ["lektor.buildfailures.FailureController"], "lektor.buildfailures.FailureController": [], "tests.admin.test_serve.TestArtifactServer.failed_artifact": ["sys.exc_info", "<builtin>.RuntimeError"], "<builtin>.RuntimeError": [], "sys.exc_info": [], "tests.admin.test_serve.TestArtifactServer.test_resolve_url_path": ["<builtin>.isinstance"], "tests.admin.test_serve.TestArtifactServer.test_resolve_url_path_to_asset": ["pathlib.Path", "<builtin>.isinstance"], "tests.admin.test_serve.TestArtifactServer.test_resolve_url_path_raises_404": ["pytest.raises"], "tests.admin.test_serve.TestArtifactServer.test_resolve_directory_index": [], "tests.admin.test_serve.TestArtifactServer.test_resolve_directory_index_raises_404": ["pytest.raises"], "tests.admin.test_serve.TestArtifactServer.test_build_primary_artifact": ["pytest.raises"], "tests.admin.test_serve.TestArtifactServer.test_build_primary_artifact_raises_404": ["pytest.raises"], "tests.admin.test_serve.TestArtifactServer.test_handle_build_failure": [], "tests.admin.test_serve.TestArtifactServer.test_get_edit_url": ["<builtin>.set", "urllib.parse.parse_qsl", "urllib.parse.urlparse"], "urllib.parse.urlparse": [], "urllib.parse.parse_qsl": [], "tests.admin.test_serve.TestArtifactServer.test_serve_artifact_adds_slash": [], "tests.admin.test_serve.TestArtifactServer.test_serve_artifact_serves_artifact": [], "tests.admin.test_serve.TestArtifactServer.test_serve_artifact_raises_404": ["pytest.raises"], "tests.admin.test_serve.test_serve_artifact": ["lektor.admin.modules.serve.serve_artifact"], "lektor.admin.modules.serve.serve_artifact": [], "tests.admin.test_serve.test_serve_file": ["lektor.admin.modules.serve.serve_file"], "lektor.admin.modules.serve.serve_file": [], "tests.admin.test_serve.test_serve_file_with_relative_output_path": ["os.chdir", "tests.admin.test_serve.test_serve_file", "os.getcwd"], "os.getcwd": [], "os.chdir": [], "tests.admin.test_serve.test_serve_file_dir_handling": ["lektor.admin.modules.serve.serve_file"], "tests.admin.test_serve.test_serve_file_raises_404": ["pytest.raises", "lektor.admin.modules.serve.serve_file"], "tests.admin.test_serve.test_serve": [], "tests.admin.test_serve.test_serve_from_file": [], "tests.admin.test_serve.test_serve_add_slash_redirect_integration": ["urllib.parse.urljoin"], "urllib.parse.urljoin": [], "tests.admin.test_serve.scratch_app": ["lektor.admin.webui.LektorApp", "lektor.admin.webui.LektorInfo"], "tests.admin.test_serve.test_serve_custom_404": [], "tests.admin.test_webui": ["pytest.mark.parametrize", "pytest.mark.usefixtures", "pytest.fixture"], "tests.admin.test_webui.output_path": [], "tests.admin.test_webui.test_client": [], "tests.admin.test_webui.app_static_dummy_txt": ["pathlib.Path", "os.remove"], "os.remove": [], "tests.admin.test_webui.test_get": [], "tests.admin.test_webui.test_get_admin_does_something_useful": [], "tests.admin.test_dash": ["pytest.mark.parametrize", "pytest.fixture"], "tests.admin.test_dash.app": ["lektor.admin.webui.make_app"], "lektor.admin.webui.make_app": [], "tests.admin.test_dash.app.prefixed_app": ["wsgiref.util.shift_path_info", "werkzeug.exceptions.NotFound"], "wsgiref.util.shift_path_info": [], "werkzeug.exceptions.NotFound": [], "tests.admin.test_dash.test_dash": ["werkzeug.test.Client"], "werkzeug.test.Client": [], "tests.admin.test_api": ["pytest.mark.xfail", "pytest.mark.parametrize", "pytest.fixture"], "tests.admin.test_api.write_text": ["inspect.cleandoc"], "tests.admin.test_api.scratch_project_data": ["tests.admin.test_api.write_text"], "tests.admin.test_api.scratch_client": ["lektor.admin.WebAdmin"], "lektor.admin.WebAdmin": [], "tests.admin.test_api.scratch_content_path": ["pathlib.Path"], "tests.admin.test_api.project_path": [], "tests.admin.test_api.webadmin": ["lektor.db.Database", "lektor.admin.WebAdmin", "lektor.builder.Builder", "lektor.environment.Environment", "lektor.project.Project.from_path"], "tests.admin.test_api.test_client": [], "tests.admin.test_api.test_recordinfo_children_sort_limited_alts": ["<builtin>.list", "<builtin>.sorted", "operator.itemgetter"], "operator.itemgetter": [], "tests.admin.test_api.test_eventstream_yield_bytes": ["<builtin>.isinstance", "lektor.admin.utils.eventstream", "tests.admin.test_api.test_eventstream_yield_bytes.testfunc"], "lektor.admin.utils.eventstream": [], "tests.admin.test_api.test_eventstream_yield_bytes.testfunc": [], "tests.admin.test_api.test_invalid_params": ["urllib.parse.urlencode", "<builtin>.set"], "urllib.parse.urlencode": [], "tests.admin.test_api.test_recordinfo": ["<builtin>.any"], "<builtin>.any": [], "tests.admin.test_api.test_delete_field": [], "tests.admin.test_api.test_get_path_info": [], "tests.admin.test_api.test_previewinfo": ["urllib.parse.urlencode"], "tests.admin.test_api.test_find": ["<builtin>.len", "urllib.parse.urlencode", "<builtin>.any"], "tests.admin.test_api.test_browsefs": ["<builtin>.str"], "tests.admin.test_api.test_get_new_record_info": ["urllib.parse.urlencode", "<builtin>.bool"], "<builtin>.bool": [], "tests.admin.test_api.test_get_new_attachment_info": ["urllib.parse.urlencode", "<builtin>.bool"], "tests.admin.test_api.test_upload_new_attachment": ["io.BytesIO"], "tests.admin.test_api.test_upload_new_attachment_failure": ["io.BytesIO"], "tests.admin.test_api.test_add_new_record": [], "tests.admin.test_api.test_delete_record": [], "tests.admin.test_api.test_match_url": ["urllib.parse.urlencode"], "tests.admin.test_api.test_get_raw_records": [], "tests.admin.test_api.test_servers": ["<builtin>.any"], "tests.admin.test_api.test_build": [], "tests.admin.test_api.test_clean": [], "pytest.mark.xfail": [], "tests.admin.test_api.test_publish_requires_post": [], "tests.admin.test_api.test_publish": ["<builtin>.list"], "tests.admin.test_api.test_publish.dummy_publish": ["lektor.publisher.PublishError"], "lektor.publisher.PublishError": [], "tests.admin.test_api.test_publish_bad_params": ["urllib.parse.urlencode"], "tests.admin.test_api.test_ping": [], "tests.admin.test_api.test_missing_files": [], "tests.admin.test_api.test_allowed_methods": ["<builtin>.set"], "tests.test_issue_410": ["pytest.fixture"], "tests.test_issue_410.scratch_project_data": [], "tests.test_issue_410.test_build_childless_page": ["os.path.join", "os.path.exists"], "tests.test_builder": ["pytest.mark.parametrize", "markers.imagemagick"], "tests.test_builder.get_child_sources": ["<builtin>.list", "<builtin>.sorted"], "tests.test_builder.get_child_sources.<lambda1>": [], "tests.test_builder.test_basic_build": ["<builtin>.set"], "tests.test_builder.test_child_sources_basic": ["tests.test_builder.get_child_sources"], "tests.test_builder.test_child_sources_pagination": ["tests.test_builder.get_child_sources", "tests.test_builder.test_child_sources_pagination.ids"], "tests.test_builder.test_child_sources_pagination.ids": [], "tests.test_builder.test_basic_artifact_current_test": ["tests.test_builder.test_basic_artifact_current_test.build", "<builtin>.set"], "tests.test_builder.test_basic_artifact_current_test.build": [], "tests.test_builder.test_basic_template_rendering": [], "tests.test_builder.test_attachment_copying": [], "tests.test_builder.test_asset_processing": ["<builtin>.len", "<builtin>.list"], "tests.test_builder.test_included_assets": ["<builtin>.list"], "tests.test_builder.test_excluded_assets": ["<builtin>.list"], "tests.test_builder.test_iter_child_pages": [], "tests.test_builder.test_iter_child_attachments": [], "tests.test_builder.test_iter_children_of_hidden_pages": [], "tests.test_builder.test_record_is_file": [], "tests.test_builder.test_slug_contains_slash": [], "tests.test_builder.test_asseturl_dependency_tracking_integration": ["pathlib.Path", "<builtin>.len"], "tests.test_builder.test_prune_remove_artifacts_of_hidden_pages": ["pathlib.Path"], "tests.test_builder.test_prune_all": ["pathlib.Path"], "tests.test_themes": ["pytest.mark.parametrize", "pytest.fixture"], "tests.test_themes.theme_project_tmpdir": ["shutil.copytree"], "tests.test_themes.theme_project": ["textwrap.dedent", "lektor.project.Project.from_path"], "tests.test_themes.theme_env": ["lektor.environment.Environment"], "tests.test_themes.theme_pad": ["lektor.db.Database"], "tests.test_themes.theme_builder": ["<builtin>.str", "lektor.builder.Builder"], "tests.test_themes.test_loading_theme_variable": [], "tests.test_themes.test_loading_theme_path": ["os.path.basename"], "os.path.basename": [], "tests.test_themes.test_loading_theme_path_variable_dont_set": ["<builtin>.len", "os.path.basename"], "tests.test_themes.test_theme_asset_loading": [], "tests.test_themes.test_theme_models_loading": [], "tests.test_themes.test_theme_templates_loading": [], "tests.test_imports": ["lektor.markdown.MISTUNE_VERSION.startswith", "<builtin>.set", "pytest.fixture", "tests.test_imports.iter_lektor_modules"], "lektor.markdown.MISTUNE_VERSION.startswith": [], "tests.test_imports.iter_lektor_modules": ["pkgutil.walk_packages"], "pkgutil.walk_packages": [], "tests.test_imports.module": [], "tests.test_imports.test_import": ["subprocess.run"], "subprocess.run": [], "tests.test_cli": ["pytest.mark.parametrize", "markers.imagemagick"], "tests.test_cli.test_build_abort_in_existing_nonempty_dir": ["<builtin>.open", "os.mkdir"], "tests.test_cli.test_build_continue_in_existing_nonempty_dir": ["<builtin>.open", "os.mkdir"], "tests.test_cli.test_alias": [], "tests.test_cli.test_dev_cmd_alias": [], "tests.test_cli.test_alias_multiple_matches": [], "tests.test_cli.test_alias_no_matches": [], "tests.test_cli.test_build_no_project": [], "tests.test_cli.test_build": ["<builtin>.len", "re.findall"], "re.findall": [], "tests.test_cli.test_build_extra_flag": [], "tests.test_cli.test_deploy_extra_flag": [], "tests.test_cli.test_project_info_path_flags": ["lektor.project.Project.from_path", "os.getcwd"], "tests.test_buildfailures": ["pytest.fixture"], "tests.test_buildfailures.output_path": [], "tests.test_buildfailures.failure_controller": ["lektor.buildfailures.FailureController"], "tests.test_buildfailures.test_BuildFailure_from_exc_info": ["re.search", "sys.exc_info", "lektor.buildfailures.BuildFailure.from_exc_info", "<builtin>.print", "tests.test_buildfailures.test_BuildFailure_from_exc_info.throw_exception"], "tests.test_buildfailures.test_BuildFailure_from_exc_info.throw_exception": ["<builtin>.RuntimeError"], "lektor.buildfailures.BuildFailure.from_exc_info": [], "tests.test_buildfailures.test_failure_controller": ["sys.exc_info", "<builtin>.RuntimeError"], "tests.test_buildfailures.test_failure_controller_clear_lookup_missing": [], "tests.test_buildfailures.test_failure_controller_clear_missing": [], "tests.test_buildfailures.test_failure_controller_fs_exceptions": ["pytest.raises", "os.makedirs", "sys.exc_info"], "os.makedirs": [], "tests.test_i18n": [], "tests.test_i18n.test_loading_i18n_triggers_no_warnings": ["<builtin>.print", "<builtin>.len", "importlib.reload"], "importlib.reload": [], "tests.test_tree": ["pytest.mark.parametrize", "pytest.fixture"], "tests.test_tree.no_alt_pad": ["re.sub", "shutil.copytree", "lektor.project.Project.from_path"], "re.sub": [], "tests.test_tree.disable_alternatives": [], "tests.test_tree.tree": ["lektor.db.Tree"], "tests.test_tree.test_tree_item_id": [], "tests.test_tree.test_tree_item_exists": [], "tests.test_tree.test_tree_item_can_be_deleted": [], "tests.test_tree.test_tree_item_is_visible": [], "tests.test_tree.test_tree_item_is_attachment": [], "tests.test_tree.test_tree_item_can_have_children": [], "tests.test_tree.test_tree_item_get_record_label_i18n": [], "tests.test_tree.test_tree_implied_child_datamodel": [], "tests.test_tree.test_get_parent": [], "tests.test_tree.test_get": [], "tests.test_tree.test_tree_item_get_children": ["<builtin>.list"], "tests.test_tree.test_tree_item_iter_subpages": ["<builtin>.list"], "tests.test_tree.test_tree_item_iter_attachments": ["<builtin>.list"], "tests.test_tree.test_tree_item_get_order_by": [], "tests.test_tree.test_tree_item_repr": ["<builtin>.repr"], "<builtin>.repr": [], "tests.test_tree.test_tree_item_alts": ["<builtin>.set"], "tests.test_tree.test_alt_exists": [], "tests.test_tree.test_alt_is_primary_overlay": [], "tests.test_tree.test_alt_name_i18n": [], "tests.test_tree.test_alt_repr": ["<builtin>.repr"], "tests.test_tree.write_text": ["inspect.cleandoc"], "tests.test_tree.order_by": [], "tests.test_tree.order_attachments_by": [], "tests.test_tree.scratch_project_data": ["tests.test_tree.write_text", "<builtin>.range"], "tests.test_tree.scratch_tree": ["lektor.db.Tree"], "tests.test_tree.test_child_sorting": [], "tests.test_tree.test_attachment_sorting": [], "tests.test_publisher": ["lektor.utils.locate_executable", "shutil.which", "pytest.mark.parametrize", "pytest.fixture", "pytest.mark.skipif", "pytest.mark.usefixtures"], "tests.test_publisher.test_ssh_key_file": ["lektor.publisher._ssh_key_file"], "lektor.publisher._ssh_key_file": [], "tests.test_publisher.test_ssh_key_file_returns_none": ["lektor.publisher._ssh_key_file"], "tests.test_publisher.test_ssh_key_file_creates_key": ["pathlib.Path", "lektor.publisher._ssh_key_file"], "tests.test_publisher.test_ssh_command": ["lektor.publisher._ssh_command"], "lektor.publisher._ssh_command": [], "tests.test_publisher._pyscript": [], "tests.test_publisher.test_Command_capture": ["tests.test_publisher.test_Command_capture.iter_output", "tests.test_publisher._pyscript", "<builtin>.list", "lektor.publisher.Command"], "lektor.publisher.Command": [], "tests.test_publisher.test_Command_capture.iter_output": [], "tests.test_publisher.test_Command_env": ["tests.test_publisher._pyscript", "<builtin>.list", "lektor.publisher.Command"], "tests.test_publisher.test_Command_raises_CalledProcessError": ["tests.test_publisher._pyscript", "<builtin>.list", "lektor.publisher.Command", "tests.test_publisher.test_Command_raises_CalledProcessError.iter_output"], "tests.test_publisher.test_Command_raises_CalledProcessError.iter_output": ["pytest.raises"], "tests.test_publisher.test_Command_no_capture": ["tests.test_publisher._pyscript", "lektor.publisher.Command", "<builtin>.tuple"], "tests.test_publisher.test_Command_iter_raises_if_not_capturing": ["pytest.raises", "tests.test_publisher._pyscript", "lektor.publisher.Command", "<builtin>.iter", "<builtin>.str", "<builtin>.next"], "tests.test_publisher.test_Command_handles_keyboard_interrupt": ["pytest.raises", "<builtin>.list", "lektor.publisher.Command", "os.getpid"], "os.getpid": [], "tests.test_publisher.test_Command_returncode": ["<builtin>.list", "lektor.publisher.Command"], "tests.test_publisher.test_Command_output": ["tests.test_publisher._pyscript", "<builtin>.list", "lektor.publisher.Command"], "tests.test_publisher.test_Command_triggers_no_warnings": ["tests.test_publisher._pyscript", "weakref.ref", "lektor.publisher.Command", "gc.collect", "warnings.simplefilter", "warnings.warn", "warnings.catch_warnings"], "weakref.ref": [], "gc.collect": [], "warnings.warn": [], "shutil.which": [], "tests.test_publisher.test_RsyncPublisher_integration": ["lektor.publisher.publish", "<builtin>.print", "os.fspath"], "lektor.publisher.publish": [], "os.fspath": [], "tests.test_publisher.work_tree": [], "tests.test_publisher.clean_git_environ": ["<builtin>.list"], "tests.test_publisher.gitrepo": ["lektor.utils.locate_executable", "lektor.publisher.GitRepo", "pytest.skip"], "pytest.skip": [], "lektor.publisher.GitRepo": [], "tests.test_publisher.test_GitRepo_popen": ["<builtin>.list"], "tests.test_publisher.test_GitRepo_run": [], "tests.test_publisher.test_GitRepo_set_ssh_credentials": [], "tests.test_publisher.test_GitRepo_set_ssh_credentials_no_creds": [], "tests.test_publisher.test_GitRepo_set_https_credentials": ["pathlib.Path", "re.match"], "tests.test_publisher.test_GitRepo_set_https_credentials_no_cred": ["<builtin>.any"], "tests.test_publisher.test_GitRepo_add_to_index": [], "tests.test_publisher.DummyUpstreamRepo.__init__": ["tests.test_publisher.DummyUpstreamRepo.run"], "tests.test_publisher.DummyUpstreamRepo.run": ["tests.test_publisher.DummyUpstreamRepo.run"], "tests.test_publisher.DummyUpstreamRepo.url": [], "tests.test_publisher.DummyUpstreamRepo.count_commits": ["<builtin>.len", "tests.test_publisher.DummyUpstreamRepo.run"], "tests.test_publisher.DummyUpstreamRepo.ls_files": ["tests.test_publisher.DummyUpstreamRepo.iter_files", "<builtin>.set"], "tests.test_publisher.DummyUpstreamRepo.iter_files": ["tests.test_publisher.DummyUpstreamRepo.iter_files", "tests.test_publisher.DummyUpstreamRepo.run"], "tests.test_publisher.upstream_repo": ["tests.test_publisher.DummyUpstreamRepo.__init__"], "tests.test_publisher.no_scary_output": ["itertools.chain", "<builtin>.len", "<builtin>.list", "<builtin>.filter"], "tests.test_publisher.no_scary_output.is_scary": [], "itertools.chain": [], "<builtin>.filter": [], "tests.test_publisher.publish_ghpages": ["lektor.utils.locate_executable", "pytest.skip"], "tests.test_publisher.publish_ghpages.GitRepo_publish_ghpages": ["lektor.publisher.GitRepo"], "tests.test_publisher.test_GitRepo_publish_ghpages": ["<builtin>.print"], "tests.test_publisher.test_GitRepo_publish_ghpages_cname": ["<builtin>.set", "<builtin>.print"], "tests.test_publisher.test_GitRepo_publish_ghpages_ignores_lektor_dir": ["<builtin>.print"], "tests.test_publisher.test_GitRepo_publish_ghpages_no_changes": ["<builtin>.any", "<builtin>.print"], "tests.test_publisher.test_GitRepo_publish_ghpages_discard_history": ["<builtin>.print"], "tests.test_publisher.output_path": ["<builtin>.str"], "tests.test_publisher.ghp_publisher": ["lektor.publisher.GithubPagesPublisher"], "lektor.publisher.GithubPagesPublisher": [], "tests.test_publisher.test_GithubPagesPublisher_publish": ["<builtin>.list", "pytest.deprecated_call", "<builtin>.iter", "werkzeug.urls.url_parse", "<builtin>.dir", "contextlib.ExitStack"], "<builtin>.dir": [], "werkzeug.urls.url_parse": [], "contextlib.ExitStack": [], "tests.test_publisher.test_GithubPagesPublisher_publish_fails_if_no_git": ["pytest.raises", "<builtin>.list", "re.search", "<builtin>.str", "werkzeug.urls.url_parse"], "tests.test_publisher.test_GithubPagesPublisher_parse_url": ["werkzeug.urls.url_parse"], "tests.test_publisher.test_GithubPagesPublisher_parse_url_warns_on_default_master_branch": ["re.search", "pytest.deprecated_call", "<builtin>.len", "werkzeug.urls.url_parse"], "tests.test_publisher.test_GithubPagesPublisher_parse_url_failures": ["<builtin>.str", "pytest.raises", "werkzeug.urls.url_parse"], "tests.test_publisher.test_GithubPagesPublisher_parse_credentials": ["werkzeug.urls.url_parse"], "tests.test_publisher.test_publish": ["lektor.publisher.publish", "werkzeug.urls.url_parse"], "tests.test_publisher.test_publish_unknown_scheme": ["<builtin>.str", "pytest.raises", "lektor.publisher.publish"], "tests.markers": ["pytest.mark.skipif", "lektor.imagetools.find_imagemagick"], "lektor.imagetools.find_imagemagick": [], "tests.test_markdown": ["lektor.markdown.MISTUNE_VERSION.startswith", "pytest.mark.parametrize", "pytest.fixture", "pytest.mark.skipif", "pytest.mark.usefixtures"], "tests.test_markdown.record_path": [], "tests.test_markdown.record_alt": [], "tests.test_markdown.record": [], "tests.test_markdown.resolve_links": [], "tests.test_markdown.field_options": [], "tests.test_markdown.base_url": [], "tests.test_markdown.context": ["lektor.context.Context"], "tests.test_markdown.renderer_context": ["lektor.markdown.controller.RendererContext"], "lektor.markdown.controller.RendererContext": [], "tests.test_markdown.test_require_ctx_raises_if_no_ctx": ["<builtin>.str", "pytest.raises", "lektor.markdown.controller.require_ctx"], "lektor.markdown.controller.require_ctx": [], "tests.test_markdown._run_in_thread": ["threading.Thread"], "threading.Thread": [], "tests.test_markdown.test_renderer_context_is_thread_local": ["tests.test_markdown._run_in_thread", "lektor.markdown.controller.get_renderer_context"], "lektor.markdown.controller.get_renderer_context": [], "tests.test_markdown.test_renderer_context_is_thread_local.assert_no_renderer_context": ["pytest.raises", "lektor.markdown.controller.get_renderer_context"], "tests.test_markdown.test_RendererHelper_options": ["lektor.markdown.controller.RendererHelper"], "lektor.markdown.controller.RendererHelper": [], "tests.test_markdown.test_RendererHelper_resolve_url": ["lektor.markdown.controller.RendererHelper"], "tests.test_markdown.test_RendererHelper_resolve_url_raises_when_not_resolvable": ["<builtin>.str", "pytest.raises", "lektor.markdown.controller.RendererHelper", "re.search"], "tests.test_markdown.markdown_controller": ["lektor.markdown.controller_class"], "lektor.markdown.controller_class": [], "tests.test_markdown.test_markdown_controller_parser_caching": ["tests.test_markdown.test_markdown_controller_parser_caching.get_parser", "<builtin>.len", "lektor.markdown.MISTUNE_VERSION.startswith", "tests.test_markdown._run_in_thread"], "tests.test_markdown.test_markdown_controller_parser_caching.get_parser": [], "tests.test_markdown.test_markdown_controller_get_cache_key": [], "tests.test_markdown.test_markdown_controller_get_cache_key_no_context": [], "tests.test_markdown.test_controller_cache": ["lektor.markdown.get_controller"], "lektor.markdown.get_controller": [], "tests.test_markdown.plugin_null": [], "tests.test_markdown.test_markdown_controller_resolve_plugin": [], "tests.test_markdown.test_markdown_controller_resolve_plugin_unknown": ["pytest.raises"], "tests.test_markdown.test_markdown_controller_resolve_plugin_raises_typeerror": ["pytest.raises"], "tests.test_markdown.improved_renderer": ["lektor.markdown.mistune2.ImprovedRenderer", "lektor.markdown.mistune0.ImprovedRenderer", "lektor.markdown.MISTUNE_VERSION.startswith"], "lektor.markdown.mistune2.ImprovedRenderer": [], "lektor.markdown.mistune0.ImprovedRenderer": [], "tests.test_markdown.test_ImprovedRenderer_record": ["<builtin>.str", "pytest.deprecated_call", "re.search"], "tests.test_markdown.test_ImprovedRenderer_meta": ["<builtin>.str", "pytest.deprecated_call", "re.search"], "tests.test_markdown.test_ImprovedRenderer_link": ["lektor.markdown.MISTUNE_VERSION.startswith", "re.match"], "tests.test_markdown.test_ImprovedRenderer_image": ["lektor.markdown.MISTUNE_VERSION.startswith", "re.match"], "tests.test_markdown.test_make_markdown": ["pytest.deprecated_call", "lektor.markdown.make_markdown"], "lektor.markdown.make_markdown": [], "tests.test_markdown.test_markdown_to_html": ["pytest.deprecated_call", "lektor.markdown.markdown_to_html"], "lektor.markdown.markdown_to_html": [], "tests.test_markdown.plugin_linkcount": [], "tests.test_markdown.plugin_linkcount.parse_linkcount": ["<builtin>.str"], "tests.test_markdown.LinkCounterPlugin.RendererMixin.link": ["<builtin>.int", "<builtin>.super"], "<builtin>.int": [], "<builtin>.super": [], "tests.test_markdown.LinkCounterPlugin.on_markdown_config": [], "tests.test_markdown.LinkCounterPlugin.on_markdown_lexer_config": ["<builtin>.hasattr"], "<builtin>.hasattr": [], "tests.test_markdown.LinkCounterPlugin.on_markdown_meta_init": [], "tests.test_markdown.link_counter_plugin": [], "tests.test_markdown.TestMarkdown": ["lektor.markdown.MISTUNE_VERSION.startswith", "pytest.mark.parametrize", "pytest.fixture", "pytest.mark.skipif", "pytest.mark.usefixtures"], "tests.test_markdown.TestMarkdown.source": [], "tests.test_markdown.TestMarkdown.markdown": ["lektor.markdown.Markdown"], "lektor.markdown.Markdown": [], "tests.test_markdown.TestMarkdown.test_bool": ["<builtin>.bool"], "tests.test_markdown.TestMarkdown.test_record": [], "tests.test_markdown.TestMarkdown.test_record_gone_away": ["<builtin>.str", "pytest.raises", "lektor.markdown.Markdown"], "tests.test_markdown.TestMarkdown.test_render_caching": [], "tests.test_markdown.TestMarkdown.test_meta": [], "tests.test_markdown.TestMarkdown.test_html": [], "tests.test_markdown.TestMarkdown.test_getitem": [], "tests.test_markdown.TestMarkdown.test_linkcount_plugin": ["re.search"], "tests.test_markdown.TestMarkdown.test_str": ["<builtin>.str"], "tests.test_markdown.TestMarkdown.test_markup": [], "tests.test_markdown._normalize_html": ["<builtin>.str", "re.sub"], "tests.test_markdown.test_integration": ["lektor.markdown.Markdown", "tests.test_markdown._normalize_html", "re.match"], "tests.test_markdown.test_field_options_integration": ["<builtin>.dict", "lektor.markdown.Markdown"], "<builtin>.dict": [], "tests.test_prev_next_sibling": ["pytest.fixture"], "tests.test_prev_next_sibling.pntest_project": ["shutil.copytree", "lektor.project.Project.from_path"], "tests.test_prev_next_sibling.pntest_env": ["lektor.environment.Environment"], "tests.test_prev_next_sibling.pntest_pad": ["lektor.db.Database"], "tests.test_prev_next_sibling.DependencyReporter.__init__": ["lektor.reporter.Reporter.__init__"], "lektor.reporter.Reporter.__init__": [], "tests.test_prev_next_sibling.DependencyReporter.report_dependencies": ["<builtin>.set"], "tests.test_prev_next_sibling.DependencyReporter.artifact_ids": ["<builtin>.set"], "tests.test_prev_next_sibling.DependencyReporter.clear": [], "tests.test_prev_next_sibling.pntest_reporter": ["tests.test_prev_next_sibling.DependencyReporter.__init__", "lektor.reporter.Reporter.push", "lektor.reporter.Reporter.pop"], "lektor.reporter.Reporter.push": [], "lektor.reporter.Reporter.pop": [], "tests.test_prev_next_sibling.test_prev_next_dependencies": ["<builtin>.open", "os.makedirs", "lektor.builder.Builder", "<builtin>.set", "os.path.join"], "tests.test_prev_next_sibling.test_prev_next_virtual_resolver": ["pytest.raises", "<builtin>.isinstance", "lektor.context.Context"], "tests.test_assets": ["pytest.mark.parametrize", "pytest.fixture"], "tests.test_assets.write_text": ["inspect.cleandoc"], "tests.test_assets._fixme": ["pytest.mark.xfail", "pytest.param"], "pytest.param": [], "tests.test_assets.project_path": ["tests.test_assets.write_text", "shutil.copytree"], "tests.test_assets.pad": ["lektor.project.Project.from_path"], "tests.test_assets.asset": [], "tests.test_assets.test_asset_url_path": [], "tests.test_assets.test_asset_artifact_name": [], "tests.test_assets.test_asset_children": ["<builtin>.set"], "tests.test_assets.test_asset_children_no_children_if_dir_unreadable": ["<builtin>.len", "<builtin>.set"], "tests.test_assets.test_asset_get_child": [], "tests.test_assets.test_resolve_url_path": [], "tests.test_assets.test_asset_repr": ["<builtin>.repr"], "tests.test_urls": ["<builtin>.RuntimeError", "pytest.mark.parametrize", "pytest.mark.usefixtures", "pytest.fixture"], "tests.test_urls.test_cleanup_path": ["lektor.utils.cleanup_path"], "lektor.utils.cleanup_path": [], "tests.test_urls.test_cleanup_url_path": ["lektor.utils.cleanup_url_path"], "lektor.utils.cleanup_url_path": [], "tests.test_urls.test_cleanup_url_path_raises_value_error": ["pytest.raises", "lektor.utils.cleanup_url_path"], "tests.test_urls.test_url_to_page": [], "tests.test_urls.test_url_to_page_with_explicit_alt": [], "tests.test_urls.mock_build_context": ["lektor.context._ctx_stack.pop", "lektor.context._ctx_stack.push"], "lektor.context._ctx_stack.push": [], "lektor.context._ctx_stack.pop": [], "tests.test_urls.test_url_to_thumbnail": [], "tests.test_urls.external_url": [], "tests.test_urls.test_url_to_external": [], "tests.test_urls._id_for_dict": ["<builtin>.isinstance"], "tests.test_urls.test_url_to_all_params": ["pytest.raises", "re.search", "<builtin>.str", "<builtin>.isinstance", "<builtin>.type"], "<builtin>.type": [], "tests.test_urls.test_url_parse_virtual_path": [], "tests.test_urls.test_file_record_url": [], "tests.test_urls.test_url_with_slash_slug": [], "tests.test_deploy": ["os.path.dirname", "pytest.mark.parametrize", "os.path.join"], "tests.test_deploy.test_get_server": [], "tests.test_deploy.test_rsync_command_credentials": ["<builtin>.str", "lektor.publisher.RsyncPublisher", "werkzeug.urls.url_parse"], "lektor.publisher.RsyncPublisher": [], "os.path.dirname": [], "tests.test_deploy.test_rsync_publisher": ["<builtin>.str", "lektor.publisher.RsyncPublisher", "werkzeug.urls.url_parse"]}
{"sklearn.tests.test_config": ["pytest.mark.parametrize"], "sklearn.tests.test_config.test_config_context": ["pytest.raises", "sklearn.config_context", "sklearn.get_config", "sklearn.set_config"], "sklearn.get_config": [], "sklearn.config_context": [], "sklearn.set_config": [], "pytest.raises": [], "sklearn.tests.test_config.test_config_context_exception": ["<builtin>.ValueError", "sklearn.config_context", "sklearn.get_config"], "<builtin>.ValueError": [], "sklearn.tests.test_config.test_set_config": ["pytest.raises", "sklearn.get_config", "sklearn.set_config"], "sklearn.tests.test_config.set_assume_finite": ["sklearn.config_context", "time.sleep", "sklearn.get_config"], "time.sleep": [], "pytest.mark.parametrize": [], "sklearn.tests.test_config.test_config_threadsafe_joblib": ["sklearn.utils.fixes.delayed", "joblib.Parallel", "<builtin>.zip"], "sklearn.utils.fixes.delayed": [], "<builtin>.zip": [], "joblib.Parallel": [], "sklearn.tests.test_config.test_config_threadsafe": ["concurrent.futures.ThreadPoolExecutor"], "concurrent.futures.ThreadPoolExecutor": [], "sklearn.tests.test_docstring_parameters": ["warnings.catch_warnings", "pytest.mark.parametrize", "pkgutil.walk_packages", "warnings.simplefilter", "sklearn.utils._testing.ignore_warnings", "sklearn.utils.all_estimators", "pytest.mark.filterwarnings", "pytest.mark.skipif", "<builtin>.set"], "warnings.catch_warnings": [], "warnings.simplefilter": [], "pkgutil.walk_packages": [], "<builtin>.set": [], "pytest.mark.filterwarnings": [], "pytest.mark.skipif": [], "sklearn.tests.test_docstring_parameters.test_docstring_parameters": ["warnings.catch_warnings", "numpydoc.docscrape.ClassDoc", "pytest.importorskip", "<builtin>.len", "inspect.signature", "sklearn.utils._testing._get_func_name", "inspect.getmembers", "sklearn.utils._testing.check_docstring_parameters", "<builtin>.RuntimeError", "sklearn.utils.deprecation._is_deprecated", "<builtin>.AssertionError", "<builtin>.any", "importlib.import_module", "<builtin>.getattr", "inspect.isabstract"], "pytest.importorskip": [], "importlib.import_module": [], "inspect.getmembers": [], "inspect.isabstract": [], "numpydoc.docscrape.ClassDoc": [], "<builtin>.len": [], "<builtin>.RuntimeError": [], "<builtin>.getattr": [], "sklearn.utils.deprecation._is_deprecated": [], "sklearn.utils._testing.check_docstring_parameters": [], "inspect.signature": [], "sklearn.utils._testing._get_func_name": [], "<builtin>.any": [], "<builtin>.AssertionError": [], "sklearn.utils._testing.ignore_warnings": [], "sklearn.tests.test_docstring_parameters.test_tabs": ["pkgutil.walk_packages", "importlib.import_module", "inspect.getsource"], "inspect.getsource": [], "sklearn.tests.test_docstring_parameters._construct_searchcv_instance": ["sklearn.linear_model.LogisticRegression"], "sklearn.linear_model.LogisticRegression": [], "sklearn.tests.test_docstring_parameters._construct_compose_pipeline_instance": ["sklearn.linear_model.LogisticRegression", "sklearn.preprocessing.FunctionTransformer"], "sklearn.preprocessing.FunctionTransformer": [], "sklearn.tests.test_docstring_parameters._construct_sparse_coder": ["numpy.array"], "numpy.array": [], "sklearn.utils.all_estimators": [], "sklearn.tests.test_docstring_parameters.test_fit_docstring_attributes": ["sklearn.tests.test_docstring_parameters._construct_compose_pipeline_instance", "sklearn.utils.fixes.parse_version", "sklearn.utils.estimator_checks._enforce_estimator_tags_X", "numpydoc.docscrape.ClassDoc", "pytest.importorskip", "sklearn.tests.test_docstring_parameters._construct_sparse_coder", "sklearn.utils.estimator_checks._construct_instance", "sklearn.utils._testing.ignore_warnings", "sklearn.tests.test_docstring_parameters._get_all_fitted_attributes", "sklearn.tests.test_docstring_parameters._construct_searchcv_instance", "sklearn.datasets.make_classification", "sklearn.utils.estimator_checks._enforce_estimator_tags_y", "<builtin>.AssertionError", "<builtin>.hasattr", "<builtin>.set"], "sklearn.utils.estimator_checks._construct_instance": [], "sklearn.utils.fixes.parse_version": [], "sklearn.datasets.make_classification": [], "sklearn.utils.estimator_checks._enforce_estimator_tags_y": [], "sklearn.utils.estimator_checks._enforce_estimator_tags_X": [], "<builtin>.hasattr": [], "sklearn.tests.test_docstring_parameters._get_all_fitted_attributes": ["warnings.catch_warnings", "<builtin>.dir", "warnings.filterwarnings", "<builtin>.isinstance", "<builtin>.list", "<builtin>.getattr"], "<builtin>.list": [], "warnings.filterwarnings": [], "<builtin>.dir": [], "<builtin>.isinstance": [], "sklearn.tests.test_public_functions": ["pytest.mark.parametrize"], "sklearn.tests.test_public_functions._get_func_info": ["inspect.signature", "importlib.import_module", "<builtin>.getattr"], "sklearn.tests.test_public_functions._check_function_param_validation": ["sklearn.utils._param_validation.generate_valid_param", "<builtin>.type", "pytest.raises", "sklearn.utils._param_validation.generate_invalid_param_val", "sklearn.utils._param_validation.make_constraint", "<builtin>.set"], "sklearn.utils._param_validation.make_constraint": [], "sklearn.utils._param_validation.generate_valid_param": [], "<builtin>.type": [], "sklearn.utils._param_validation.generate_invalid_param_val": [], "sklearn.tests.test_public_functions.test_function_param_validation": ["sklearn.tests.test_public_functions._check_function_param_validation", "<builtin>.getattr", "sklearn.tests.test_public_functions._get_func_info"], "sklearn.tests.test_public_functions.test_class_wrapper_param_validation": ["sklearn.tests.test_public_functions._check_function_param_validation", "<builtin>.getattr", "importlib.import_module", "sklearn.tests.test_public_functions._get_func_info"], "sklearn.tests.test_min_dependencies_readme": [], "sklearn.tests.test_min_dependencies_readme.test_min_dependencies_readme": ["pytest.skip", "sklearn.utils.fixes.parse_version", "platform.python_implementation", "re.compile", "os.path.exists", "pathlib.Path"], "platform.python_implementation": [], "pytest.skip": [], "re.compile": [], "pathlib.Path": [], "os.path.exists": [], "sklearn.tests.test_kernel_approximation": ["<builtin>.range", "pytest.mark.parametrize", "numpy.random.RandomState"], "numpy.random.RandomState": [], "sklearn.tests.test_kernel_approximation.test_polynomial_count_sketch": ["numpy.abs", "sklearn.kernel_approximation.PolynomialCountSketch", "sklearn.metrics.pairwise.polynomial_kernel", "numpy.max", "numpy.mean", "numpy.dot"], "sklearn.metrics.pairwise.polynomial_kernel": [], "sklearn.kernel_approximation.PolynomialCountSketch": [], "numpy.dot": [], "numpy.mean": [], "numpy.abs": [], "numpy.max": [], "sklearn.tests.test_kernel_approximation.test_polynomial_count_sketch_dense_sparse": ["sklearn.kernel_approximation.PolynomialCountSketch", "scipy.sparse.csr_matrix", "sklearn.utils._testing.assert_allclose"], "scipy.sparse.csr_matrix": [], "sklearn.utils._testing.assert_allclose": [], "sklearn.tests.test_kernel_approximation._linear_kernel": ["numpy.dot"], "sklearn.tests.test_kernel_approximation.test_additive_chi2_sampler": ["pytest.raises", "sklearn.utils._testing.assert_array_almost_equal", "scipy.sparse.csr_matrix", "numpy.dot", "sklearn.utils._testing.assert_array_equal", "sklearn.kernel_approximation.AdditiveChi2Sampler"], "sklearn.kernel_approximation.AdditiveChi2Sampler": [], "sklearn.utils._testing.assert_array_almost_equal": [], "sklearn.utils._testing.assert_array_equal": [], "<builtin>.range": [], "sklearn.tests.test_kernel_approximation.test_additive_chi2_sampler_sample_steps": ["<builtin>.getattr", "sklearn.kernel_approximation.AdditiveChi2Sampler"], "sklearn.tests.test_kernel_approximation.test_additive_chi2_sampler_future_warnings": ["re.escape", "pytest.warns", "sklearn.kernel_approximation.AdditiveChi2Sampler"], "re.escape": [], "pytest.warns": [], "sklearn.tests.test_kernel_approximation.test_additive_chi2_sampler_wrong_sample_steps": ["re.escape", "pytest.raises", "<builtin>.getattr", "sklearn.kernel_approximation.AdditiveChi2Sampler"], "sklearn.tests.test_kernel_approximation.test_skewed_chi2_sampler": ["numpy.log", "numpy.exp", "pytest.raises", "sklearn.utils._testing.assert_array_almost_equal", "numpy.isfinite", "sklearn.kernel_approximation.SkewedChi2Sampler", "numpy.dot"], "numpy.log": [], "numpy.exp": [], "sklearn.kernel_approximation.SkewedChi2Sampler": [], "numpy.isfinite": [], "sklearn.tests.test_kernel_approximation.test_additive_chi2_sampler_exceptions": ["pytest.raises", "sklearn.kernel_approximation.AdditiveChi2Sampler"], "sklearn.tests.test_kernel_approximation.test_rbf_sampler": ["numpy.abs", "sklearn.kernel_approximation.RBFSampler", "sklearn.metrics.pairwise.rbf_kernel", "numpy.max", "numpy.mean", "numpy.dot"], "sklearn.metrics.pairwise.rbf_kernel": [], "sklearn.kernel_approximation.RBFSampler": [], "sklearn.tests.test_kernel_approximation.test_rbf_sampler_fitted_attributes_dtype": ["numpy.array", "sklearn.kernel_approximation.RBFSampler"], "sklearn.tests.test_kernel_approximation.test_rbf_sampler_dtype_equivalence": ["numpy.array", "sklearn.utils._testing.assert_allclose", "sklearn.kernel_approximation.RBFSampler"], "sklearn.tests.test_kernel_approximation.test_rbf_sampler_gamma_scale": ["pytest.approx", "sklearn.kernel_approximation.RBFSampler"], "pytest.approx": [], "sklearn.tests.test_kernel_approximation.test_skewed_chi2_sampler_fitted_attributes_dtype": ["sklearn.kernel_approximation.SkewedChi2Sampler", "numpy.array"], "sklearn.tests.test_kernel_approximation.test_skewed_chi2_sampler_dtype_equivalence": ["sklearn.kernel_approximation.SkewedChi2Sampler", "sklearn.utils._testing.assert_allclose", "numpy.array"], "sklearn.tests.test_kernel_approximation.test_input_validation": ["sklearn.kernel_approximation.SkewedChi2Sampler", "sklearn.kernel_approximation.RBFSampler", "scipy.sparse.csr_matrix", "sklearn.kernel_approximation.AdditiveChi2Sampler"], "sklearn.tests.test_kernel_approximation.test_nystroem_approximation": ["sklearn.kernel_approximation.Nystroem", "sklearn.metrics.pairwise.rbf_kernel", "sklearn.utils._testing.assert_array_almost_equal", "numpy.dot", "sklearn.metrics.pairwise.kernel_metrics", "numpy.random.RandomState"], "sklearn.kernel_approximation.Nystroem": [], "sklearn.metrics.pairwise.kernel_metrics": [], "sklearn.tests.test_kernel_approximation.test_nystroem_default_parameters": ["sklearn.metrics.pairwise.chi2_kernel", "sklearn.kernel_approximation.Nystroem", "sklearn.metrics.pairwise.rbf_kernel", "sklearn.utils._testing.assert_array_almost_equal", "numpy.dot", "numpy.random.RandomState"], "sklearn.metrics.pairwise.chi2_kernel": [], "sklearn.tests.test_kernel_approximation.test_nystroem_singular_kernel": ["sklearn.kernel_approximation.Nystroem", "sklearn.metrics.pairwise.rbf_kernel", "numpy.all", "sklearn.utils._testing.assert_array_almost_equal", "numpy.isfinite", "numpy.vstack", "numpy.dot", "numpy.random.RandomState"], "numpy.vstack": [], "numpy.all": [], "sklearn.tests.test_kernel_approximation.test_nystroem_poly_kernel_params": ["sklearn.kernel_approximation.Nystroem", "sklearn.metrics.pairwise.polynomial_kernel", "sklearn.utils._testing.assert_array_almost_equal", "numpy.dot", "numpy.random.RandomState"], "sklearn.tests.test_kernel_approximation.test_nystroem_callable": ["sklearn.kernel_approximation.Nystroem", "<builtin>.len", "pytest.raises", "<builtin>.list", "numpy.random.RandomState"], "sklearn.tests.test_kernel_approximation.test_nystroem_callable.logging_histogram_kernel": ["numpy.minimum"], "numpy.minimum": [], "sklearn.tests.test_kernel_approximation.test_nystroem_precomputed_kernel": ["sklearn.kernel_approximation.Nystroem", "sklearn.metrics.pairwise.polynomial_kernel", "pytest.raises", "sklearn.utils._testing.assert_array_almost_equal", "numpy.dot", "numpy.random.RandomState"], "sklearn.tests.test_kernel_approximation.test_nystroem_component_indices": ["sklearn.kernel_approximation.Nystroem", "sklearn.datasets.make_classification"], "sklearn.tests.test_kernel_approximation.test_get_feature_names_out": ["sklearn.utils._testing.assert_array_equal", "<builtin>.range"], "sklearn.tests.test_kernel_approximation.test_additivechi2sampler_get_feature_names_out": ["sklearn.kernel_approximation.AdditiveChi2Sampler", "sklearn.utils._testing.assert_array_equal", "numpy.random.RandomState"], "sklearn.tests.test_isotonic": ["pytest.mark.parametrize"], "sklearn.tests.test_isotonic.test_permutation_invariance": ["sklearn.isotonic.IsotonicRegression", "sklearn.utils.shuffle", "sklearn.utils._testing.assert_array_equal"], "sklearn.isotonic.IsotonicRegression": [], "sklearn.utils.shuffle": [], "sklearn.tests.test_isotonic.test_check_increasing_small_number_of_samples": ["sklearn.isotonic.check_increasing", "warnings.catch_warnings", "warnings.simplefilter"], "sklearn.isotonic.check_increasing": [], "sklearn.tests.test_isotonic.test_check_increasing_up": ["sklearn.isotonic.check_increasing", "warnings.catch_warnings", "warnings.simplefilter"], "sklearn.tests.test_isotonic.test_check_increasing_up_extreme": ["sklearn.isotonic.check_increasing", "warnings.catch_warnings", "warnings.simplefilter"], "sklearn.tests.test_isotonic.test_check_increasing_down": ["sklearn.isotonic.check_increasing", "warnings.catch_warnings", "warnings.simplefilter"], "sklearn.tests.test_isotonic.test_check_increasing_down_extreme": ["sklearn.isotonic.check_increasing", "warnings.catch_warnings", "warnings.simplefilter"], "sklearn.tests.test_isotonic.test_check_ci_warn": ["sklearn.isotonic.check_increasing", "pytest.warns"], "sklearn.tests.test_isotonic.test_isotonic_regression": ["numpy.ones", "sklearn.isotonic.IsotonicRegression", "<builtin>.len", "sklearn.isotonic.isotonic_regression", "numpy.random.permutation", "numpy.arange", "numpy.array", "numpy.mean", "sklearn.utils._testing.assert_array_equal"], "sklearn.isotonic.isotonic_regression": [], "numpy.arange": [], "numpy.random.permutation": [], "numpy.ones": [], "sklearn.tests.test_isotonic.test_isotonic_regression_ties_min": ["sklearn.isotonic.IsotonicRegression", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_isotonic.test_isotonic_regression_ties_max": ["sklearn.isotonic.IsotonicRegression", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_isotonic.test_isotonic_regression_ties_secondary_": ["sklearn.utils._testing.assert_array_almost_equal", "sklearn.isotonic.IsotonicRegression"], "sklearn.tests.test_isotonic.test_isotonic_regression_with_ties_in_differently_sized_groups": ["sklearn.utils._testing.assert_array_almost_equal", "sklearn.isotonic.IsotonicRegression", "numpy.array"], "sklearn.tests.test_isotonic.test_isotonic_regression_reversed": ["numpy.ones", "sklearn.isotonic.IsotonicRegression", "<builtin>.len", "numpy.arange", "numpy.array", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_isotonic.test_isotonic_regression_auto_decreasing": ["warnings.catch_warnings", "sklearn.isotonic.IsotonicRegression", "warnings.simplefilter", "<builtin>.len", "<builtin>.str", "numpy.arange", "numpy.array", "<builtin>.all"], "<builtin>.str": [], "<builtin>.all": [], "sklearn.tests.test_isotonic.test_isotonic_regression_auto_increasing": ["warnings.catch_warnings", "sklearn.isotonic.IsotonicRegression", "warnings.simplefilter", "<builtin>.len", "<builtin>.str", "numpy.arange", "numpy.array", "<builtin>.all"], "sklearn.tests.test_isotonic.test_assert_raises_exceptions": ["pytest.raises", "sklearn.isotonic.IsotonicRegression", "numpy.random.RandomState"], "sklearn.tests.test_isotonic.test_isotonic_sample_weight_parameter_default_value": ["numpy.ones", "sklearn.isotonic.IsotonicRegression", "numpy.log", "numpy.arange", "sklearn.utils._testing.assert_array_equal", "numpy.random.RandomState"], "sklearn.tests.test_isotonic.test_isotonic_min_max_boundaries": ["sklearn.utils._testing.assert_array_equal", "sklearn.isotonic.IsotonicRegression", "numpy.arange", "numpy.round"], "numpy.round": [], "sklearn.tests.test_isotonic.test_isotonic_sample_weight": ["sklearn.isotonic.IsotonicRegression", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_isotonic.test_isotonic_regression_oob_raise": ["sklearn.isotonic.IsotonicRegression", "<builtin>.len", "pytest.raises", "numpy.arange", "numpy.array"], "sklearn.tests.test_isotonic.test_isotonic_regression_oob_clip": ["sklearn.isotonic.IsotonicRegression", "<builtin>.len", "<builtin>.max", "numpy.arange", "numpy.array", "<builtin>.min"], "<builtin>.max": [], "<builtin>.min": [], "sklearn.tests.test_isotonic.test_isotonic_regression_oob_nan": ["numpy.isnan", "sklearn.isotonic.IsotonicRegression", "<builtin>.len", "<builtin>.sum", "numpy.arange", "numpy.array"], "numpy.isnan": [], "<builtin>.sum": [], "sklearn.tests.test_isotonic.test_isotonic_regression_pickle": ["sklearn.isotonic.IsotonicRegression", "<builtin>.len", "pickle.dumps", "pickle.loads", "numpy.testing.assert_array_equal", "numpy.arange", "numpy.array"], "pickle.dumps": [], "pickle.loads": [], "numpy.testing.assert_array_equal": [], "sklearn.tests.test_isotonic.test_isotonic_duplicate_min_entry": ["numpy.all", "sklearn.isotonic.IsotonicRegression", "numpy.isfinite"], "sklearn.tests.test_isotonic.test_isotonic_ymin_ymax": ["numpy.all", "sklearn.isotonic.isotonic_regression", "numpy.array"], "sklearn.tests.test_isotonic.test_isotonic_zero_weight_loop": ["sklearn.isotonic.IsotonicRegression", "numpy.linspace", "numpy.random.RandomState"], "numpy.linspace": [], "sklearn.tests.test_isotonic.test_fast_predict": ["sklearn.isotonic.IsotonicRegression", "scipy.special.expit", "numpy.less", "sklearn.utils._testing.assert_array_equal", "numpy.random.RandomState"], "scipy.special.expit": [], "numpy.less": [], "sklearn.tests.test_isotonic.test_isotonic_copy_before_fit": ["sklearn.isotonic.IsotonicRegression", "copy.copy"], "copy.copy": [], "sklearn.tests.test_isotonic.test_isotonic_dtype": ["sklearn.isotonic.IsotonicRegression", "<builtin>.len", "sklearn.isotonic.isotonic_regression", "numpy.arange", "numpy.array", "sklearn.utils.validation.check_array"], "sklearn.utils.validation.check_array": [], "sklearn.tests.test_isotonic.test_isotonic_mismatched_dtype": ["sklearn.isotonic.IsotonicRegression", "<builtin>.len", "numpy.arange", "numpy.array"], "sklearn.tests.test_isotonic.test_make_unique_dtype": ["sklearn.isotonic._make_unique", "numpy.ones_like", "sklearn.utils._testing.assert_array_equal", "numpy.array"], "numpy.ones_like": [], "sklearn.isotonic._make_unique": [], "sklearn.tests.test_isotonic.test_make_unique_tolerance": ["sklearn.isotonic._make_unique", "numpy.ones_like", "sklearn.utils._testing.assert_array_equal", "numpy.array"], "sklearn.tests.test_isotonic.test_isotonic_make_unique_tolerance": ["sklearn.isotonic.IsotonicRegression", "sklearn.utils._testing.assert_array_equal", "numpy.array"], "sklearn.tests.test_isotonic.test_isotonic_non_regression_inf_slope": ["numpy.all", "sklearn.isotonic.IsotonicRegression", "numpy.isfinite", "numpy.array"], "sklearn.tests.test_isotonic.test_isotonic_thresholds": ["numpy.in1d", "sklearn.isotonic.IsotonicRegression", "numpy.diff", "<builtin>.all", "numpy.random.RandomState"], "numpy.in1d": [], "numpy.diff": [], "sklearn.tests.test_isotonic.test_input_shape_validation": ["sklearn.utils._testing.assert_array_equal", "sklearn.isotonic.IsotonicRegression", "numpy.arange", "sklearn.utils._testing.assert_allclose"], "sklearn.tests.test_isotonic.test_isotonic_2darray_more_than_1_feature": ["pytest.raises", "sklearn.isotonic.IsotonicRegression", "numpy.arange"], "sklearn.tests.test_isotonic.test_isotonic_regression_sample_weight_not_overwritten": ["sklearn.isotonic.IsotonicRegression", "sklearn.datasets.make_regression", "numpy.ones_like", "sklearn.utils._testing.assert_allclose", "sklearn.isotonic.isotonic_regression"], "sklearn.datasets.make_regression": [], "sklearn.tests.test_isotonic.test_get_feature_names_out": ["sklearn.utils._testing.assert_array_equal", "<builtin>.isinstance", "sklearn.isotonic.IsotonicRegression", "numpy.arange"], "sklearn.tests.test_naive_bayes": ["pytest.mark.parametrize", "numpy.random.RandomState", "pytest.mark.filterwarnings", "numpy.array"], "sklearn.tests.test_naive_bayes.test_gnb": ["numpy.log", "pytest.raises", "sklearn.naive_bayes.GaussianNB", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.utils._testing.assert_array_equal"], "sklearn.naive_bayes.GaussianNB": [], "sklearn.tests.test_naive_bayes.test_gnb_prior": ["sklearn.utils._testing.assert_array_almost_equal", "sklearn.naive_bayes.GaussianNB", "numpy.array"], "sklearn.tests.test_naive_bayes.test_gnb_sample_weight": ["numpy.ones", "numpy.bincount", "sklearn.naive_bayes.GaussianNB", "sklearn.utils._testing.assert_array_almost_equal"], "numpy.bincount": [], "sklearn.tests.test_naive_bayes.test_gnb_neg_priors": ["pytest.raises", "sklearn.naive_bayes.GaussianNB", "numpy.array"], "sklearn.tests.test_naive_bayes.test_gnb_priors": ["sklearn.utils._testing.assert_array_almost_equal", "sklearn.naive_bayes.GaussianNB", "numpy.array"], "sklearn.tests.test_naive_bayes.test_gnb_priors_sum_isclose": ["sklearn.naive_bayes.GaussianNB", "numpy.array"], "sklearn.tests.test_naive_bayes.test_gnb_wrong_nb_priors": ["pytest.raises", "sklearn.naive_bayes.GaussianNB", "numpy.array"], "sklearn.tests.test_naive_bayes.test_gnb_prior_greater_one": ["pytest.raises", "sklearn.naive_bayes.GaussianNB", "numpy.array"], "sklearn.tests.test_naive_bayes.test_gnb_prior_large_bias": ["sklearn.naive_bayes.GaussianNB", "numpy.array"], "sklearn.tests.test_naive_bayes.test_gnb_check_update_with_no_data": ["sklearn.naive_bayes.GaussianNB._update_mean_variance", "numpy.empty"], "numpy.empty": [], "sklearn.naive_bayes.GaussianNB._update_mean_variance": [], "sklearn.tests.test_naive_bayes.test_gnb_partial_fit": ["sklearn.utils._testing.assert_array_almost_equal", "sklearn.naive_bayes.GaussianNB", "numpy.unique"], "numpy.unique": [], "sklearn.tests.test_naive_bayes.test_gnb_naive_bayes_scale_invariance": ["sklearn.utils._testing.assert_array_equal", "sklearn.naive_bayes.GaussianNB", "sklearn.datasets.load_iris"], "sklearn.datasets.load_iris": [], "sklearn.tests.test_naive_bayes.test_discretenb_prior": ["sklearn.utils._testing.assert_array_almost_equal", "numpy.log", "numpy.array"], "sklearn.tests.test_naive_bayes.test_discretenb_partial_fit": ["<builtin>.range", "<builtin>.len", "numpy.sum", "numpy.array", "sklearn.utils._testing.assert_array_equal"], "numpy.sum": [], "sklearn.tests.test_naive_bayes.test_NB_partial_fit_no_first_classes": ["pytest.raises", "numpy.unique", "numpy.arange"], "sklearn.tests.test_naive_bayes.test_discretenb_predict_proba": ["<builtin>.zip", "sklearn.utils._testing.assert_almost_equal", "numpy.exp", "numpy.sum", "sklearn.utils._testing.assert_array_almost_equal", "numpy.array"], "sklearn.utils._testing.assert_almost_equal": [], "sklearn.tests.test_naive_bayes.test_discretenb_uniform_prior": ["numpy.exp", "sklearn.utils._testing.assert_array_almost_equal", "numpy.array"], "sklearn.tests.test_naive_bayes.test_discretenb_provide_prior": ["numpy.exp", "pytest.raises", "sklearn.utils._testing.assert_array_almost_equal", "numpy.array"], "sklearn.tests.test_naive_bayes.test_discretenb_provide_prior_with_partial_fit": ["sklearn.model_selection.train_test_split", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.datasets.load_iris"], "sklearn.model_selection.train_test_split": [], "sklearn.tests.test_naive_bayes.test_discretenb_sample_weight_multiclass": ["sklearn.utils._testing.assert_array_equal", "numpy.array"], "sklearn.tests.test_naive_bayes.test_discretenb_degenerate_one_class_case": ["<builtin>.isinstance", "<builtin>.len", "<builtin>.sorted", "<builtin>.set", "<builtin>.list", "<builtin>.getattr"], "<builtin>.sorted": [], "sklearn.tests.test_naive_bayes.test_mnnb": ["numpy.log", "numpy.unique", "pytest.raises", "sklearn.naive_bayes.MultinomialNB", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.utils._testing.assert_array_equal"], "sklearn.naive_bayes.MultinomialNB": [], "sklearn.tests.test_naive_bayes.test_mnb_prior_unobserved_targets": ["warnings.catch_warnings", "warnings.simplefilter", "sklearn.naive_bayes.MultinomialNB", "numpy.array"], "sklearn.tests.test_naive_bayes.test_bnb": ["sklearn.naive_bayes.BernoulliNB", "numpy.exp", "numpy.sum", "sklearn.utils._testing.assert_array_almost_equal", "numpy.array"], "sklearn.naive_bayes.BernoulliNB": [], "sklearn.tests.test_naive_bayes.test_bnb_feature_log_prob": ["sklearn.naive_bayes.BernoulliNB", "numpy.tile", "numpy.log", "sklearn.utils._testing.assert_array_almost_equal", "numpy.array"], "numpy.tile": [], "sklearn.tests.test_naive_bayes.test_cnb": ["sklearn.naive_bayes.ComplementNB", "<builtin>.range", "sklearn.utils._testing.assert_array_equal", "numpy.log", "re.escape", "pytest.raises", "sklearn.utils._testing.assert_array_almost_equal", "numpy.array", "numpy.zeros"], "numpy.zeros": [], "sklearn.naive_bayes.ComplementNB": [], "sklearn.tests.test_naive_bayes.test_categoricalnb": ["sklearn.naive_bayes.CategoricalNB", "<builtin>.len", "re.escape", "pytest.raises", "sklearn.utils._testing.assert_array_almost_equal", "numpy.array", "sklearn.utils._testing.assert_array_equal"], "sklearn.naive_bayes.CategoricalNB": [], "sklearn.tests.test_naive_bayes.test_categoricalnb_with_min_categories": ["sklearn.naive_bayes.CategoricalNB", "sklearn.utils._testing.assert_array_equal", "numpy.array"], "sklearn.tests.test_naive_bayes.test_categoricalnb_min_categories_errors": ["pytest.raises", "sklearn.naive_bayes.CategoricalNB", "numpy.array"], "sklearn.tests.test_naive_bayes.test_alpha": ["sklearn.naive_bayes.BernoulliNB", "sklearn.naive_bayes.CategoricalNB", "pytest.warns", "sklearn.naive_bayes.MultinomialNB", "sklearn.utils._testing.assert_array_almost_equal", "numpy.array"], "sklearn.tests.test_naive_bayes.test_alpha_vector": ["numpy.log", "pytest.raises", "sklearn.naive_bayes.MultinomialNB", "sklearn.utils._testing.assert_array_almost_equal", "numpy.array"], "sklearn.tests.test_naive_bayes.test_check_accuracy_on_digits": ["sklearn.model_selection.cross_val_score", "sklearn.naive_bayes.BernoulliNB", "numpy.logical_or", "sklearn.naive_bayes.MultinomialNB", "sklearn.naive_bayes.GaussianNB", "sklearn.datasets.load_digits"], "sklearn.datasets.load_digits": [], "numpy.logical_or": [], "sklearn.model_selection.cross_val_score": [], "sklearn.tests.test_naive_bayes.test_force_alpha_deprecation": ["pytest.skip", "<builtin>.isinstance", "pytest.warns", "numpy.min", "numpy.array"], "numpy.min": [], "sklearn.tests.test_naive_bayes.test_check_alpha": ["pytest.warns", "sklearn.naive_bayes.BernoulliNB", "sklearn.utils._testing.assert_array_equal", "numpy.array"], "sklearn.tests.test_naive_bayes.test_predict_joint_proba": ["numpy.atleast_2d", "scipy.special.logsumexp", "sklearn.utils._testing.assert_allclose"], "scipy.special.logsumexp": [], "numpy.atleast_2d": [], "sklearn.tests.test_init": [], "sklearn.tests.test_init.test_import_skl": [], "sklearn.tests.test_dummy": ["pytest.mark.parametrize", "sklearn.utils._testing.ignore_warnings"], "sklearn.tests.test_dummy._check_predict_proba": ["numpy.ones", "<builtin>.range", "numpy.log", "numpy.unique", "<builtin>.len", "numpy.reshape", "numpy.atleast_1d", "sklearn.utils._testing.assert_array_almost_equal"], "numpy.atleast_1d": [], "numpy.reshape": [], "sklearn.tests.test_dummy._check_behavior_2d": ["sklearn.base.clone", "numpy.array"], "sklearn.base.clone": [], "sklearn.tests.test_dummy._check_behavior_2d_for_constant": ["sklearn.base.clone", "numpy.array"], "sklearn.tests.test_dummy._check_equality_regressor": ["numpy.tile", "sklearn.utils._testing.assert_array_almost_equal"], "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy": ["numpy.ones", "<builtin>.len", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.dummy.DummyClassifier", "sklearn.tests.test_dummy._check_predict_proba", "sklearn.utils._testing.assert_array_equal"], "sklearn.dummy.DummyClassifier": [], "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_with_2d_column_y": ["sklearn.dummy.DummyClassifier", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_multioutput": ["numpy.ones", "numpy.hstack", "sklearn.utils._testing.assert_array_equal", "<builtin>.len", "sklearn.dummy.DummyClassifier", "numpy.array", "sklearn.tests.test_dummy._check_behavior_2d", "sklearn.tests.test_dummy._check_predict_proba", "numpy.zeros"], "numpy.hstack": [], "sklearn.tests.test_dummy.test_stratified_strategy": ["numpy.bincount", "sklearn.utils._testing.assert_almost_equal", "<builtin>.float", "<builtin>.len", "sklearn.dummy.DummyClassifier", "sklearn.tests.test_dummy._check_predict_proba"], "<builtin>.float": [], "sklearn.tests.test_dummy.test_stratified_strategy_multioutput": ["numpy.bincount", "sklearn.utils._testing.assert_almost_equal", "<builtin>.range", "<builtin>.float", "<builtin>.len", "sklearn.dummy.DummyClassifier", "numpy.array", "sklearn.tests.test_dummy._check_behavior_2d", "sklearn.tests.test_dummy._check_predict_proba"], "sklearn.tests.test_dummy.test_uniform_strategy": ["numpy.bincount", "sklearn.utils._testing.assert_almost_equal", "<builtin>.float", "<builtin>.len", "sklearn.dummy.DummyClassifier", "sklearn.tests.test_dummy._check_predict_proba"], "sklearn.tests.test_dummy.test_uniform_strategy_multioutput": ["numpy.bincount", "sklearn.utils._testing.assert_almost_equal", "<builtin>.range", "<builtin>.float", "<builtin>.len", "sklearn.dummy.DummyClassifier", "numpy.array", "sklearn.tests.test_dummy._check_behavior_2d", "sklearn.tests.test_dummy._check_predict_proba"], "sklearn.tests.test_dummy.test_string_labels": ["sklearn.dummy.DummyClassifier", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_dummy.test_classifier_score_with_None": ["sklearn.dummy.DummyClassifier"], "sklearn.tests.test_dummy.test_classifier_prediction_independent_of_X": ["sklearn.dummy.DummyClassifier", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_dummy.test_mean_strategy_regressor": ["sklearn.dummy.DummyRegressor", "<builtin>.len", "numpy.mean", "sklearn.utils._testing.assert_array_equal", "numpy.random.RandomState"], "sklearn.dummy.DummyRegressor": [], "sklearn.tests.test_dummy.test_mean_strategy_multioutput_regressor": ["sklearn.dummy.DummyRegressor", "sklearn.tests.test_dummy._check_equality_regressor", "sklearn.tests.test_dummy._check_behavior_2d", "numpy.mean", "numpy.random.RandomState"], "sklearn.tests.test_dummy.test_regressor_exceptions": ["pytest.raises", "sklearn.dummy.DummyRegressor"], "sklearn.tests.test_dummy.test_median_strategy_regressor": ["sklearn.dummy.DummyRegressor", "<builtin>.len", "numpy.median", "sklearn.utils._testing.assert_array_equal", "numpy.random.RandomState"], "numpy.median": [], "sklearn.tests.test_dummy.test_median_strategy_multioutput_regressor": ["sklearn.dummy.DummyRegressor", "sklearn.tests.test_dummy._check_equality_regressor", "numpy.median", "sklearn.tests.test_dummy._check_behavior_2d", "numpy.random.RandomState"], "sklearn.tests.test_dummy.test_quantile_strategy_regressor": ["sklearn.dummy.DummyRegressor", "<builtin>.len", "numpy.median", "numpy.percentile", "numpy.min", "numpy.max", "sklearn.utils._testing.assert_array_equal", "numpy.random.RandomState"], "numpy.percentile": [], "sklearn.tests.test_dummy.test_quantile_strategy_multioutput_regressor": ["sklearn.dummy.DummyRegressor", "sklearn.tests.test_dummy._check_equality_regressor", "numpy.median", "numpy.percentile", "sklearn.tests.test_dummy._check_behavior_2d", "numpy.random.RandomState"], "sklearn.tests.test_dummy.test_quantile_invalid": ["pytest.raises", "sklearn.dummy.DummyRegressor"], "sklearn.tests.test_dummy.test_quantile_strategy_empty_train": ["pytest.raises", "sklearn.dummy.DummyRegressor"], "sklearn.tests.test_dummy.test_constant_strategy_regressor": ["<builtin>.isinstance", "sklearn.dummy.DummyRegressor", "<builtin>.len", "sklearn.utils._testing.assert_array_equal", "numpy.random.RandomState"], "sklearn.tests.test_dummy.test_constant_strategy_multioutput_regressor": ["sklearn.tests.test_dummy._check_behavior_2d_for_constant", "sklearn.dummy.DummyRegressor", "sklearn.tests.test_dummy._check_equality_regressor", "numpy.random.RandomState"], "sklearn.tests.test_dummy.test_y_mean_attribute_regressor": ["numpy.mean", "sklearn.dummy.DummyRegressor"], "sklearn.tests.test_dummy.test_constants_not_specified_regressor": ["pytest.raises", "sklearn.dummy.DummyRegressor"], "sklearn.tests.test_dummy.test_constant_size_multioutput_regressor": ["pytest.raises", "sklearn.dummy.DummyRegressor", "numpy.random.RandomState"], "sklearn.tests.test_dummy.test_constant_strategy": ["numpy.ones", "<builtin>.len", "sklearn.dummy.DummyClassifier", "numpy.array", "sklearn.tests.test_dummy._check_predict_proba", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_dummy.test_constant_strategy_multioutput": ["numpy.ones", "numpy.hstack", "sklearn.utils._testing.assert_array_equal", "<builtin>.len", "sklearn.dummy.DummyClassifier", "numpy.array", "sklearn.tests.test_dummy._check_predict_proba", "numpy.zeros"], "sklearn.tests.test_dummy.test_constant_strategy_exceptions": ["pytest.raises", "sklearn.dummy.DummyClassifier"], "sklearn.tests.test_dummy.test_classification_sample_weight": ["sklearn.utils._testing.assert_array_almost_equal", "sklearn.dummy.DummyClassifier"], "sklearn.tests.test_dummy.test_constant_strategy_sparse_target": ["numpy.ones", "numpy.hstack", "sklearn.utils._testing.assert_array_equal", "scipy.sparse.csc_matrix", "<builtin>.len", "sklearn.dummy.DummyClassifier", "scipy.sparse.issparse", "numpy.array", "numpy.zeros"], "scipy.sparse.csc_matrix": [], "scipy.sparse.issparse": [], "sklearn.tests.test_dummy.test_uniform_strategy_sparse_target_warning": ["numpy.bincount", "sklearn.utils._testing.assert_almost_equal", "<builtin>.range", "scipy.sparse.csc_matrix", "<builtin>.float", "<builtin>.len", "pytest.warns", "sklearn.dummy.DummyClassifier", "numpy.array"], "sklearn.tests.test_dummy.test_stratified_strategy_sparse_target": ["numpy.bincount", "sklearn.utils._testing.assert_almost_equal", "<builtin>.range", "scipy.sparse.csc_matrix", "<builtin>.float", "<builtin>.len", "sklearn.dummy.DummyClassifier", "scipy.sparse.issparse", "numpy.array"], "sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_sparse_target": ["numpy.ones", "numpy.hstack", "sklearn.utils._testing.assert_array_equal", "scipy.sparse.csc_matrix", "<builtin>.len", "sklearn.dummy.DummyClassifier", "scipy.sparse.issparse", "numpy.array", "numpy.zeros"], "sklearn.tests.test_dummy.test_dummy_regressor_sample_weight": ["numpy.average", "sklearn.dummy.DummyRegressor", "sklearn.utils.stats._weighted_percentile", "numpy.random.RandomState"], "numpy.average": [], "sklearn.utils.stats._weighted_percentile": [], "sklearn.tests.test_dummy.test_dummy_regressor_on_3D_array": ["sklearn.dummy.DummyRegressor", "sklearn.utils._testing.assert_array_equal", "numpy.array"], "sklearn.tests.test_dummy.test_dummy_classifier_on_3D_array": ["sklearn.dummy.DummyClassifier", "sklearn.utils._testing.assert_array_equal", "numpy.array"], "sklearn.tests.test_dummy.test_dummy_regressor_return_std": ["sklearn.dummy.DummyRegressor", "<builtin>.len", "sklearn.utils._testing.assert_array_equal", "numpy.array"], "sklearn.tests.test_dummy.test_regressor_score_with_None": ["sklearn.dummy.DummyRegressor"], "sklearn.tests.test_dummy.test_regressor_prediction_independent_of_X": ["sklearn.dummy.DummyRegressor", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_dummy.test_dtype_of_classifier_probas": ["sklearn.dummy.DummyClassifier", "numpy.zeros"], "sklearn.tests.test_check_build": [], "sklearn.tests.test_check_build.test_raise_build_error": ["pytest.raises", "<builtin>.ImportError", "sklearn.__check_build.raise_build_error"], "<builtin>.ImportError": [], "sklearn.__check_build.raise_build_error": [], "sklearn.tests": [], "sklearn.tests.test_discriminant_analysis": ["pytest.mark.parametrize", "<builtin>.range", "numpy.arange", "numpy.array", "numpy.zeros"], "sklearn.tests.test_discriminant_analysis.test_lda_predict": ["sklearn.cluster.KMeans", "numpy.any", "sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "sklearn.utils._testing.assert_allclose", "numpy.exp", "pytest.raises", "sklearn.covariance.LedoitWolf", "sklearn.covariance.ShrunkCovariance", "sklearn.utils._testing.assert_array_equal"], "sklearn.discriminant_analysis.LinearDiscriminantAnalysis": [], "numpy.any": [], "sklearn.covariance.ShrunkCovariance": [], "sklearn.covariance.LedoitWolf": [], "sklearn.cluster.KMeans": [], "sklearn.tests.test_discriminant_analysis.test_lda_predict_proba": ["scipy.linalg.inv", "numpy.hstack", "<builtin>.range", "sklearn.tests.test_discriminant_analysis.test_lda_predict_proba.discriminant_func", "sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "<builtin>.float", "<builtin>.len", "sklearn.tests.test_discriminant_analysis.test_lda_predict_proba.generate_dataset", "sklearn.utils._testing.assert_allclose", "numpy.sum", "<builtin>.sum", "numpy.array", "pytest.approx", "numpy.dot"], "sklearn.tests.test_discriminant_analysis.test_lda_predict_proba.generate_dataset": ["<builtin>.zip", "numpy.hstack", "<builtin>.range", "<builtin>.len", "sklearn.utils.check_random_state", "numpy.vstack"], "sklearn.utils.check_random_state": [], "scipy.linalg.inv": [], "sklearn.tests.test_discriminant_analysis.test_lda_predict_proba.discriminant_func": ["numpy.exp", "numpy.dot"], "sklearn.tests.test_discriminant_analysis.test_lda_priors": ["sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "pytest.raises", "pytest.warns", "sklearn.utils._testing.assert_array_almost_equal", "numpy.array"], "sklearn.tests.test_discriminant_analysis.test_lda_coefs": ["sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.datasets.make_blobs"], "sklearn.datasets.make_blobs": [], "sklearn.tests.test_discriminant_analysis.test_lda_transform": ["pytest.raises", "sklearn.discriminant_analysis.LinearDiscriminantAnalysis"], "sklearn.tests.test_discriminant_analysis.test_lda_explained_variance_ratio": ["sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.utils._testing.assert_almost_equal", "numpy.random.RandomState"], "sklearn.tests.test_discriminant_analysis.test_lda_orthogonality": ["numpy.abs", "sklearn.utils._testing.assert_almost_equal", "sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "numpy.sqrt", "numpy.sum", "numpy.eye", "numpy.arange", "numpy.array", "numpy.cov", "numpy.dot", "numpy.repeat"], "numpy.repeat": [], "numpy.sqrt": [], "numpy.cov": [], "numpy.eye": [], "sklearn.tests.test_discriminant_analysis.test_lda_scaling": ["numpy.vstack", "sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "numpy.random.RandomState"], "sklearn.tests.test_discriminant_analysis.test_lda_store_covariance": ["<builtin>.hasattr", "sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "sklearn.utils._testing.assert_array_almost_equal", "numpy.array"], "sklearn.tests.test_discriminant_analysis.test_lda_shrinkage": ["sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "sklearn.covariance.ShrunkCovariance", "sklearn.utils._testing.assert_allclose", "numpy.random.RandomState"], "sklearn.tests.test_discriminant_analysis.test_lda_ledoitwolf": ["sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "sklearn.utils._testing.assert_allclose", "numpy.random.RandomState"], "sklearn.tests.test_discriminant_analysis.test_lda_ledoitwolf.StandardizedLedoitWolf.fit": ["sklearn.preprocessing.StandardScaler", "sklearn.covariance.ledoit_wolf"], "sklearn.preprocessing.StandardScaler": [], "sklearn.covariance.ledoit_wolf": [], "sklearn.tests.test_discriminant_analysis.test_lda_dimension_warning": ["<builtin>.range", "numpy.tile", "sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "sklearn.utils.check_random_state", "pytest.raises", "<builtin>.min"], "sklearn.tests.test_discriminant_analysis.test_lda_dtype_match": ["sklearn.discriminant_analysis.LinearDiscriminantAnalysis"], "sklearn.tests.test_discriminant_analysis.test_lda_numeric_consistency_float32_float64": ["sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "sklearn.utils._testing.assert_allclose"], "sklearn.tests.test_discriminant_analysis.test_qda": ["sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis", "numpy.any", "numpy.exp", "pytest.raises", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.utils._testing.assert_array_equal"], "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis": [], "sklearn.tests.test_discriminant_analysis.test_qda_priors": ["sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis", "numpy.sum", "numpy.array"], "sklearn.tests.test_discriminant_analysis.test_qda_prior_type": ["sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis", "sklearn.utils._testing.assert_array_equal", "<builtin>.isinstance", "sklearn.utils._testing._convert_container"], "sklearn.utils._testing._convert_container": [], "sklearn.tests.test_discriminant_analysis.test_qda_prior_copy": ["sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis", "sklearn.utils._testing.assert_array_equal", "numpy.array"], "sklearn.tests.test_discriminant_analysis.test_qda_store_covariance": ["sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis", "<builtin>.hasattr", "sklearn.utils._testing.assert_array_almost_equal", "numpy.array"], "sklearn.tests.test_discriminant_analysis.test_qda_regularization": ["sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis", "pytest.warns", "numpy.any", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_discriminant_analysis.test_covariance": ["sklearn.utils._testing.assert_almost_equal", "sklearn.datasets.make_blobs", "numpy.arange", "numpy.dot", "sklearn.discriminant_analysis._cov"], "sklearn.discriminant_analysis._cov": [], "sklearn.tests.test_discriminant_analysis.test_raises_value_error_on_same_number_of_classes_and_samples": ["pytest.raises", "sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "numpy.array"], "sklearn.tests.test_discriminant_analysis.test_get_feature_names_out": ["sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "numpy.array", "sklearn.utils._testing.assert_array_equal", "<builtin>.range"], "sklearn.tests.test_discriminant_analysis.test_lda_array_api": ["sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.fit", "pytest.importorskip", "sklearn.base.BaseEstimator.fit", "<builtin>.vars", "sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "<builtin>.isinstance", "sklearn.utils._testing.assert_allclose", "sklearn.utils._array_api._convert_to_numpy", "sklearn._config.config_context", "sklearn.base.clone", "<builtin>.hasattr", "sklearn.tests.test_base.NoEstimator.fit", "<builtin>.getattr"], "sklearn.tests.test_base.NoEstimator.fit": [], "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.fit": [], "sklearn.base.BaseEstimator.fit": [], "<builtin>.vars": [], "sklearn._config.config_context": [], "sklearn.utils._array_api._convert_to_numpy": [], "sklearn.tests.test_random_projection": ["sklearn.tests.test_random_projection.make_sparse_random_data", "pytest.mark.parametrize", "<builtin>.int"], "sklearn.tests.test_random_projection.make_sparse_random_data": ["scipy.sparse.coo_matrix", "numpy.random.RandomState"], "scipy.sparse.coo_matrix": [], "sklearn.tests.test_random_projection.densify": ["scipy.sparse.issparse"], "<builtin>.int": [], "sklearn.tests.test_random_projection.test_invalid_jl_domain": ["pytest.raises", "sklearn.random_projection.johnson_lindenstrauss_min_dim"], "sklearn.random_projection.johnson_lindenstrauss_min_dim": [], "sklearn.tests.test_random_projection.test_input_size_jl_min_dim": ["pytest.raises", "sklearn.random_projection.johnson_lindenstrauss_min_dim", "numpy.full", "numpy.random.randint"], "numpy.random.randint": [], "numpy.full": [], "sklearn.tests.test_random_projection.check_input_size_random_matrix": ["pytest.raises"], "sklearn.tests.test_random_projection.check_size_generated": [], "sklearn.tests.test_random_projection.check_zero_mean_and_unit_norm": ["numpy.mean", "sklearn.utils._testing.assert_array_almost_equal", "numpy.linalg.norm", "sklearn.tests.test_random_projection.densify"], "numpy.linalg.norm": [], "sklearn.tests.test_random_projection.check_input_with_sparse_random_matrix": ["pytest.raises"], "sklearn.tests.test_random_projection.test_basic_property_of_random_matrix": ["sklearn.tests.test_random_projection.check_size_generated", "sklearn.tests.test_random_projection.check_input_size_random_matrix", "sklearn.tests.test_random_projection.check_zero_mean_and_unit_norm"], "sklearn.tests.test_random_projection.test_basic_property_of_sparse_random_matrix": ["functools.partial", "sklearn.tests.test_random_projection.check_zero_mean_and_unit_norm", "sklearn.tests.test_random_projection.check_input_with_sparse_random_matrix"], "functools.partial": [], "sklearn.tests.test_random_projection.test_gaussian_random_matrix": ["numpy.var", "numpy.mean", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.random_projection._gaussian_random_matrix"], "sklearn.random_projection._gaussian_random_matrix": [], "numpy.var": [], "sklearn.tests.test_random_projection.test_sparse_random_matrix": ["numpy.size", "sklearn.utils._testing.assert_almost_equal", "sklearn.tests.test_random_projection.densify", "numpy.unique", "numpy.sqrt", "numpy.var", "numpy.mean", "sklearn.random_projection._sparse_random_matrix"], "sklearn.random_projection._sparse_random_matrix": [], "numpy.size": [], "sklearn.tests.test_random_projection.test_random_projection_transformer_invalid_input": ["pytest.raises"], "sklearn.tests.test_random_projection.test_try_to_transform_before_fit": ["pytest.raises"], "sklearn.tests.test_random_projection.test_too_many_samples_to_find_a_safe_embedding": ["pytest.raises", "sklearn.tests.test_random_projection.make_sparse_random_data"], "sklearn.tests.test_random_projection.test_random_projection_embedding_quality": ["sklearn.tests.test_random_projection.make_sparse_random_data", "sklearn.metrics.euclidean_distances"], "sklearn.metrics.euclidean_distances": [], "sklearn.tests.test_random_projection.test_SparseRandomProj_output_representation": ["<builtin>.isinstance", "scipy.sparse.csr_matrix", "scipy.sparse.issparse"], "sklearn.tests.test_random_projection.test_correct_RandomProjection_dimensions_embedding": ["sklearn.utils._testing.assert_array_equal", "pytest.raises", "sklearn.utils._testing.assert_almost_equal"], "sklearn.tests.test_random_projection.test_warning_n_components_greater_than_n_features": ["sklearn.tests.test_random_projection.make_sparse_random_data", "pytest.warns", "<builtin>.int"], "sklearn.tests.test_random_projection.test_works_with_sparse_data": ["sklearn.tests.test_random_projection.make_sparse_random_data", "sklearn.tests.test_random_projection.densify", "<builtin>.int", "sklearn.utils._testing.assert_array_almost_equal", "scipy.sparse.csr_matrix"], "sklearn.tests.test_random_projection.test_johnson_lindenstrauss_min_dim": ["sklearn.random_projection.johnson_lindenstrauss_min_dim"], "sklearn.tests.test_random_projection.test_random_projection_feature_names_out": ["numpy.array", "sklearn.utils._testing.assert_array_equal", "<builtin>.range"], "sklearn.tests.test_random_projection.test_inverse_transform": ["warnings.catch_warnings", "warnings.filterwarnings", "sklearn.tests.test_random_projection.make_sparse_random_data", "sklearn.utils._testing.assert_allclose", "<builtin>.hasattr"], "sklearn.tests.test_random_projection.test_random_projection_dtype_match": ["numpy.random.RandomState"], "sklearn.tests.test_random_projection.test_random_projection_numerical_consistency": ["sklearn.utils._testing.assert_allclose_dense_sparse", "sklearn.utils._testing.assert_allclose", "numpy.random.RandomState"], "sklearn.utils._testing.assert_allclose_dense_sparse": [], "sklearn.tests.test_kernel_ridge": ["scipy.sparse.csc_matrix", "numpy.array", "scipy.sparse.csr_matrix", "sklearn.datasets.make_regression"], "sklearn.tests.test_kernel_ridge.test_kernel_ridge": ["sklearn.utils._testing.assert_array_almost_equal", "sklearn.linear_model.Ridge", "sklearn.kernel_ridge.KernelRidge"], "sklearn.linear_model.Ridge": [], "sklearn.kernel_ridge.KernelRidge": [], "sklearn.tests.test_kernel_ridge.test_kernel_ridge_csr": ["sklearn.utils._testing.assert_array_almost_equal", "sklearn.linear_model.Ridge", "sklearn.kernel_ridge.KernelRidge"], "sklearn.tests.test_kernel_ridge.test_kernel_ridge_csc": ["sklearn.utils._testing.assert_array_almost_equal", "sklearn.linear_model.Ridge", "sklearn.kernel_ridge.KernelRidge"], "sklearn.tests.test_kernel_ridge.test_kernel_ridge_singular_kernel": ["sklearn.utils._testing.assert_array_almost_equal", "sklearn.linear_model.Ridge", "sklearn.kernel_ridge.KernelRidge", "sklearn.utils._testing.ignore_warnings"], "sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed": ["sklearn.metrics.pairwise.pairwise_kernels", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.kernel_ridge.KernelRidge"], "sklearn.metrics.pairwise.pairwise_kernels": [], "sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed_kernel_unchanged": ["numpy.dot", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.kernel_ridge.KernelRidge"], "sklearn.tests.test_kernel_ridge.test_kernel_ridge_sample_weights": ["sklearn.kernel_ridge.KernelRidge", "sklearn.linear_model.Ridge", "sklearn.utils._testing.assert_array_almost_equal", "numpy.dot", "numpy.random.RandomState"], "sklearn.tests.test_kernel_ridge.test_kernel_ridge_multi_output": ["sklearn.utils._testing.assert_array_almost_equal", "sklearn.linear_model.Ridge", "sklearn.kernel_ridge.KernelRidge", "numpy.array"], "sklearn.tests.random_seed": [], "sklearn.tests.random_seed.XDistHooks.pytest_configure_node": [], "sklearn.tests.random_seed.pytest_configure": ["random.Random", "<builtin>.range", "<builtin>.ValueError", "os.environ.get", "<builtin>.int", "<builtin>.max", "<builtin>.hasattr", "<builtin>.min", "<builtin>.list"], "os.environ.get": [], "random.Random": [], "pytest.fixture": [], "sklearn.tests.random_seed.pytest_configure.GlobalRandomSeedPlugin": ["pytest.fixture"], "sklearn.tests.random_seed.pytest_configure.GlobalRandomSeedPlugin.global_random_seed": [], "sklearn.tests.random_seed.pytest_report_header": ["os.environ.get"], "sklearn.tests.test_docstrings": ["<builtin>.print", "pytest.mark.parametrize", "argparse.ArgumentParser", "pytest.importorskip", "re.match", "<builtin>.len", "sklearn.tests.test_docstrings.get_all_methods", "sklearn.tests.test_docstrings.get_all_functions_names", "sklearn.tests.test_docstrings.filter_errors", "sys.exit", "sklearn.tests.test_docstrings.repr_errors", "<builtin>.list"], "sklearn.tests.test_docstrings.get_all_methods": ["<builtin>.dir", "<builtin>.sorted", "<builtin>.isinstance", "sklearn.utils.discovery.all_estimators", "sklearn.utils.discovery.all_displays", "<builtin>.hasattr", "<builtin>.getattr"], "sklearn.utils.discovery.all_estimators": [], "sklearn.utils.discovery.all_displays": [], "sklearn.tests.test_docstrings.get_all_functions_names": ["sklearn.utils.discovery.all_functions"], "sklearn.utils.discovery.all_functions": [], "sklearn.tests.test_docstrings.filter_errors": ["<builtin>.isinstance", "<builtin>.getattr"], "sklearn.tests.test_docstrings.repr_errors": ["<builtin>.ValueError", "<builtin>.str", "inspect.signature", "<builtin>.hasattr", "<builtin>.getattr"], "sklearn.tests.test_docstrings.test_function_docstring": ["<builtin>.ValueError", "sklearn.tests.test_docstrings.repr_errors", "sklearn.tests.test_docstrings.filter_errors", "<builtin>.list"], "sklearn.tests.test_docstrings.test_docstring": ["<builtin>.ValueError", "sklearn.tests.test_docstrings.repr_errors", "sklearn.tests.test_docstrings.filter_errors", "<builtin>.list"], "argparse.ArgumentParser": [], "re.match": [], "<builtin>.print": [], "sys.exit": [], "sklearn.tests.test_common": ["pytest.mark.parametrize", "sklearn.pipeline.make_pipeline", "sklearn.tests.test_common._estimators_that_predict_in_fit", "sklearn.tests.test_common._generate_pipeline", "sklearn.tests.test_common._generate_column_transformer_instances", "sklearn.tests.test_common._tested_estimators", "sklearn.tests.test_common._tested_linear_classifiers", "sklearn.utils._testing.ignore_warnings", "sklearn.tests.test_common._include_in_get_feature_names_out_check", "sklearn.linear_model.LogisticRegression", "itertools.chain", "sklearn.utils.all_estimators", "sklearn.utils.estimator_checks.parametrize_with_checks", "functools.partial", "<builtin>.hasattr", "sklearn.tests.test_common._generate_search_cv_instances", "<builtin>.list"], "sklearn.tests.test_common.test_all_estimator_no_base_class": ["sklearn.utils.all_estimators"], "sklearn.tests.test_common._sample_func": [], "sklearn.tests.test_common.test_get_check_estimator_ids": ["sklearn.utils.estimator_checks._get_check_estimator_ids"], "sklearn.utils.estimator_checks._get_check_estimator_ids": [], "sklearn.tests.test_common._tested_estimators": ["sklearn.utils.all_estimators", "sklearn.utils.estimator_checks._construct_instance"], "sklearn.utils.estimator_checks.parametrize_with_checks": [], "sklearn.tests.test_common.test_estimators": ["sklearn.utils._testing.ignore_warnings", "sklearn.utils.estimator_checks._set_checking_parameters"], "sklearn.utils.estimator_checks._set_checking_parameters": [], "sklearn.tests.test_common.test_check_estimator_generate_only": ["sklearn.linear_model.LogisticRegression", "sklearn.utils.estimator_checks.check_estimator", "inspect.isgenerator"], "sklearn.utils.estimator_checks.check_estimator": [], "inspect.isgenerator": [], "sklearn.tests.test_common.test_configure": ["pytest.skip", "warnings.catch_warnings", "os.getcwd", "pytest.importorskip", "warnings.simplefilter", "<builtin>.open", "os.chdir", "<builtin>.exec", "os.path.exists", "os.path.join", "<builtin>.dict", "os.path.abspath"], "os.getcwd": [], "os.path.join": [], "os.path.abspath": [], "os.chdir": [], "<builtin>.open": [], "<builtin>.dict": [], "<builtin>.exec": [], "sklearn.tests.test_common._tested_linear_classifiers": ["warnings.catch_warnings", "<builtin>.len", "sklearn.utils.all_estimators", "<builtin>.issubclass", "<builtin>.getattr"], "<builtin>.issubclass": [], "sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers": ["sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier"], "sklearn.utils.estimator_checks.check_class_weight_balanced_linear_classifier": [], "sklearn.tests.test_common.test_import_all_consistency": ["pkgutil.walk_packages", "<builtin>.hasattr", "<builtin>.__import__", "<builtin>.getattr"], "sklearn.tests.test_common.test_import_all_consistency.<lambda1>": [], "<builtin>.__import__": [], "sklearn.tests.test_common.test_root_import_all_completeness": ["pkgutil.walk_packages"], "sklearn.tests.test_common.test_root_import_all_completeness.<lambda1>": [], "sklearn.tests.test_common.test_all_tests_are_importable": ["pkgutil.walk_packages", "re.compile"], "sklearn.tests.test_common.test_class_support_removed": ["pytest.raises", "sklearn.utils.estimator_checks.check_estimator", "sklearn.utils.estimator_checks.parametrize_with_checks"], "sklearn.tests.test_common._generate_column_transformer_instances": ["sklearn.preprocessing.StandardScaler", "sklearn.compose.ColumnTransformer"], "sklearn.compose.ColumnTransformer": [], "sklearn.tests.test_common._generate_pipeline": ["sklearn.linear_model.LogisticRegression", "sklearn.linear_model.Ridge", "sklearn.pipeline.Pipeline"], "sklearn.pipeline.Pipeline": [], "sklearn.tests.test_common._generate_search_cv_instances": ["itertools.product", "sklearn.utils._testing.set_random_state", "sklearn.pipeline.make_pipeline", "inspect.signature", "sklearn.decomposition.PCA"], "itertools.product": [], "sklearn.utils._testing.set_random_state": [], "sklearn.decomposition.PCA": [], "sklearn.pipeline.make_pipeline": [], "sklearn.tests.test_common.test_search_cv": ["sklearn.utils._testing.ignore_warnings"], "sklearn.tests.test_common.test_valid_tag_types": ["<builtin>.isinstance", "<builtin>.type", "sklearn.utils._tags._safe_tags"], "sklearn.utils._tags._safe_tags": [], "sklearn.tests.test_common.test_check_n_features_in_after_fitting": ["sklearn.utils.estimator_checks.check_n_features_in_after_fitting", "sklearn.utils.estimator_checks._set_checking_parameters"], "sklearn.utils.estimator_checks.check_n_features_in_after_fitting": [], "sklearn.tests.test_common._estimators_that_predict_in_fit": ["sklearn.tests.test_common._tested_estimators", "pytest.mark.xfail", "pytest.param", "<builtin>.set"], "pytest.mark.xfail": [], "pytest.param": [], "itertools.chain": [], "sklearn.tests.test_common.test_pandas_column_name_consistency": ["warnings.catch_warnings", "sklearn.utils.estimator_checks.check_dataframe_column_names_consistency", "sklearn.utils.estimator_checks._set_checking_parameters", "sklearn.utils._testing.ignore_warnings", "<builtin>.str"], "sklearn.utils.estimator_checks.check_dataframe_column_names_consistency": [], "sklearn.tests.test_common._include_in_get_feature_names_out_check": ["<builtin>.hasattr"], "sklearn.tests.test_common.test_transformers_get_feature_names_out": ["sklearn.utils.estimator_checks.check_transformer_get_feature_names_out_pandas", "sklearn.utils.estimator_checks.check_transformer_get_feature_names_out", "sklearn.utils._testing.ignore_warnings", "sklearn.utils.estimator_checks._set_checking_parameters"], "sklearn.utils.estimator_checks.check_transformer_get_feature_names_out": [], "sklearn.utils.estimator_checks.check_transformer_get_feature_names_out_pandas": [], "sklearn.tests.test_common.test_estimators_get_feature_names_out_error": ["pytest.xfail", "sklearn.utils.estimator_checks.check_get_feature_names_out_error", "sklearn.utils.estimator_checks._set_checking_parameters"], "pytest.xfail": [], "sklearn.utils.estimator_checks.check_get_feature_names_out_error": [], "sklearn.tests.test_common.test_estimators_do_not_raise_errors_in_init_or_set_params": ["inspect.signature", "numpy.array"], "sklearn.tests.test_common.test_check_param_validation": ["sklearn.utils.estimator_checks.check_param_validation", "sklearn.utils.estimator_checks._set_checking_parameters"], "sklearn.utils.estimator_checks.check_param_validation": [], "sklearn.tests.test_common.test_f_contiguous_array_estimator": ["<builtin>.hasattr", "numpy.round", "sklearn.datasets.make_blobs", "numpy.asfortranarray"], "numpy.asfortranarray": [], "sklearn.tests.test_common.test_set_output_transform": ["pytest.skip", "sklearn.utils.estimator_checks._set_checking_parameters", "sklearn.utils._testing.ignore_warnings", "sklearn.utils.estimator_checks.check_set_output_transform", "<builtin>.hasattr"], "sklearn.utils.estimator_checks.check_set_output_transform": [], "sklearn.tests.test_common.test_set_output_transform_pandas": ["pytest.skip", "sklearn.utils.estimator_checks._set_checking_parameters", "sklearn.utils._testing.ignore_warnings", "sklearn.utils.estimator_checks.check_set_output_transform_pandas", "<builtin>.hasattr"], "sklearn.utils.estimator_checks.check_set_output_transform_pandas": [], "sklearn.tests.test_common.test_global_output_transform_pandas": ["pytest.skip", "sklearn.utils.estimator_checks._set_checking_parameters", "sklearn.utils.estimator_checks.check_global_ouptut_transform_pandas", "sklearn.utils._testing.ignore_warnings", "<builtin>.hasattr"], "sklearn.utils.estimator_checks.check_global_ouptut_transform_pandas": [], "sklearn.tests.test_multioutput": ["<builtin>.map", "pytest.mark.parametrize", "<builtin>.len", "numpy.unique", "sklearn.utils.shuffle", "numpy.column_stack", "pytest.mark.filterwarnings", "<builtin>.list", "sklearn.datasets.load_iris"], "sklearn.tests.test_multioutput.test_multi_target_regression": ["sklearn.utils._testing.assert_almost_equal", "<builtin>.range", "sklearn.datasets.make_regression", "numpy.zeros_like", "sklearn.multioutput.MultiOutputRegressor", "sklearn.ensemble.GradientBoostingRegressor"], "numpy.zeros_like": [], "sklearn.ensemble.GradientBoostingRegressor": [], "sklearn.multioutput.MultiOutputRegressor": [], "sklearn.tests.test_multioutput.test_multi_target_regression_partial_fit": ["sklearn.utils._testing.assert_almost_equal", "<builtin>.range", "sklearn.datasets.make_regression", "sklearn.linear_model.SGDRegressor", "numpy.zeros_like", "sklearn.multioutput.MultiOutputRegressor", "<builtin>.hasattr"], "sklearn.linear_model.SGDRegressor": [], "sklearn.tests.test_multioutput.test_multi_target_regression_one_target": ["sklearn.ensemble.GradientBoostingRegressor", "pytest.raises", "sklearn.multioutput.MultiOutputRegressor", "sklearn.datasets.make_regression"], "sklearn.tests.test_multioutput.test_multi_target_sparse_regression": ["sklearn.linear_model.Lasso", "sklearn.multioutput.MultiOutputRegressor", "sklearn.utils._testing.assert_almost_equal", "sklearn.datasets.make_regression"], "sklearn.linear_model.Lasso": [], "sklearn.tests.test_multioutput.test_multi_target_sample_weights_api": ["sklearn.linear_model.OrthogonalMatchingPursuit", "pytest.raises", "sklearn.ensemble.GradientBoostingRegressor", "sklearn.multioutput.MultiOutputRegressor"], "sklearn.linear_model.OrthogonalMatchingPursuit": [], "sklearn.tests.test_multioutput.test_multi_target_sample_weight_partial_fit": ["sklearn.linear_model.SGDRegressor", "sklearn.multioutput.MultiOutputRegressor"], "sklearn.tests.test_multioutput.test_multi_target_sample_weights": ["sklearn.ensemble.GradientBoostingRegressor", "sklearn.utils._testing.assert_almost_equal", "sklearn.multioutput.MultiOutputRegressor"], "numpy.column_stack": [], "<builtin>.map": [], "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit_parallelism": ["sklearn.linear_model.SGDClassifier", "joblib.cpu_count", "sklearn.multioutput.MultiOutputClassifier"], "sklearn.linear_model.SGDClassifier": [], "sklearn.multioutput.MultiOutputClassifier": [], "joblib.cpu_count": [], "sklearn.tests.test_multioutput.test_hasattr_multi_output_predict_proba": ["sklearn.linear_model.SGDClassifier", "<builtin>.hasattr", "sklearn.multioutput.MultiOutputClassifier"], "sklearn.tests.test_multioutput.test_multi_output_predict_proba": ["pytest.raises", "sklearn.linear_model.SGDClassifier", "sklearn.model_selection.GridSearchCV", "sklearn.multioutput.MultiOutputClassifier"], "sklearn.tests.test_multioutput.test_multi_output_predict_proba.custom_scorer": ["<builtin>.hasattr"], "sklearn.model_selection.GridSearchCV": [], "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit": ["sklearn.base.BaseEstimator.predict", "<builtin>.range", "sklearn.linear_model.SGDClassifier", "sklearn.tests.test_base.NoEstimator.predict", "sklearn.base.clone", "sklearn.base.BaseEstimator.partial_fit", "sklearn.multioutput.MultiOutputClassifier", "sklearn.utils._testing.assert_array_equal"], "sklearn.base.BaseEstimator.partial_fit": [], "sklearn.tests.test_base.NoEstimator.predict": [], "sklearn.base.BaseEstimator.predict": [], "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit_no_first_classes_exception": ["pytest.raises", "sklearn.linear_model.SGDClassifier", "sklearn.multioutput.MultiOutputClassifier"], "sklearn.tests.test_multioutput.test_multi_output_classification": ["sklearn.ensemble.RandomForestClassifier", "<builtin>.range", "<builtin>.len", "<builtin>.list", "numpy.dstack", "sklearn.base.clone", "sklearn.multioutput.MultiOutputClassifier", "numpy.argmax", "sklearn.utils._testing.assert_array_equal"], "sklearn.ensemble.RandomForestClassifier": [], "numpy.dstack": [], "numpy.argmax": [], "sklearn.tests.test_multioutput.test_multiclass_multioutput_estimator": ["sklearn.multiclass.OneVsRestClassifier", "<builtin>.range", "<builtin>.list", "sklearn.base.clone", "sklearn.svm.LinearSVC", "sklearn.multioutput.MultiOutputClassifier"], "sklearn.svm.LinearSVC": [], "sklearn.multiclass.OneVsRestClassifier": [], "sklearn.tests.test_multioutput.test_multiclass_multioutput_estimator_predict_proba": ["sklearn.utils._testing.assert_almost_equal", "<builtin>.range", "numpy.concatenate", "<builtin>.len", "sklearn.linear_model.LogisticRegression", "numpy.array", "sklearn.multioutput.MultiOutputClassifier", "numpy.random.RandomState"], "numpy.concatenate": [], "sklearn.tests.test_multioutput.test_multi_output_classification_sample_weights": ["numpy.asarray", "sklearn.ensemble.RandomForestClassifier", "sklearn.multioutput.MultiOutputClassifier", "sklearn.utils._testing.assert_almost_equal"], "numpy.asarray": [], "sklearn.tests.test_multioutput.test_multi_output_classification_partial_fit_sample_weights": ["numpy.asarray", "sklearn.linear_model.SGDClassifier", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.multioutput.MultiOutputClassifier"], "sklearn.tests.test_multioutput.test_multi_output_exceptions": ["pytest.raises", "sklearn.svm.LinearSVC", "sklearn.multioutput.MultiOutputClassifier", "numpy.column_stack"], "sklearn.tests.test_multioutput.test_multi_output_not_fitted_error": ["sklearn.linear_model.LogisticRegression", "pytest.raises", "sklearn.multioutput.MultiOutputClassifier", "<builtin>.getattr"], "sklearn.tests.test_multioutput.test_multi_output_delegate_predict_proba": ["sklearn.linear_model.LogisticRegression", "pytest.raises", "<builtin>.hasattr", "sklearn.svm.LinearSVC", "sklearn.multioutput.MultiOutputClassifier"], "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations": ["<builtin>.format", "sklearn.datasets.make_classification", "numpy.array", "<builtin>.int"], "<builtin>.format": [], "sklearn.tests.test_multioutput.test_classifier_chain_fit_and_predict_with_linear_svc": ["<builtin>.hasattr", "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations", "sklearn.multioutput.ClassifierChain", "sklearn.svm.LinearSVC", "sklearn.utils._testing.assert_array_equal"], "sklearn.multioutput.ClassifierChain": [], "sklearn.tests.test_multioutput.test_classifier_chain_fit_and_predict_with_sparse_data": ["sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations", "sklearn.linear_model.LogisticRegression", "sklearn.multioutput.ClassifierChain", "scipy.sparse.csr_matrix", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_multioutput.test_classifier_chain_vs_independent_models": ["sklearn.multiclass.OneVsRestClassifier", "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations", "sklearn.linear_model.LogisticRegression", "sklearn.multioutput.ClassifierChain", "sklearn.metrics.jaccard_score"], "sklearn.metrics.jaccard_score": [], "sklearn.tests.test_multioutput.test_base_chain_fit_and_predict": ["<builtin>.range", "<builtin>.isinstance", "sklearn.linear_model.Ridge", "sklearn.multioutput.RegressorChain", "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations", "sklearn.linear_model.LogisticRegression", "sklearn.multioutput.ClassifierChain", "<builtin>.list", "sklearn.utils._testing.assert_array_equal"], "sklearn.multioutput.RegressorChain": [], "sklearn.tests.test_multioutput.test_base_chain_fit_and_predict_with_sparse_data_and_cv": ["sklearn.linear_model.Ridge", "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations", "sklearn.multioutput.RegressorChain", "sklearn.linear_model.LogisticRegression", "sklearn.multioutput.ClassifierChain", "scipy.sparse.csr_matrix"], "sklearn.tests.test_multioutput.test_base_chain_random_order": ["<builtin>.zip", "<builtin>.range", "<builtin>.len", "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.base.clone", "<builtin>.set", "<builtin>.list", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_multioutput.test_base_chain_crossval_fit_and_predict": ["sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.fit", "sklearn.base.BaseEstimator.predict", "sklearn.base.BaseEstimator.fit", "<builtin>.isinstance", "sklearn.tests.test_multioutput.generate_multilabel_dataset_with_correlations", "sklearn.tests.test_base.NoEstimator.predict", "numpy.all", "sklearn.metrics.mean_squared_error", "sklearn.base.clone", "sklearn.metrics.jaccard_score", "sklearn.tests.test_base.NoEstimator.fit"], "sklearn.metrics.mean_squared_error": [], "sklearn.tests.test_multioutput.test_multi_output_classes_": ["<builtin>.zip", "<builtin>.isinstance", "<builtin>.len", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_multioutput.DummyRegressorWithFitParams.fit": ["<builtin>.super"], "<builtin>.super": [], "sklearn.tests.test_multioutput.DummyClassifierWithFitParams.fit": ["<builtin>.super"], "sklearn.tests.test_multioutput.test_multioutput_estimator_with_fit_params": ["numpy.zeros_like"], "sklearn.tests.test_multioutput.test_regressor_chain_w_fit_params": ["sklearn.linear_model.SGDRegressor.__init__", "sklearn.datasets.make_regression", "sklearn.multioutput.RegressorChain", "numpy.random.RandomState"], "sklearn.tests.test_multioutput.test_regressor_chain_w_fit_params.MySGD.fit": ["<builtin>.super"], "sklearn.linear_model.SGDRegressor.__init__": [], "sklearn.tests.test_multioutput.test_support_missing_values": ["sklearn.pipeline.make_pipeline", "sklearn.impute.SimpleImputer", "numpy.random.RandomState"], "sklearn.impute.SimpleImputer": [], "sklearn.tests.test_multioutput.test_classifier_chain_tuple_order": ["sklearn.multioutput.ClassifierChain", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.ensemble.RandomForestClassifier"], "sklearn.tests.test_multioutput.test_classifier_chain_tuple_invalid_order": ["pytest.raises", "<builtin>.tuple", "sklearn.multioutput.ClassifierChain", "sklearn.ensemble.RandomForestClassifier"], "<builtin>.tuple": [], "sklearn.tests.test_multioutput.test_classifier_chain_verbose": ["sklearn.datasets.make_multilabel_classification", "re.match", "sklearn.multioutput.ClassifierChain", "sklearn.model_selection.train_test_split", "sklearn.tree.DecisionTreeClassifier"], "sklearn.datasets.make_multilabel_classification": [], "sklearn.tree.DecisionTreeClassifier": [], "sklearn.tests.test_multioutput.test_regressor_chain_verbose": ["sklearn.datasets.make_regression", "re.match", "sklearn.multioutput.RegressorChain", "sklearn.model_selection.train_test_split", "sklearn.linear_model.LinearRegression"], "sklearn.linear_model.LinearRegression": [], "sklearn.tests.test_multioutput.test_multioutputregressor_ducktypes_fitted_estimator": ["sklearn.linear_model.SGDRegressor", "sklearn.linear_model.Ridge", "sklearn.ensemble.StackingRegressor", "sklearn.multioutput.MultiOutputRegressor", "sklearn.datasets.load_linnerud"], "sklearn.datasets.load_linnerud": [], "sklearn.ensemble.StackingRegressor": [], "sklearn.tests.test_base": ["pytest.mark.parametrize", "sklearn.utils._testing.ignore_warnings"], "sklearn.tests.test_base.MyEstimator.__init__": [], "sklearn.tests.test_base.K.__init__": [], "sklearn.tests.test_base.T.__init__": [], "sklearn.tests.test_base.NaNTag._more_tags": [], "sklearn.tests.test_base.NoNaNTag._more_tags": [], "sklearn.tests.test_base.OverrideTag._more_tags": [], "sklearn.tests.test_base.DiamondOverwriteTag._more_tags": ["<builtin>.dict"], "sklearn.tests.test_base.ModifyInitParams.__init__": [], "sklearn.tests.test_base.Buggy.__init__": [], "sklearn.tests.test_base.NoEstimator.__init__": [], "sklearn.tests.test_base.VargEstimator.__init__": [], "sklearn.tests.test_base.test_clone": ["sklearn.base.BaseEstimator.get_params", "sklearn.base.clone", "numpy.zeros", "sklearn.feature_selection.SelectFpr"], "sklearn.feature_selection.SelectFpr": [], "sklearn.base.BaseEstimator.get_params": [], "sklearn.tests.test_base.test_clone_2": ["sklearn.base.clone", "<builtin>.hasattr", "sklearn.feature_selection.SelectFpr"], "sklearn.tests.test_base.test_clone_buggy": ["sklearn.tests.test_base.NoEstimator.__init__", "sklearn.tests.test_base.Buggy.__init__", "pytest.raises", "sklearn.tests.test_base.ModifyInitParams.__init__", "sklearn.tests.test_base.VargEstimator.__init__", "sklearn.base.clone"], "sklearn.tests.test_base.test_clone_empty_array": ["sklearn.tests.test_base.NoEstimator.__init__", "sklearn.tests.test_base.MyEstimator.__init__", "scipy.sparse.csr_matrix", "numpy.array", "sklearn.base.clone", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_base.test_clone_nan": ["sklearn.base.clone", "sklearn.tests.test_base.NoEstimator.__init__", "sklearn.tests.test_base.MyEstimator.__init__"], "sklearn.tests.test_base.test_clone_sparse_matrices": ["sklearn.tests.test_base.NoEstimator.__init__", "<builtin>.dir", "sklearn.tests.test_base.MyEstimator.__init__", "sklearn.utils._testing.assert_array_equal", "numpy.nan.toarray", "numpy.eye", "sklearn.base.clone", "sklearn.base.BaseEstimator.toarray", "<builtin>.getattr"], "sklearn.base.BaseEstimator.toarray": [], "numpy.nan.toarray": [], "sklearn.tests.test_base.test_clone_estimator_types": ["sklearn.base.clone", "sklearn.tests.test_base.NoEstimator.__init__", "sklearn.tests.test_base.MyEstimator.__init__"], "sklearn.tests.test_base.test_clone_class_rather_than_instance": ["pytest.raises", "sklearn.base.clone"], "sklearn.tests.test_base.test_repr": ["sklearn.tests.test_base.NoEstimator.__init__", "sklearn.tests.test_base.MyEstimator.__init__", "sklearn.tests.test_base.T.__init__", "sklearn.tests.test_base.K.__init__", "<builtin>.len", "<builtin>.repr"], "<builtin>.repr": [], "sklearn.tests.test_base.test_str": ["sklearn.tests.test_base.NoEstimator.__init__", "<builtin>.str", "sklearn.tests.test_base.MyEstimator.__init__"], "sklearn.tests.test_base.test_get_params": ["sklearn.tests.test_base.T.__init__", "sklearn.tests.test_base.K.__init__", "pytest.raises", "sklearn.base.BaseEstimator.set_params", "sklearn.base.BaseEstimator.get_params"], "sklearn.base.BaseEstimator.set_params": [], "sklearn.tests.test_base.test_is_classifier": ["sklearn.model_selection.GridSearchCV", "sklearn.svm.SVC", "sklearn.base.is_classifier", "sklearn.pipeline.Pipeline"], "sklearn.svm.SVC": [], "sklearn.base.is_classifier": [], "sklearn.tests.test_base.test_set_params": ["pytest.raises", "sklearn.svm.SVC", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_base.test_set_params_passes_all_parameters": [], "sklearn.tests.test_base.test_set_params_passes_all_parameters.TestDecisionTree.set_params": ["<builtin>.super"], "sklearn.tests.test_base.test_set_params_updates_valid_params": ["sklearn.svm.SVC", "sklearn.tree.DecisionTreeClassifier", "sklearn.model_selection.GridSearchCV"], "sklearn.tests.test_base.test_score_sample_weight": ["<builtin>.len", "numpy.random.RandomState"], "sklearn.tests.test_base.test_clone_pandas_dataframe": ["sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.__init__", "sklearn.utils._mocking.MockDataFrame", "sklearn.base.clone", "numpy.arange"], "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.__init__": [], "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.transform": [], "sklearn.utils._mocking.MockDataFrame": [], "sklearn.tests.test_base.test_pickle_version_warning_is_not_raised_with_matching_version": ["sklearn.utils._testing.assert_no_warnings", "sklearn.tree.DecisionTreeClassifier", "pickle.dumps", "sklearn.datasets.load_iris"], "sklearn.utils._testing.assert_no_warnings": [], "sklearn.tests.test_base.TreeBadVersion.__getstate__": ["<builtin>.dict", "sklearn.tree.DecisionTreeClassifier.__dict__.items"], "sklearn.tree.DecisionTreeClassifier.__dict__.items": [], "sklearn.tests.test_base.test_pickle_version_warning_is_issued_upon_different_version": ["<builtin>.isinstance", "pickle.dumps", "sklearn.tree.DecisionTreeClassifier.fit", "pickle.loads", "pytest.warns", "sklearn.datasets.load_iris", "sklearn.tree.DecisionTreeClassifier.__init__"], "sklearn.tree.DecisionTreeClassifier.__init__": [], "sklearn.tree.DecisionTreeClassifier.fit": [], "sklearn.tests.test_base.TreeNoVersion.__getstate__": [], "sklearn.tests.test_base.test_pickle_version_warning_is_issued_when_no_version_info_in_pickle": ["pickle.dumps", "sklearn.tree.DecisionTreeClassifier.fit", "pickle.loads", "pytest.warns", "sklearn.datasets.load_iris", "sklearn.tree.DecisionTreeClassifier.__init__"], "sklearn.tests.test_base.test_pickle_version_no_warning_is_issued_with_non_sklearn_estimator": ["pickle.dumps", "sklearn.tree.DecisionTreeClassifier.fit", "sklearn.datasets.load_iris", "sklearn.utils._testing.assert_no_warnings", "sklearn.tree.DecisionTreeClassifier.__init__"], "sklearn.tests.test_base.DontPickleAttributeMixin.__getstate__": [], "sklearn.tests.test_base.DontPickleAttributeMixin.__setstate__": [], "sklearn.tests.test_base.MultiInheritanceEstimator.__init__": [], "sklearn.tests.test_base.test_pickling_when_getstate_is_overwritten_by_mixin": ["pickle.loads", "sklearn.tests.test_base.MultiInheritanceEstimator.__init__", "pickle.dumps"], "sklearn.tests.test_base.test_pickling_when_getstate_is_overwritten_by_mixin_outside_of_sklearn": ["sklearn.tests.test_base.DontPickleAttributeMixin.__getstate__", "sklearn.tests.test_base.DontPickleAttributeMixin.__setstate__", "sklearn.tests.test_base.MultiInheritanceEstimator.__init__", "<builtin>.type"], "sklearn.tests.test_base.SingleInheritanceEstimator.__init__": [], "sklearn.tests.test_base.SingleInheritanceEstimator.__getstate__": ["sklearn.base.BaseEstimator.__dict__.copy"], "sklearn.base.BaseEstimator.__dict__.copy": [], "sklearn.tests.test_base.test_pickling_works_when_getstate_is_overwritten_in_the_child_class": ["pickle.loads", "sklearn.tests.test_base.SingleInheritanceEstimator.__init__", "pickle.dumps"], "sklearn.tests.test_base.test_tag_inheritance": ["sklearn.base.BaseEstimator._get_tags", "sklearn.base.BaseEstimator.__init__"], "sklearn.base.BaseEstimator.__init__": [], "sklearn.base.BaseEstimator._get_tags": [], "sklearn.tests.test_base.test_raises_on_get_params_non_attribute": ["pytest.raises", "sklearn.base.BaseEstimator.get_params", "sklearn.tests.test_base.test_raises_on_get_params_non_attribute.MyEstimator.__init__"], "sklearn.tests.test_base.test_raises_on_get_params_non_attribute.MyEstimator.__init__": [], "sklearn.tests.test_base.test_raises_on_get_params_non_attribute.MyEstimator.fit": [], "sklearn.tests.test_base.test_repr_mimebundle_": ["sklearn.config_context", "sklearn.tree.DecisionTreeClassifier"], "sklearn.tests.test_base.test_repr_html_wraps": ["pytest.raises", "sklearn.config_context", "sklearn.tree.DecisionTreeClassifier"], "sklearn.tests.test_base.test_n_features_in_validation": ["pytest.raises", "sklearn.base.BaseEstimator._check_n_features", "sklearn.tests.test_base.NoEstimator.__init__", "sklearn.tests.test_base.MyEstimator.__init__"], "sklearn.base.BaseEstimator._check_n_features": [], "sklearn.tests.test_base.test_n_features_in_no_validation": ["sklearn.base.BaseEstimator._check_n_features", "<builtin>.hasattr", "sklearn.tests.test_base.NoEstimator.__init__", "sklearn.tests.test_base.MyEstimator.__init__"], "sklearn.tests.test_base.test_feature_names_in": ["warnings.catch_warnings", "pytest.importorskip", "sklearn.tests.test_base.test_feature_names_in.NoOpTransformer.transform", "warnings.simplefilter", "pytest.raises", "re.escape", "pytest.warns", "sklearn.base.BaseEstimator.__init__", "sklearn.tests.test_base.test_feature_names_in.NoOpTransformer.fit", "<builtin>.hasattr", "sklearn.datasets.load_iris", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_base.test_feature_names_in.NoOpTransformer.fit": ["sklearn.base.TransformerMixin._validate_data"], "sklearn.base.TransformerMixin._validate_data": [], "sklearn.tests.test_base.test_feature_names_in.NoOpTransformer.transform": ["sklearn.base.TransformerMixin._validate_data"], "sklearn.tests.test_base.test_clone_keeps_output_config": ["sklearn.preprocessing.StandardScaler", "sklearn.base.clone", "sklearn.utils._set_output._get_output_config"], "sklearn.utils._set_output._get_output_config": [], "sklearn.tests.test_base.test_estimator_empty_instance_dict": ["pickle.loads", "sklearn.base.BaseEstimator", "pickle.dumps"], "sklearn.base.BaseEstimator": [], "sklearn.tests.test_base.test_estimator_getstate_using_slots_error_message": ["pytest.raises", "pickle.dumps", "sklearn.base.BaseEstimator.__getstate__", "sklearn.base.BaseEstimator.__init__"], "sklearn.base.BaseEstimator.__getstate__": [], "sklearn.tests.test_pipeline": ["itertools.product", "pytest.mark.parametrize", "<builtin>.isinstance", "<builtin>.hasattr", "sklearn.datasets.load_iris"], "sklearn.tests.test_pipeline.NoFit.__init__": [], "sklearn.tests.test_pipeline.NoTrans.fit": [], "sklearn.tests.test_pipeline.NoTrans.get_params": [], "sklearn.tests.test_pipeline.NoTrans.set_params": [], "sklearn.tests.test_pipeline.NoInvTransf.transform": [], "sklearn.tests.test_pipeline.Transf.transform": [], "sklearn.tests.test_pipeline.Transf.inverse_transform": [], "sklearn.tests.test_pipeline.TransfFitParams.fit": [], "sklearn.tests.test_pipeline.Mult.__init__": [], "sklearn.tests.test_pipeline.Mult.fit": [], "sklearn.tests.test_pipeline.Mult.transform": ["numpy.asarray"], "sklearn.tests.test_pipeline.Mult.inverse_transform": ["numpy.asarray"], "sklearn.tests.test_pipeline.Mult.predict": ["numpy.asarray"], "sklearn.tests.test_pipeline.Mult.score": ["numpy.sum"], "sklearn.tests.test_pipeline.FitParamT.__init__": [], "sklearn.tests.test_pipeline.FitParamT.fit": [], "sklearn.tests.test_pipeline.FitParamT.predict": [], "sklearn.tests.test_pipeline.FitParamT.fit_predict": ["sklearn.tests.test_pipeline.FitParamT.predict", "sklearn.tests.test_pipeline.FitParamT.fit"], "sklearn.tests.test_pipeline.FitParamT.score": ["numpy.sum"], "sklearn.tests.test_pipeline.DummyTransf.fit": ["numpy.mean", "time.time"], "time.time": [], "sklearn.tests.test_pipeline.DummyEstimatorParams.fit": [], "sklearn.tests.test_pipeline.DummyEstimatorParams.predict": [], "sklearn.tests.test_pipeline.DummyEstimatorParams.predict_proba": [], "sklearn.tests.test_pipeline.DummyEstimatorParams.predict_log_proba": [], "sklearn.tests.test_pipeline.test_pipeline_invalid_parameters": ["sklearn.svm.SVC", "sklearn.feature_selection.SelectKBest", "pytest.raises", "re.escape", "sklearn.base.BaseEstimator.set_params", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.base.clone", "sklearn.base.BaseEstimator.get_params", "<builtin>.repr", "<builtin>.dict", "sklearn.pipeline.Pipeline"], "sklearn.feature_selection.SelectKBest": [], "sklearn.tests.test_pipeline.test_pipeline_init_tuple": ["sklearn.pipeline.Pipeline", "sklearn.tests.test_pipeline.FitParamT.__init__", "sklearn.tests.test_pipeline.NoFit.__init__", "numpy.array"], "sklearn.tests.test_pipeline.test_pipeline_methods_anova": ["sklearn.linear_model.LogisticRegression", "sklearn.feature_selection.SelectKBest", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_fit_params": ["re.escape", "sklearn.tests.test_pipeline.FitParamT.__init__", "pytest.raises", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_sample_weight_supported": ["sklearn.pipeline.Pipeline", "sklearn.tests.test_pipeline.FitParamT.__init__", "sklearn.tests.test_pipeline.NoFit.__init__", "numpy.array"], "sklearn.tests.test_pipeline.test_pipeline_sample_weight_unsupported": ["re.escape", "pytest.raises", "sklearn.tests.test_pipeline.NoFit.__init__", "numpy.array", "sklearn.tests.test_pipeline.Mult.__init__", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_raise_set_params_error": ["re.escape", "pytest.raises", "sklearn.linear_model.LinearRegression", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_methods_pca_svm": ["sklearn.svm.SVC", "sklearn.decomposition.PCA", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_score_samples_pca_lof": ["sklearn.pipeline.Pipeline", "sklearn.decomposition.PCA", "sklearn.utils._testing.assert_allclose", "sklearn.neighbors.LocalOutlierFactor"], "sklearn.neighbors.LocalOutlierFactor": [], "sklearn.tests.test_pipeline.test_score_samples_on_pipeline_without_score_samples": ["sklearn.linear_model.LogisticRegression", "sklearn.pipeline.make_pipeline", "pytest.raises", "numpy.array"], "sklearn.tests.test_pipeline.test_pipeline_methods_preprocessing_svm": ["sklearn.preprocessing.StandardScaler", "<builtin>.len", "numpy.unique", "sklearn.decomposition.PCA", "sklearn.svm.SVC", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_fit_predict_on_pipeline": ["sklearn.preprocessing.StandardScaler", "sklearn.cluster.KMeans", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_fit_predict_on_pipeline_without_fit_predict": ["sklearn.preprocessing.StandardScaler", "pytest.raises", "sklearn.decomposition.PCA", "<builtin>.getattr", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_fit_predict_with_intermediate_fit_params": ["sklearn.tests.test_pipeline.FitParamT.__init__", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_predict_methods_with_predict_params": ["sklearn.tests.test_pipeline.NoFit.__init__", "<builtin>.getattr", "sklearn.base.BaseEstimator.__init__", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_feature_union": ["sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.fit", "sklearn.base.BaseEstimator.transform", "sklearn.base.BaseEstimator.fit", "sklearn.utils._testing.assert_array_equal", "sklearn.feature_selection.SelectKBest", "sklearn.base.BaseEstimator.fit_transform", "pytest.raises", "sklearn.base.BaseEstimator.set_params", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.utils._testing.assert_array_almost_equal", "scipy.sparse.csr_matrix", "sklearn.base.clone", "sklearn.decomposition.TruncatedSVD", "sklearn.tests.test_base.NoEstimator.fit", "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.transform", "sklearn.pipeline.FeatureUnion"], "sklearn.decomposition.TruncatedSVD": [], "sklearn.pipeline.FeatureUnion": [], "sklearn.base.BaseEstimator.transform": [], "sklearn.base.BaseEstimator.fit_transform": [], "sklearn.tests.test_pipeline.test_feature_union_named_transformers": ["sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_pipeline.test_make_union": ["sklearn.pipeline.make_union", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.decomposition.PCA", "<builtin>.zip"], "sklearn.pipeline.make_union": [], "sklearn.tests.test_pipeline.test_make_union_kwargs": ["sklearn.pipeline.make_union", "pytest.raises", "re.escape", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.decomposition.PCA"], "sklearn.tests.test_pipeline.test_pipeline_transform": ["sklearn.utils._testing.assert_array_almost_equal", "sklearn.decomposition.PCA", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_fit_transform": ["sklearn.tests.test_pipeline.NoTrans.fit", "sklearn.tests.test_pipeline.TransfFitParams.fit", "sklearn.tests.test_pipeline.NoInvTransf.transform", "sklearn.tests.test_pipeline.DummyTransf.fit", "sklearn.tests.test_pipeline.Transf.transform", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_slice": ["<builtin>.isinstance", "pytest.raises", "sklearn.tests.test_pipeline.FitParamT.__init__", "sklearn.tests.test_pipeline.NoFit.__init__", "<builtin>.list", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_index": ["pytest.raises", "sklearn.tests.test_pipeline.FitParamT.__init__", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_set_pipeline_steps": ["re.escape", "sklearn.tests.test_pipeline.NoFit.__init__", "pytest.raises", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_named_steps": ["sklearn.tests.test_pipeline.Mult.__init__", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_correctly_adjusts_steps": ["sklearn.tests.test_pipeline.Mult.__init__", "sklearn.pipeline.Pipeline", "numpy.array"], "sklearn.tests.test_pipeline.test_set_pipeline_step_passthrough": ["sklearn.tests.test_pipeline.test_set_pipeline_step_passthrough.make", "sklearn.utils._testing.assert_array_equal", "pytest.raises", "numpy.array", "sklearn.tests.test_pipeline.Mult.__init__", "<builtin>.getattr", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_set_pipeline_step_passthrough.make": ["sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_ducktyping": ["<builtin>.hasattr", "sklearn.tests.test_pipeline.Mult.__init__", "sklearn.pipeline.make_pipeline", "sklearn.tests.test_pipeline.NoFit.__init__"], "sklearn.tests.test_pipeline.test_make_pipeline": ["sklearn.pipeline.make_pipeline", "<builtin>.isinstance", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.tests.test_pipeline.FitParamT.__init__"], "sklearn.tests.test_pipeline.test_feature_union_weights": ["sklearn.feature_selection.SelectKBest", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.decomposition.PCA", "sklearn.utils._testing.assert_array_equal", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_pipeline.test_feature_union_parallel": ["sklearn.feature_extraction.text.CountVectorizer", "<builtin>.len", "sklearn.utils._testing.assert_array_equal", "sklearn.pipeline.FeatureUnion"], "sklearn.feature_extraction.text.CountVectorizer": [], "sklearn.tests.test_pipeline.test_feature_union_feature_names": ["<builtin>.len", "re.escape", "pytest.raises", "sklearn.feature_extraction.text.CountVectorizer", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_pipeline.test_classes_property": ["sklearn.pipeline.make_pipeline", "sklearn.utils._testing.assert_array_equal", "sklearn.feature_selection.SelectKBest", "<builtin>.getattr", "numpy.unique", "pytest.raises", "sklearn.linear_model.LogisticRegression", "sklearn.linear_model.LinearRegression"], "sklearn.tests.test_pipeline.test_set_feature_union_steps": ["numpy.asarray", "sklearn.tests.test_pipeline.Mult.__init__", "sklearn.utils._testing.assert_array_equal", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_pipeline.test_set_feature_union_steps.<lambda1>": [], "sklearn.tests.test_pipeline.test_set_feature_union_steps.<lambda2>": [], "sklearn.tests.test_pipeline.test_set_feature_union_steps.<lambda3>": [], "sklearn.tests.test_pipeline.test_set_feature_union_step_drop": ["numpy.asarray", "sklearn.tests.test_pipeline.Mult.__init__", "sklearn.utils._testing.assert_array_equal", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_pipeline.test_set_feature_union_step_drop.<lambda1>": [], "sklearn.tests.test_pipeline.test_set_feature_union_step_drop.<lambda2>": [], "sklearn.tests.test_pipeline.test_set_feature_union_passthrough": ["numpy.asarray", "numpy.hstack", "sklearn.decomposition.PCA", "sklearn.tests.test_pipeline.Mult.__init__", "sklearn.utils._testing.assert_array_equal", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_pipeline.test_set_feature_union_passthrough.<lambda1>": [], "sklearn.tests.test_pipeline.test_set_feature_union_passthrough.<lambda2>": [], "sklearn.tests.test_pipeline.test_feature_union_passthrough_get_feature_names_out": ["sklearn.decomposition.PCA", "sklearn.utils._testing.assert_array_equal", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_pipeline.test_step_name_validation": ["pytest.raises", "sklearn.tests.test_pipeline.Mult.__init__", "<builtin>.setattr"], "<builtin>.setattr": [], "sklearn.tests.test_pipeline.test_set_params_nested_pipeline": ["sklearn.linear_model.Lasso", "sklearn.dummy.DummyRegressor", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_memory": ["tempfile.mkdtemp", "shutil.rmtree", "joblib.Memory", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.base.clone", "<builtin>.hasattr", "sklearn.svm.SVC", "sklearn.utils._testing.assert_array_equal", "sklearn.pipeline.Pipeline"], "tempfile.mkdtemp": [], "joblib.Memory": [], "shutil.rmtree": [], "sklearn.tests.test_pipeline.test_make_pipeline_memory": ["tempfile.mkdtemp", "sklearn.pipeline.make_pipeline", "shutil.rmtree", "joblib.Memory", "<builtin>.len", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.svm.SVC"], "sklearn.tests.test_pipeline.FeatureNameSaver.fit": ["sklearn.base.BaseEstimator._check_feature_names"], "sklearn.base.BaseEstimator._check_feature_names": [], "sklearn.tests.test_pipeline.FeatureNameSaver.transform": [], "sklearn.tests.test_pipeline.FeatureNameSaver.get_feature_names_out": [], "sklearn.tests.test_pipeline.test_features_names_passthrough": ["sklearn.linear_model.LogisticRegression", "sklearn.base.BaseEstimator.__init__", "sklearn.datasets.load_iris", "sklearn.utils._testing.assert_array_equal", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_feature_names_count_vectorizer": ["sklearn.linear_model.LogisticRegression", "sklearn.feature_extraction.text.CountVectorizer", "sklearn.utils._testing.assert_array_equal", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_feature_names_out_error_without_definition": ["pytest.raises", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.datasets.load_iris", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_pipeline.test_pipeline_param_error": ["sklearn.linear_model.LogisticRegression", "sklearn.pipeline.make_pipeline", "pytest.raises"], "sklearn.tests.test_pipeline.test_verbose": ["re.match", "<builtin>.getattr"], "sklearn.tests.test_pipeline.test_n_features_in_pipeline": ["sklearn.preprocessing.StandardScaler", "sklearn.ensemble.HistGradientBoostingClassifier", "<builtin>.hasattr", "sklearn.pipeline.make_pipeline"], "sklearn.ensemble.HistGradientBoostingClassifier": [], "sklearn.tests.test_pipeline.test_n_features_in_feature_union": ["sklearn.preprocessing.StandardScaler", "<builtin>.hasattr", "sklearn.pipeline.make_union"], "sklearn.tests.test_pipeline.test_feature_union_fit_params": ["pytest.raises", "sklearn.base.BaseEstimator.__init__", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_pipeline.test_feature_union_fit_params.Dummy.fit": [], "sklearn.tests.test_pipeline.test_feature_union_fit_params.Dummy.transform": [], "sklearn.tests.test_pipeline.test_pipeline_missing_values_leniency": ["sklearn.linear_model.LogisticRegression", "sklearn.pipeline.make_pipeline", "sklearn.impute.SimpleImputer", "numpy.random.choice"], "numpy.random.choice": [], "sklearn.tests.test_pipeline.test_feature_union_warns_unknown_transformer_weight": ["pytest.raises", "sklearn.tests.test_pipeline.NoFit.__init__", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_pipeline.test_pipeline_get_tags_none": ["sklearn.pipeline.make_pipeline", "sklearn.svm.SVC"], "sklearn.tests.test_pipeline.test_search_cv_using_minimal_compatible_estimator": ["sklearn.utils._testing.MinimalTransformer", "numpy.random.RandomState", "sklearn.metrics.r2_score", "sklearn.utils._testing.assert_allclose", "sklearn.base.is_classifier", "sklearn.metrics.accuracy_score", "numpy.array", "pytest.approx", "sklearn.utils._testing.assert_array_equal", "sklearn.pipeline.Pipeline"], "sklearn.utils._testing.MinimalTransformer": [], "sklearn.metrics.accuracy_score": [], "sklearn.metrics.r2_score": [], "sklearn.tests.test_pipeline.test_pipeline_check_if_fitted": ["sklearn.pipeline.Pipeline", "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.fit", "pytest.raises", "sklearn.base.BaseEstimator.__init__", "sklearn.utils.validation.check_is_fitted"], "sklearn.tests.test_pipeline.test_pipeline_check_if_fitted.Estimator.fit": [], "sklearn.utils.validation.check_is_fitted": [], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.fit": ["numpy.arange"], "sklearn.tests.test_pipeline.test_feature_union_check_if_fitted": ["sklearn.utils._testing.MinimalTransformer", "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.fit", "pytest.raises", "sklearn.pipeline.FeatureUnion", "sklearn.utils.validation.check_is_fitted"], "sklearn.tests.test_pipeline.test_pipeline_get_feature_names_out_passes_names_through": ["sklearn.preprocessing.StandardScaler.__init__", "sklearn.pipeline.make_pipeline", "sklearn.preprocessing.StandardScaler", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_pipeline.test_pipeline_get_feature_names_out_passes_names_through.AddPrefixStandardScalar.get_feature_names_out": ["<builtin>.super", "numpy.asarray"], "sklearn.preprocessing.StandardScaler.__init__": [], "sklearn.tests.test_pipeline.test_pipeline_set_output_integration": ["sklearn.pipeline.make_pipeline", "pytest.importorskip", "sklearn.preprocessing.StandardScaler", "sklearn.utils._testing.assert_array_equal", "sklearn.linear_model.LogisticRegression", "sklearn.datasets.load_iris"], "sklearn.tests.test_pipeline.test_feature_union_set_output": ["pytest.importorskip", "sklearn.preprocessing.StandardScaler", "sklearn.utils._testing.assert_array_equal", "<builtin>.isinstance", "sklearn.model_selection.train_test_split", "sklearn.decomposition.PCA", "sklearn.datasets.load_iris", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_pipeline.test_feature_union_getitem": ["sklearn.preprocessing.StandardScaler", "sklearn.decomposition.PCA", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_pipeline.test_feature_union_getitem_error": ["sklearn.preprocessing.StandardScaler", "pytest.raises", "sklearn.decomposition.PCA", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_pipeline.test_feature_union_feature_names_in_": ["pytest.importorskip", "sklearn.preprocessing.StandardScaler", "sklearn.utils._testing.assert_array_equal", "<builtin>.hasattr", "sklearn.datasets.load_iris", "sklearn.pipeline.FeatureUnion"], "sklearn.tests.test_build": [], "sklearn.tests.test_build.test_openmp_parallelism_enabled": ["pytest.skip", "sklearn.__version__.endswith", "textwrap.dedent", "sklearn.utils._openmp_helpers._openmp_parallelism_enabled", "os.getenv"], "os.getenv": [], "sklearn.__version__.endswith": [], "textwrap.dedent": [], "sklearn.utils._openmp_helpers._openmp_parallelism_enabled": [], "sklearn.tests.test_calibration": ["<builtin>.range", "pytest.mark.parametrize", "pytest.fixture"], "sklearn.tests.test_calibration.data": ["sklearn.datasets.make_classification"], "sklearn.tests.test_calibration.test_calibration": ["sklearn.calibration.CalibratedClassifierCV", "sklearn.metrics.brier_score_loss", "pytest.raises", "sklearn.naive_bayes.MultinomialNB", "sklearn.utils._testing.assert_array_almost_equal", "numpy.random.RandomState"], "sklearn.calibration.CalibratedClassifierCV": [], "sklearn.metrics.brier_score_loss": [], "sklearn.tests.test_calibration.test_calibration_default_estimator": ["sklearn.calibration.CalibratedClassifierCV", "<builtin>.isinstance"], "sklearn.tests.test_calibration.test_calibration_cv_splitter": ["sklearn.calibration.CalibratedClassifierCV", "<builtin>.isinstance", "<builtin>.len", "sklearn.model_selection.KFold"], "sklearn.model_selection.KFold": [], "sklearn.tests.test_calibration.test_sample_weight": ["sklearn.calibration.CalibratedClassifierCV", "<builtin>.len", "numpy.linalg.norm", "sklearn.svm.LinearSVC", "numpy.random.RandomState"], "sklearn.tests.test_calibration.test_parallel_execution": ["sklearn.calibration.CalibratedClassifierCV", "sklearn.model_selection.train_test_split", "sklearn.svm.LinearSVC", "numpy.testing.assert_allclose"], "numpy.testing.assert_allclose": [], "sklearn.tests.test_calibration.test_calibration_multiclass": ["sklearn.calibration.CalibratedClassifierCV", "numpy.ones", "numpy.testing.assert_allclose", "sklearn.utils.extmath.softmax", "sklearn.tests.test_calibration.test_calibration_multiclass.multiclass_brier", "sklearn.ensemble.RandomForestClassifier", "numpy.unique", "sklearn.datasets.make_blobs", "<builtin>.len", "numpy.sum", "sklearn.svm.LinearSVC"], "sklearn.tests.test_calibration.test_calibration_multiclass.multiclass_brier": ["numpy.sum", "numpy.eye"], "sklearn.utils.extmath.softmax": [], "sklearn.tests.test_calibration.test_calibration_zero_probability": ["sklearn.calibration._CalibratedClassifier", "numpy.testing.assert_allclose", "sklearn.dummy.DummyClassifier", "sklearn.datasets.make_blobs"], "sklearn.tests.test_calibration.test_calibration_zero_probability.ZeroCalibrator.predict": ["numpy.zeros"], "sklearn.calibration._CalibratedClassifier": [], "sklearn.tests.test_calibration.test_calibration_prefit": ["sklearn.calibration.CalibratedClassifierCV", "sklearn.metrics.brier_score_loss", "pytest.raises", "sklearn.datasets.make_classification", "sklearn.naive_bayes.MultinomialNB", "scipy.sparse.csr_matrix", "numpy.array", "numpy.argmax", "sklearn.utils._testing.assert_array_equal", "numpy.random.RandomState"], "sklearn.tests.test_calibration.test_calibration_ensemble_false": ["sklearn.calibration.CalibratedClassifierCV", "numpy.testing.assert_allclose", "sklearn.isotonic.IsotonicRegression", "sklearn.calibration._SigmoidCalibration", "sklearn.model_selection.cross_val_predict", "sklearn.svm.LinearSVC"], "sklearn.model_selection.cross_val_predict": [], "sklearn.calibration._SigmoidCalibration": [], "sklearn.tests.test_calibration.test_sigmoid_calibration": ["sklearn.calibration._SigmoidCalibration", "numpy.exp", "pytest.raises", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.calibration._sigmoid_calibration", "numpy.array", "numpy.vstack"], "sklearn.calibration._sigmoid_calibration": [], "sklearn.tests.test_calibration.test_calibration_curve": ["sklearn.utils._testing.assert_almost_equal", "<builtin>.len", "pytest.raises", "sklearn.calibration.calibration_curve", "numpy.array"], "sklearn.calibration.calibration_curve": [], "sklearn.tests.test_calibration.test_calibration_curve_with_unnormalized_proba": ["pytest.warns", "sklearn.calibration.calibration_curve", "sklearn.utils._testing.assert_almost_equal", "numpy.array"], "sklearn.tests.test_calibration.test_calibration_nan_imputer": ["sklearn.calibration.CalibratedClassifierCV", "sklearn.ensemble.RandomForestClassifier", "sklearn.datasets.make_classification", "sklearn.impute.SimpleImputer", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_calibration.test_calibration_prob_sum": ["sklearn.calibration.CalibratedClassifierCV", "numpy.ones", "sklearn.datasets.make_classification", "sklearn.utils._testing.assert_array_almost_equal", "sklearn.svm.LinearSVC", "sklearn.model_selection.LeaveOneOut"], "sklearn.model_selection.LeaveOneOut": [], "sklearn.tests.test_calibration.test_calibration_less_classes": ["sklearn.calibration.CalibratedClassifierCV", "sklearn.utils._testing.assert_array_equal", "<builtin>.len", "numpy.zeros", "numpy.allclose", "numpy.all", "numpy.random.randn", "numpy.arange", "sklearn.svm.LinearSVC", "<builtin>.enumerate", "sklearn.model_selection.LeaveOneOut"], "numpy.random.randn": [], "<builtin>.enumerate": [], "numpy.allclose": [], "sklearn.tests.test_calibration.test_calibration_accepts_ndarray": ["sklearn.calibration.CalibratedClassifierCV", "sklearn.base.BaseEstimator.__init__"], "sklearn.tests.test_calibration.test_calibration_accepts_ndarray.MockTensorClassifier.fit": ["numpy.unique"], "sklearn.tests.test_calibration.test_calibration_accepts_ndarray.MockTensorClassifier.decision_function": [], "sklearn.tests.test_calibration.dict_data": [], "sklearn.tests.test_calibration.dict_data_pipeline": ["sklearn.ensemble.RandomForestClassifier", "sklearn.feature_extraction.DictVectorizer", "sklearn.pipeline.Pipeline"], "sklearn.feature_extraction.DictVectorizer": [], "sklearn.tests.test_calibration.test_calibration_dict_pipeline": ["sklearn.calibration.CalibratedClassifierCV", "<builtin>.hasattr", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_calibration.test_calibration_attributes": ["sklearn.preprocessing.LabelEncoder", "sklearn.calibration.CalibratedClassifierCV", "sklearn.datasets.make_classification", "sklearn.utils._testing.assert_array_equal"], "sklearn.preprocessing.LabelEncoder": [], "sklearn.tests.test_calibration.test_calibration_inconsistent_prefit_n_features_in": ["pytest.raises", "sklearn.calibration.CalibratedClassifierCV", "sklearn.svm.LinearSVC", "sklearn.datasets.make_classification"], "sklearn.tests.test_calibration.test_calibration_votingclassifier": ["sklearn.calibration.CalibratedClassifierCV", "sklearn.ensemble.VotingClassifier", "<builtin>.range", "<builtin>.str", "sklearn.linear_model.LogisticRegression", "sklearn.datasets.make_classification"], "sklearn.ensemble.VotingClassifier": [], "sklearn.tests.test_calibration.iris_data": ["sklearn.datasets.load_iris"], "sklearn.tests.test_calibration.iris_data_binary": [], "sklearn.tests.test_calibration.test_calibration_display_validation": ["sklearn.calibration.CalibrationDisplay.from_estimator", "pytest.raises", "sklearn.linear_model.LogisticRegression", "sklearn.svm.LinearSVC", "sklearn.linear_model.LinearRegression"], "sklearn.calibration.CalibrationDisplay.from_estimator": [], "sklearn.tests.test_calibration.test_calibration_display_non_binary": ["pytest.raises", "sklearn.calibration.CalibrationDisplay.from_estimator", "sklearn.tree.DecisionTreeClassifier", "sklearn.calibration.CalibrationDisplay.from_predictions"], "sklearn.calibration.CalibrationDisplay.from_predictions": [], "sklearn.tests.test_calibration.test_calibration_display_compute": ["numpy.testing.assert_allclose", "sklearn.calibration.CalibrationDisplay.from_estimator", "<builtin>.isinstance", "<builtin>.len", "sklearn.linear_model.LogisticRegression", "sklearn.calibration.calibration_curve"], "sklearn.tests.test_calibration.test_plot_calibration_curve_pipeline": ["sklearn.pipeline.make_pipeline", "sklearn.preprocessing.StandardScaler", "sklearn.calibration.CalibrationDisplay.from_estimator", "<builtin>.len", "sklearn.linear_model.LogisticRegression"], "sklearn.tests.test_calibration.test_calibration_display_default_labels": ["<builtin>.len", "sklearn.calibration.CalibrationDisplay", "numpy.array"], "sklearn.calibration.CalibrationDisplay": [], "sklearn.tests.test_calibration.test_calibration_display_label_class_plot": ["<builtin>.len", "sklearn.calibration.CalibrationDisplay", "numpy.array"], "sklearn.tests.test_calibration.test_calibration_display_name_multiple_calls": ["sklearn.linear_model.LogisticRegression", "<builtin>.len", "<builtin>.getattr"], "sklearn.tests.test_calibration.test_calibration_display_ref_line": ["sklearn.linear_model.LogisticRegression", "sklearn.calibration.CalibrationDisplay.from_estimator", "sklearn.tree.DecisionTreeClassifier"], "sklearn.tests.test_calibration.test_calibration_curve_pos_label_error_str": ["pytest.raises", "sklearn.calibration.calibration_curve", "numpy.array", "numpy.random.RandomState"], "sklearn.tests.test_calibration.test_calibration_curve_pos_label": ["numpy.testing.assert_allclose", "sklearn.calibration.calibration_curve", "numpy.array"], "sklearn.tests.test_calibration.test_calibration_display_pos_label": ["numpy.testing.assert_allclose", "sklearn.calibration.CalibrationDisplay.from_estimator", "<builtin>.len", "sklearn.linear_model.LogisticRegression", "sklearn.calibration.calibration_curve"], "sklearn.tests.test_calibration.test_calibrated_classifier_cv_double_sample_weights_equivalence": ["<builtin>.zip", "sklearn.calibration.CalibratedClassifierCV", "numpy.testing.assert_allclose", "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.fit", "sklearn.base.BaseEstimator.fit", "sklearn.preprocessing.StandardScaler", "numpy.ones_like", "sklearn.linear_model.LogisticRegression", "sklearn.base.clone", "sklearn.base.BaseEstimator.predict_proba", "sklearn.tests.test_base.NoEstimator.fit", "sklearn.datasets.load_iris", "numpy.zeros"], "sklearn.base.BaseEstimator.predict_proba": [], "sklearn.tests.test_calibration.test_calibration_with_fit_params": ["sklearn.calibration.CalibratedClassifierCV", "sklearn.utils._mocking.CheckingClassifier", "sklearn.utils._testing._convert_container"], "sklearn.utils._mocking.CheckingClassifier": [], "sklearn.tests.test_calibration.test_calibration_with_sample_weight_base_estimator": ["sklearn.calibration.CalibratedClassifierCV", "sklearn.utils._mocking.CheckingClassifier"], "sklearn.tests.test_calibration.test_calibration_without_sample_weight_base_estimator": ["sklearn.calibration.CalibratedClassifierCV", "sklearn.utils._mocking.CheckingClassifier.__init__", "pytest.warns", "numpy.ones_like"], "sklearn.tests.test_calibration.test_calibration_without_sample_weight_base_estimator.ClfWithoutSampleWeight.fit": ["<builtin>.super"], "sklearn.utils._mocking.CheckingClassifier.__init__": [], "sklearn.tests.test_calibration.test_calibration_with_fit_params_inconsistent_length": ["pytest.raises", "sklearn.calibration.CalibratedClassifierCV", "sklearn.utils._mocking.CheckingClassifier", "<builtin>.str"], "sklearn.tests.test_calibration.test_calibrated_classifier_cv_zeros_sample_weights_equivalence": ["<builtin>.zip", "sklearn.calibration.CalibratedClassifierCV", "numpy.testing.assert_allclose", "numpy.hstack", "sklearn.tests.test_base.test_clone_pandas_dataframe.DummyEstimator.fit", "sklearn.base.BaseEstimator.fit", "sklearn.preprocessing.StandardScaler", "numpy.zeros_like", "sklearn.linear_model.LogisticRegression", "sklearn.base.clone", "numpy.vstack", "sklearn.base.BaseEstimator.predict_proba", "sklearn.tests.test_base.NoEstimator.fit", "sklearn.datasets.load_iris"], "sklearn.tests.test_calibration.test_calibrated_classifier_error_base_estimator": ["sklearn.linear_model.LogisticRegression", "sklearn.calibration.CalibratedClassifierCV", "pytest.raises"], "sklearn.tests.test_calibration.test_calibrated_classifier_deprecation_base_estimator": ["sklearn.linear_model.LogisticRegression", "sklearn.calibration.CalibratedClassifierCV", "pytest.warns"], "sklearn.tests.test_multiclass": ["pytest.mark.parametrize", "pytest.mark.filterwarnings", "sklearn.datasets.load_iris", "numpy.random.RandomState"], "sklearn.tests.test_multiclass.test_ovr_exceptions": ["sklearn.multiclass.OneVsRestClassifier", "pytest.raises", "sklearn.naive_bayes.MultinomialNB", "numpy.array", "sklearn.svm.LinearSVC"], "sklearn.tests.test_multiclass.test_check_classification_targets": ["pytest.raises", "sklearn.utils.multiclass.type_of_target", "sklearn.utils.multiclass.check_classification_targets", "numpy.array"], "sklearn.utils.multiclass.type_of_target": [], "sklearn.utils.multiclass.check_classification_targets": [], "sklearn.tests.test_multiclass.test_ovr_fit_predict": ["sklearn.multiclass.OneVsRestClassifier", "<builtin>.len", "sklearn.naive_bayes.MultinomialNB", "numpy.mean", "sklearn.svm.LinearSVC"], "sklearn.tests.test_multiclass.test_ovr_partial_fit": ["sklearn.multiclass.OneVsRestClassifier", "numpy.abs", "sklearn.utils._testing.assert_almost_equal", "sklearn.linear_model.SGDClassifier", "numpy.unique", "<builtin>.len", "sklearn.naive_bayes.MultinomialNB", "sklearn.utils.shuffle", "numpy.random.randn", "numpy.mean", "<builtin>.hasattr", "sklearn.svm.SVC"], "sklearn.tests.test_multiclass.test_ovr_partial_fit_exceptions": ["sklearn.multiclass.OneVsRestClassifier", "numpy.abs", "numpy.unique", "pytest.raises", "sklearn.naive_bayes.MultinomialNB", "numpy.random.randn"], "sklearn.tests.test_multiclass.test_ovr_ovo_regressor": ["sklearn.multiclass.OneVsRestClassifier", "numpy.unique", "<builtin>.len", "sklearn.tree.DecisionTreeRegressor", "numpy.mean", "sklearn.multiclass.OneVsOneClassifier", "sklearn.utils._testing.assert_array_equal"], "sklearn.tree.DecisionTreeRegressor": [], "sklearn.multiclass.OneVsOneClassifier": [], "sklearn.tests.test_multiclass.test_ovr_fit_predict_sparse": ["sklearn.multiclass.OneVsRestClassifier", "sklearn.datasets.make_multilabel_classification", "sklearn.naive_bayes.MultinomialNB", "scipy.sparse.issparse", "sklearn.svm.SVC", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_multiclass.test_ovr_always_present": ["sklearn.multiclass.OneVsRestClassifier", "numpy.ones", "sklearn.utils._testing.assert_array_equal", "numpy.unique", "sklearn.linear_model.LogisticRegression", "pytest.warns", "numpy.array", "numpy.zeros"], "sklearn.tests.test_multiclass.test_ovr_multiclass": ["sklearn.multiclass.OneVsRestClassifier", "sklearn.linear_model.ElasticNet", "sklearn.utils._testing.assert_array_equal", "sklearn.linear_model.Ridge", "sklearn.naive_bayes.MultinomialNB", "numpy.array", "sklearn.svm.LinearSVC", "<builtin>.set", "sklearn.linear_model.LinearRegression"], "sklearn.linear_model.ElasticNet": [], "sklearn.tests.test_multiclass.test_ovr_binary": ["sklearn.tests.test_multiclass.test_ovr_binary.conduct_test", "sklearn.linear_model.ElasticNet", "sklearn.linear_model.Ridge", "sklearn.linear_model.LogisticRegression", "sklearn.naive_bayes.MultinomialNB", "numpy.array", "sklearn.svm.SVC", "sklearn.svm.LinearSVC", "<builtin>.set", "sklearn.linear_model.LinearRegression"], "sklearn.tests.test_multiclass.test_ovr_binary.conduct_test": ["sklearn.multiclass.OneVsRestClassifier", "<builtin>.len", "numpy.array", "<builtin>.hasattr", "<builtin>.set", "numpy.argmax", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_multiclass.test_ovr_multilabel": ["sklearn.multiclass.OneVsRestClassifier", "sklearn.linear_model.ElasticNet", "sklearn.linear_model.Lasso", "sklearn.utils._testing.assert_array_equal", "sklearn.linear_model.Ridge", "sklearn.naive_bayes.MultinomialNB", "numpy.array", "sklearn.svm.LinearSVC", "sklearn.linear_model.LinearRegression"], "sklearn.tests.test_multiclass.test_ovr_fit_predict_svc": ["sklearn.multiclass.OneVsRestClassifier", "sklearn.svm.SVC", "<builtin>.len"], "sklearn.tests.test_multiclass.test_ovr_multilabel_dataset": ["<builtin>.zip", "sklearn.multiclass.OneVsRestClassifier", "sklearn.datasets.make_multilabel_classification", "sklearn.utils._testing.assert_almost_equal", "sklearn.naive_bayes.MultinomialNB", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score"], "sklearn.metrics.precision_score": [], "sklearn.metrics.recall_score": [], "sklearn.tests.test_multiclass.test_ovr_multilabel_predict_proba": ["sklearn.multiclass.OneVsRestClassifier", "sklearn.datasets.make_multilabel_classification", "sklearn.model_selection.GridSearchCV", "sklearn.svm.SVR", "sklearn.naive_bayes.MultinomialNB", "<builtin>.hasattr", "sklearn.svm.SVC", "sklearn.utils._testing.assert_array_equal"], "sklearn.svm.SVR": [], "sklearn.tests.test_multiclass.test_ovr_single_label_predict_proba": ["sklearn.multiclass.OneVsRestClassifier", "sklearn.utils._testing.assert_almost_equal", "sklearn.svm.SVR", "sklearn.naive_bayes.MultinomialNB", "<builtin>.hasattr"], "sklearn.tests.test_multiclass.test_ovr_multilabel_decision_function": ["sklearn.svm.SVC", "sklearn.multiclass.OneVsRestClassifier", "sklearn.datasets.make_multilabel_classification", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_multiclass.test_ovr_single_label_decision_function": ["sklearn.multiclass.OneVsRestClassifier", "sklearn.datasets.make_classification", "sklearn.svm.SVC", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_multiclass.test_ovr_gridsearch": ["sklearn.multiclass.OneVsRestClassifier", "sklearn.svm.LinearSVC", "sklearn.model_selection.GridSearchCV"], "sklearn.tests.test_multiclass.test_ovr_pipeline": ["sklearn.multiclass.OneVsRestClassifier", "sklearn.tree.DecisionTreeClassifier", "sklearn.utils._testing.assert_array_equal", "sklearn.pipeline.Pipeline"], "sklearn.tests.test_multiclass.test_ovo_exceptions": ["pytest.raises", "sklearn.multiclass.OneVsOneClassifier", "sklearn.svm.LinearSVC"], "sklearn.tests.test_multiclass.test_ovo_fit_on_list": ["sklearn.multiclass.OneVsOneClassifier", "sklearn.svm.LinearSVC", "<builtin>.list", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_multiclass.test_ovo_fit_predict": ["sklearn.multiclass.OneVsOneClassifier", "sklearn.svm.LinearSVC", "sklearn.naive_bayes.MultinomialNB", "<builtin>.len"], "sklearn.tests.test_multiclass.test_ovo_partial_fit_predict": ["numpy.random.rand", "sklearn.utils._testing.assert_almost_equal", "<builtin>.len", "numpy.unique", "numpy.mean", "re.escape", "pytest.raises", "sklearn.naive_bayes.MultinomialNB", "sklearn.multiclass.OneVsOneClassifier", "<builtin>.hasattr", "sklearn.svm.SVC", "sklearn.datasets.load_iris"], "numpy.random.rand": [], "sklearn.tests.test_multiclass.test_ovo_decision_function": ["<builtin>.range", "numpy.round", "numpy.unique", "<builtin>.len", "sklearn.multiclass.OneVsOneClassifier", "sklearn.svm.LinearSVC", "<builtin>.set", "sklearn.utils._testing.assert_array_equal", "numpy.zeros"], "sklearn.tests.test_multiclass.test_ovo_gridsearch": ["sklearn.multiclass.OneVsOneClassifier", "sklearn.svm.LinearSVC", "sklearn.model_selection.GridSearchCV"], "sklearn.tests.test_multiclass.test_ovo_ties": ["sklearn.linear_model.Perceptron", "numpy.round", "numpy.array", "sklearn.multiclass.OneVsOneClassifier", "numpy.argmax", "sklearn.utils._testing.assert_array_equal"], "sklearn.linear_model.Perceptron": [], "sklearn.tests.test_multiclass.test_ovo_ties2": ["<builtin>.range", "sklearn.multiclass.OneVsOneClassifier", "sklearn.linear_model.Perceptron", "numpy.array"], "sklearn.tests.test_multiclass.test_ovo_string_y": ["numpy.eye", "numpy.array", "sklearn.multiclass.OneVsOneClassifier", "sklearn.svm.LinearSVC", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_multiclass.test_ovo_one_class": ["pytest.raises", "numpy.eye", "numpy.array", "sklearn.multiclass.OneVsOneClassifier", "sklearn.svm.LinearSVC"], "sklearn.tests.test_multiclass.test_ovo_float_y": ["pytest.raises", "sklearn.multiclass.OneVsOneClassifier", "sklearn.svm.LinearSVC"], "sklearn.tests.test_multiclass.test_ecoc_exceptions": ["pytest.raises", "sklearn.svm.LinearSVC", "sklearn.multiclass.OutputCodeClassifier"], "sklearn.multiclass.OutputCodeClassifier": [], "sklearn.tests.test_multiclass.test_ecoc_fit_predict": ["<builtin>.len", "sklearn.svm.LinearSVC", "sklearn.naive_bayes.MultinomialNB", "sklearn.multiclass.OutputCodeClassifier"], "sklearn.tests.test_multiclass.test_ecoc_gridsearch": ["sklearn.svm.LinearSVC", "sklearn.model_selection.GridSearchCV", "sklearn.multiclass.OutputCodeClassifier"], "sklearn.tests.test_multiclass.test_ecoc_float_y": ["pytest.raises", "sklearn.svm.LinearSVC", "sklearn.multiclass.OutputCodeClassifier"], "sklearn.tests.test_multiclass.test_ecoc_delegate_sparse_base_estimator": ["scipy.sparse.csc_matrix", "<builtin>.len", "pytest.raises", "sklearn.multiclass.OutputCodeClassifier", "sklearn.svm.LinearSVC", "sklearn.utils._mocking.CheckingClassifier"], "sklearn.tests.test_multiclass.test_pairwise_indices": ["sklearn.multiclass.OneVsOneClassifier", "numpy.dot", "sklearn.svm.SVC", "<builtin>.len"], "sklearn.tests.test_multiclass.test_pairwise_n_features_in": ["sklearn.multiclass.OneVsOneClassifier", "sklearn.multiclass.OneVsRestClassifier", "sklearn.svm.SVC", "<builtin>.len"], "sklearn.tests.test_multiclass.test_pairwise_tag": ["sklearn.svm.SVC"], "sklearn.tests.test_multiclass.test_pairwise_cross_val_score": ["sklearn.model_selection.cross_val_score", "numpy.dot", "sklearn.svm.SVC", "sklearn.utils._testing.assert_array_equal"], "sklearn.tests.test_multiclass.test_support_missing_values": ["sklearn.pipeline.make_pipeline", "numpy.random.RandomState", "sklearn.linear_model.LogisticRegression", "sklearn.impute.SimpleImputer", "numpy.copy"], "numpy.copy": [], "sklearn.tests.test_multiclass.test_constant_int_target": ["sklearn.multiclass.OneVsRestClassifier", "numpy.ones", "numpy.testing.assert_allclose", "sklearn.linear_model.LogisticRegression", "numpy.zeros"], "sklearn.tests.test_multiclass.test_ovo_consistent_binary_classification": ["sklearn.neighbors.KNeighborsClassifier", "sklearn.datasets.load_breast_cancer", "sklearn.multiclass.OneVsOneClassifier", "sklearn.utils._testing.assert_array_equal"], "sklearn.datasets.load_breast_cancer": [], "sklearn.neighbors.KNeighborsClassifier": [], "sklearn.tests.test_metaestimators": ["sklearn.tests.test_metaestimators.DelegatorData.__init__", "pytest.mark.parametrize", "sklearn.tests.test_metaestimators._generate_meta_estimator_instances_with_pipeline"], "sklearn.tests.test_metaestimators.DelegatorData.__init__": [], "sklearn.tests.test_metaestimators.<list1>.<lambda1>": [], "sklearn.tests.test_metaestimators.<lambda1>": ["sklearn.pipeline.Pipeline"], "sklearn.tests.test_metaestimators.<list1>.<lambda2>": [], "sklearn.tests.test_metaestimators.<lambda2>": ["sklearn.model_selection.GridSearchCV"], "sklearn.tests.test_metaestimators.<list1>.<lambda3>": [], "sklearn.model_selection.RandomizedSearchCV": [], "sklearn.tests.test_metaestimators.<lambda3>": ["sklearn.model_selection.RandomizedSearchCV"], "sklearn.tests.test_metaestimators.<list1>.<lambda4>": [], "sklearn.semi_supervised.SelfTrainingClassifier": [], "sklearn.tests.test_metaestimators.<lambda4>": ["sklearn.semi_supervised.SelfTrainingClassifier"], "sklearn.tests.test_metaestimators.test_metaestimator_delegation": ["sklearn.base.BaseEstimator.__dict__.keys", "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.__init__", "pytest.raises", "<builtin>.hasattr", "<builtin>.getattr"], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.hides": [], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.hides.wrapper": ["<builtin>.AttributeError", "functools.partial"], "<builtin>.AttributeError": [], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.__init__": [], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator._check_fit": ["sklearn.utils.validation.check_is_fitted"], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator": ["sklearn.tests.test_metaestimators.test_metaestimator_delegation.hides"], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.inverse_transform": ["sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator._check_fit"], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.transform": ["sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator._check_fit"], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict": ["numpy.ones", "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator._check_fit"], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict_proba": ["numpy.ones", "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator._check_fit"], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.predict_log_proba": ["numpy.ones", "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator._check_fit"], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.decision_function": ["numpy.ones", "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator._check_fit"], "sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator.score": ["sklearn.tests.test_metaestimators.test_metaestimator_delegation.SubEstimator._check_fit"], "sklearn.base.BaseEstimator.__dict__.keys": [], "sklearn.tests.test_metaestimators._generate_meta_estimator_instances_with_pipeline": ["sklearn.base.is_regressor", "sklearn.pipeline.make_pipeline", "sklearn.feature_extraction.text.TfidfVectorizer", "sklearn.preprocessing.StandardScaler", "sklearn.linear_model.Ridge", "inspect.signature", "sklearn.linear_model.LogisticRegression", "sklearn.utils.all_estimators", "<builtin>.sorted", "<builtin>.set", "sklearn.preprocessing.MaxAbsScaler"], "sklearn.base.is_regressor": [], "sklearn.feature_extraction.text.TfidfVectorizer": [], "sklearn.preprocessing.MaxAbsScaler": [], "sklearn.tests.test_metaestimators._get_meta_estimator_id": [], "sklearn.tests.test_metaestimators.test_meta_estimators_delegate_data_validation": ["sklearn.utils._testing.set_random_state", "sklearn.base.is_regressor", "sklearn.utils.estimator_checks._enforce_estimator_tags_X", "sklearn.utils.estimator_checks._enforce_estimator_tags_y", "numpy.array", "<builtin>.hasattr", "numpy.random.RandomState"]}
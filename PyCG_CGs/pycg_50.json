{"tests.workers.test_geventlet": [], "tests.workers.test_geventlet.test_import": ["<builtin>.__import__"], "<builtin>.__import__": [], "tests.workers": [], "tests.workers.test_ggevent": [], "tests.workers.test_ggevent.test_import": ["<builtin>.__import__"], "tests.test_config": ["os.path.dirname", "pytest.fixture", "pytest.mark.skipif", "pytest.mark.parametrize"], "os.path.dirname": [], "tests.test_config.cfg_module": [], "tests.test_config.alt_cfg_module": [], "tests.test_config.cfg_file": ["os.path.join"], "os.path.join": [], "tests.test_config.alt_cfg_file": ["os.path.join"], "tests.test_config.cfg_file_with_wsgi_app": ["os.path.join"], "tests.test_config.paster_ini": ["os.path.join"], "tests.test_config.AltArgs.__init__": [], "tests.test_config.AltArgs.__enter__": [], "tests.test_config.AltArgs.__exit__": [], "tests.test_config.NoConfigApp.__init__": ["<builtin>.super"], "<builtin>.super": [], "tests.test_config.NoConfigApp.init": [], "tests.test_config.NoConfigApp.load": [], "tests.test_config.WSGIApp.__init__": ["<builtin>.super"], "tests.test_config.WSGIApp.load": [], "tests.test_config.test_defaults": ["gunicorn.config.Config"], "gunicorn.config.Config": [], "tests.test_config.test_property_access": ["gunicorn.config.Config", "<builtin>.getattr", "os.getegid", "os.geteuid", "pytest.raises"], "<builtin>.getattr": [], "os.geteuid": [], "os.getegid": [], "pytest.raises": [], "tests.test_config.test_property_access.Baz.get": [], "tests.test_config.test_bool_validation": ["gunicorn.config.Config", "pytest.raises"], "tests.test_config.test_pos_int_validation": ["gunicorn.config.Config", "pytest.raises"], "tests.test_config.test_str_validation": ["gunicorn.config.Config", "pytest.raises"], "tests.test_config.test_str_to_list_validation": ["gunicorn.config.Config", "pytest.raises"], "tests.test_config.test_callable_validation": ["gunicorn.config.Config", "pytest.raises"], "tests.test_config.test_callable_validation.func": [], "tests.test_config.test_callable_validation.<lambda1>": [], "tests.test_config.test_reload_engine_validation": ["gunicorn.config.Config", "pytest.raises"], "tests.test_config.test_callable_validation_for_string": ["gunicorn.config.validate_callable", "pytest.raises"], "gunicorn.config.validate_callable": [], "tests.test_config.test_cmd_line": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.AltArgs.__init__"], "tests.test_config.test_cmd_line_invalid_setting": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.AltArgs.__init__", "pytest.raises"], "tests.test_config.test_app_config": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.AltArgs.__init__"], "tests.test_config.test_load_config": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.cfg_file", "tests.test_config.AltArgs.__init__"], "tests.test_config.test_load_config_explicit_file": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.cfg_file", "tests.test_config.AltArgs.__init__"], "tests.test_config.test_load_config_module": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.cfg_module", "tests.test_config.AltArgs.__init__"], "tests.test_config.test_cli_overrides_config": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.cfg_file", "tests.test_config.AltArgs.__init__"], "tests.test_config.test_cli_overrides_config_module": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.cfg_module", "tests.test_config.AltArgs.__init__"], "pytest.fixture": [], "tests.test_config.create_config_file": ["os.path.join", "<builtin>.open", "os.getcwd", "os.path.abspath"], "os.getcwd": [], "os.path.abspath": [], "<builtin>.open": [], "tests.test_config.create_config_file.fin": ["os.unlink"], "os.unlink": [], "tests.test_config.test_default_config_file": ["tests.test_config.NoConfigApp.__init__", "gunicorn.config.get_default_config_file", "tests.test_config.AltArgs.__init__"], "gunicorn.config.get_default_config_file": [], "tests.test_config.test_post_request": ["gunicorn.config.Config"], "tests.test_config.test_post_request.post_request_4": [], "tests.test_config.test_post_request.post_request_3": [], "tests.test_config.test_post_request.post_request_2": [], "tests.test_config.test_nworkers_changed": ["gunicorn.config.Config"], "tests.test_config.test_nworkers_changed.nworkers_changed_3": [], "tests.test_config.test_statsd_changes_logger": ["gunicorn.config.Config"], "tests.test_config.test_always_use_configured_logger": ["gunicorn.config.Config"], "tests.test_config.test_load_enviroment_variables_config": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.AltArgs.__init__"], "tests.test_config.test_config_file_environment_variable": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.cfg_file", "tests.test_config.alt_cfg_file", "tests.test_config.AltArgs.__init__"], "tests.test_config.test_invalid_enviroment_variables_config": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.AltArgs.__init__", "pytest.raises"], "tests.test_config.test_cli_overrides_enviroment_variables_module": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.cfg_file", "tests.test_config.AltArgs.__init__"], "pytest.mark.parametrize": [], "tests.test_config.test_wsgi_app_config": ["tests.test_config.WSGIApp.__init__", "tests.test_config.AltArgs.__init__"], "tests.test_config.test_non_wsgi_app": ["tests.test_config.WSGIApp.__init__", "tests.test_config.AltArgs.__init__", "pytest.raises"], "tests.test_config.test_reload": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.AltArgs.__init__"], "tests.test_config.test_umask_config": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.AltArgs.__init__"], "tests.test_config.test_ssl_version_named_constants_python3": ["tests.test_config._test_ssl_version"], "tests.test_config._test_ssl_version": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.AltArgs.__init__"], "pytest.mark.skipif": [], "tests.test_config.test_ssl_version_named_constants_python36": ["tests.test_config._test_ssl_version"], "tests.test_config.test_ssl_version_bad": ["gunicorn.config.Config", "<builtin>.str", "pytest.raises"], "<builtin>.str": [], "tests.test_config.test_bind_fd": ["tests.test_config.NoConfigApp.__init__", "tests.test_config.AltArgs.__init__"], "tests.test_config.test_repr": ["gunicorn.config.Config", "<builtin>.repr"], "<builtin>.repr": [], "tests.test_config.test_str": ["re.escape", "<builtin>.enumerate", "gunicorn.config.Config", "<builtin>.str", "re.match"], "<builtin>.enumerate": [], "re.match": [], "re.escape": [], "tests.test_arbiter": ["unittest.mock.patch"], "tests.test_arbiter.DummyApplication.init": [], "tests.test_arbiter.DummyApplication.load": [], "tests.test_arbiter.DummyApplication.load_config": [], "unittest.mock.patch": [], "tests.test_arbiter.test_arbiter_stop_closes_listeners": ["unittest.mock.Mock"], "unittest.mock.Mock": [], "tests.test_arbiter.test_arbiter_stop_child_does_not_unlink_listeners": ["os.getpid"], "os.getpid": [], "tests.test_arbiter.test_arbiter_stop_parent_does_not_unlink_listeners": ["os.getppid"], "os.getppid": [], "tests.test_arbiter.test_arbiter_stop_does_not_unlink_systemd_listeners": [], "tests.test_arbiter.test_arbiter_stop_does_not_unlink_when_using_reuse_port": ["gunicorn.config.ReusePort"], "gunicorn.config.ReusePort": [], "tests.test_arbiter.test_arbiter_reexec_passing_systemd_sockets": ["unittest.mock.Mock"], "tests.test_arbiter.test_arbiter_reexec_passing_gunicorn_sockets": ["unittest.mock.Mock"], "tests.test_arbiter.test_arbiter_reexec_limit_parent": ["os.getpid"], "tests.test_arbiter.test_arbiter_reexec_limit_child": ["os.getpid"], "tests.test_arbiter.test_arbiter_calls_worker_exit": ["unittest.mock.Mock"], "tests.test_arbiter.test_arbiter_reap_workers": ["unittest.mock.Mock"], "tests.test_arbiter.PreloadedAppWithEnvSettings.load_config": [], "tests.test_arbiter.PreloadedAppWithEnvSettings.wsgi": ["<builtin>.super", "tests.test_arbiter.verify_env_vars"], "tests.test_arbiter.verify_env_vars": ["os.getenv"], "os.getenv": [], "tests.test_arbiter.test_env_vars_available_during_preload": [], "tests.test_statsd": [], "tests.test_statsd.MockSocket.__init__": [], "tests.test_statsd.MockSocket.send": ["tempfile.mkdtemp", "os.path.join", "socket.socket", "shutil.rmtree"], "tempfile.mkdtemp": [], "socket.socket": [], "shutil.rmtree": [], "tests.test_statsd.MockSocket.reset": [], "tests.test_statsd.test_statsd_fail": ["gunicorn.instrument.statsd.Statsd", "tests.test_statsd.MockSocket.__init__", "gunicorn.config.Config"], "gunicorn.instrument.statsd.Statsd": [], "tests.test_statsd.test_dogstatsd_tags": ["gunicorn.instrument.statsd.Statsd", "tests.test_statsd.MockSocket.__init__", "gunicorn.config.Config"], "tests.test_statsd.test_instrument": ["tests.test_statsd.MockSocket.__init__", "io.StringIO", "gunicorn.instrument.statsd.Statsd", "gunicorn.config.Config", "types.SimpleNamespace", "datetime.timedelta", "logging.StreamHandler"], "io.StringIO": [], "logging.StreamHandler": [], "types.SimpleNamespace": [], "datetime.timedelta": [], "tests.test_statsd.test_prefix": ["gunicorn.instrument.statsd.Statsd", "tests.test_statsd.MockSocket.__init__", "gunicorn.config.Config"], "tests.test_statsd.test_prefix_no_dot": ["gunicorn.instrument.statsd.Statsd", "tests.test_statsd.MockSocket.__init__", "gunicorn.config.Config"], "tests.test_statsd.test_prefix_multiple_dots": ["gunicorn.instrument.statsd.Statsd", "tests.test_statsd.MockSocket.__init__", "gunicorn.config.Config"], "tests.test_statsd.test_prefix_nested": ["gunicorn.instrument.statsd.Statsd", "tests.test_statsd.MockSocket.__init__", "gunicorn.config.Config"], "tests.treq": ["os.path.dirname", "random.seed"], "random.seed": [], "tests.treq.uri": ["gunicorn.util.split_request_uri"], "gunicorn.util.split_request_uri": [], "tests.treq.load_py": ["gunicorn.config.Config", "<builtin>.setattr", "types.ModuleType", "<builtin>.vars"], "types.ModuleType": [], "<builtin>.setattr": [], "<builtin>.vars": [], "tests.treq.request.__init__": ["<builtin>.isinstance", "os.path.basename", "<builtin>.open"], "os.path.basename": [], "<builtin>.isinstance": [], "tests.treq.request.send_all": [], "tests.treq.request.send_lines": [], "tests.treq.request.send_bytes": ["<builtin>.bytes"], "<builtin>.bytes": [], "tests.treq.request.send_random": ["random.randint", "<builtin>.round", "<builtin>.len"], "<builtin>.len": [], "<builtin>.round": [], "random.randint": [], "tests.treq.request.send_special_chunks": ["<builtin>.len"], "tests.treq.request.size_all": [], "tests.treq.request.size_bytes": [], "tests.treq.request.size_small_random": ["random.randint"], "tests.treq.request.size_random": ["random.randint"], "tests.treq.request.szread": ["<builtin>.AssertionError", "<builtin>.len"], "<builtin>.AssertionError": [], "tests.treq.request.match_read": ["<builtin>.AssertionError", "tests.treq.request.szread", "<builtin>.len"], "tests.treq.request.match_readline": ["<builtin>.AssertionError", "tests.treq.request.szread", "<builtin>.len"], "tests.treq.request.match_readlines": ["<builtin>.AssertionError", "<builtin>.len"], "tests.treq.request.match_iter": ["<builtin>.AssertionError", "<builtin>.next", "<builtin>.len", "<builtin>.iter"], "<builtin>.iter": [], "<builtin>.next": [], "tests.treq.request.gen_cases": ["tests.treq.request.gen_cases.get_funs", "<builtin>.hasattr"], "tests.treq.request.gen_cases.get_funs": ["inspect.getmembers"], "inspect.getmembers": [], "<builtin>.hasattr": [], "tests.treq.request.gen_cases.test_req": ["tests.treq.request.check"], "tests.treq.request.check": ["gunicorn.http.parser.RequestParser", "tests.treq.request.same"], "gunicorn.http.parser.RequestParser": [], "tests.treq.request.same": [], "tests.treq.badrequest.__init__": ["os.path.basename", "<builtin>.open"], "tests.treq.badrequest.send": ["random.randint", "<builtin>.round", "<builtin>.len"], "tests.treq.badrequest.check": ["<builtin>.next", "tests.treq.badrequest.send", "gunicorn.http.parser.RequestParser"], "tests.test_sock": ["unittest.mock.patch"], "tests.test_sock.test_create_sockets_unix_bytes": ["gunicorn.sock.create_sockets", "<builtin>.type", "<builtin>.print", "unittest.mock.Mock", "<builtin>.isinstance", "<builtin>.len", "unittest.mock.patch.object"], "tests.test_sock.test_create_sockets_unix_bytes.<lambda1>": [], "unittest.mock.patch.object": [], "gunicorn.sock.create_sockets": [], "<builtin>.type": [], "<builtin>.print": [], "tests.test_sock.test_create_sockets_unix_strings": ["gunicorn.sock.create_sockets", "unittest.mock.Mock", "<builtin>.isinstance", "<builtin>.len", "unittest.mock.patch.object"], "tests.test_sock.test_create_sockets_unix_strings.<lambda1>": [], "tests.test_sock.test_socket_close": ["gunicorn.sock.close_sockets", "unittest.mock.Mock"], "gunicorn.sock.close_sockets": [], "tests.test_sock.test_unix_socket_close_unlink": ["gunicorn.sock.close_sockets", "unittest.mock.Mock"], "tests.test_sock.test_unix_socket_close_without_unlink": ["gunicorn.sock.close_sockets", "unittest.mock.Mock"], "tests.test_valid_requests": ["os.path.dirname", "os.path.join", "pytest.mark.parametrize", "pytest.mark.skip", "glob.glob"], "glob.glob": [], "pytest.mark.skip": [], "tests.test_valid_requests.test_http_parser": ["treq.load_py", "treq.request", "os.path.splitext"], "os.path.splitext": [], "treq.load_py": [], "treq.request": [], "tests.test_reload": [], "tests.test_reload.ReloadApp.__init__": ["<builtin>.super"], "tests.test_reload.ReloadApp.do_load_config": ["gunicorn.app.base.Application.load_default_config", "gunicorn.app.base.Application.cfg.set"], "gunicorn.app.base.Application.load_default_config": [], "gunicorn.app.base.Application.cfg.set": [], "tests.test_reload.SyntaxErrorApp.wsgi": ["<builtin>.SyntaxError"], "<builtin>.SyntaxError": [], "tests.test_reload.MyWorker.run": [], "tests.test_reload.test_reload_on_syntax_error": ["tests.test_reload.ReloadApp.__init__", "gunicorn.workers.base.Worker.__init__", "gunicorn.workers.base.Worker.init_process", "unittest.mock.Mock"], "tests.test_reload.test_reload_on_syntax_error.<lambda1>": [], "gunicorn.workers.base.Worker.__init__": [], "gunicorn.workers.base.Worker.init_process": [], "tests.test_reload.test_start_reloader_after_load_wsgi": ["tests.test_reload.ReloadApp.__init__", "gunicorn.workers.base.Worker.__init__", "gunicorn.workers.base.Worker.init_process", "unittest.mock.Mock"], "tests.test_reload.test_start_reloader_after_load_wsgi.<lambda1>": [], "tests.test_logger": ["pytest.mark.parametrize"], "tests.test_logger.test_atoms_defaults": ["gunicorn.glogging.Logger", "gunicorn.config.Config", "types.SimpleNamespace", "datetime.timedelta", "<builtin>.isinstance"], "gunicorn.glogging.Logger": [], "tests.test_logger.test_atoms_zero_bytes": ["gunicorn.config.Config", "types.SimpleNamespace", "gunicorn.glogging.Logger", "datetime.timedelta"], "tests.test_logger.test_get_username_from_basic_auth_header": ["gunicorn.config.Config", "types.SimpleNamespace", "gunicorn.glogging.Logger", "datetime.timedelta"], "tests.test_logger.test_get_username_handles_malformed_basic_auth_header": ["gunicorn.config.Config", "types.SimpleNamespace", "gunicorn.glogging.Logger", "datetime.timedelta"], "tests.test_pidfile": ["tests.test_pidfile.builtin", "unittest.mock.patch"], "tests.test_pidfile.builtin": [], "tests.test_pidfile.test_validate_no_file": ["<builtin>.IOError"], "<builtin>.IOError": [], "tests.test_pidfile.test_validate_file_pid_exists": [], "tests.test_pidfile.test_validate_file_pid_malformed": [], "tests.test_pidfile.test_validate_file_pid_exists_kill_exception": ["<builtin>.OSError"], "<builtin>.OSError": [], "tests.test_pidfile.test_validate_file_pid_does_not_exist": ["<builtin>.OSError"], "tests.config.test_cfg_with_wsgi_app": [], "tests.config": [], "tests.config.test_cfg": [], "tests.config.test_cfg_alt": [], "tests.test_util": ["pytest.mark.parametrize"], "tests.test_util.test_parse_address": ["gunicorn.util.parse_address"], "gunicorn.util.parse_address": [], "tests.test_util.test_parse_address_invalid": ["gunicorn.util.parse_address", "<builtin>.str", "pytest.raises"], "tests.test_util.test_parse_fd_invalid": ["gunicorn.util.parse_address", "<builtin>.str", "pytest.raises"], "tests.test_util.test_http_date": ["gunicorn.util.http_date"], "gunicorn.util.http_date": [], "tests.test_util.test_is_ipv6": ["gunicorn.util.is_ipv6"], "gunicorn.util.is_ipv6": [], "tests.test_util.test_warn": ["gunicorn.util.warn"], "gunicorn.util.warn": [], "tests.test_util.test_import_app_good": ["gunicorn.util.import_app"], "gunicorn.util.import_app": [], "tests.test_util.test_import_app_bad": ["gunicorn.util.import_app", "<builtin>.str", "pytest.raises"], "tests.test_util.test_import_app_py_ext": ["os.path.dirname", "gunicorn.util.import_app", "<builtin>.str", "pytest.raises"], "tests.test_util.test_to_bytestring": ["gunicorn.util.to_bytestring", "<builtin>.str", "pytest.raises"], "gunicorn.util.to_bytestring": [], "tests.test_util.test_split_request_uri": ["gunicorn.util.split_request_uri"], "tests.test_http": [], "tests.test_http.assert_readline": ["gunicorn.http.body.Body", "io.BytesIO"], "io.BytesIO": [], "gunicorn.http.body.Body": [], "tests.test_http.test_readline_empty_body": ["tests.test_http.assert_readline"], "tests.test_http.test_readline_zero_size": ["tests.test_http.assert_readline"], "tests.test_http.test_readline_new_line_before_size": ["gunicorn.http.body.Body", "io.BytesIO"], "tests.test_http.test_readline_new_line_after_size": ["gunicorn.http.body.Body", "io.BytesIO"], "tests.test_http.test_readline_no_new_line": ["gunicorn.http.body.Body", "io.BytesIO"], "tests.test_http.test_readline_buffer_loaded": ["gunicorn.http.body.Body", "io.BytesIO"], "tests.test_http.test_readline_buffer_loaded_with_size": ["gunicorn.http.body.Body", "io.BytesIO"], "tests.test_http.test_http_header_encoding": ["gunicorn.util.to_bytestring", "gunicorn.http.wsgi.Response", "unittest.mock.MagicMock", "pytest.raises"], "unittest.mock.MagicMock": [], "gunicorn.http.wsgi.Response": [], "tests.test_http.test_http_invalid_response_header": ["gunicorn.http.wsgi.Response", "unittest.mock.MagicMock", "pytest.raises"], "tests.test_http.test_unreader_read_when_size_is_none": ["gunicorn.http.unreader.Unreader", "unittest.mock.MagicMock"], "gunicorn.http.unreader.Unreader": [], "tests.test_http.test_unreader_unread": ["gunicorn.http.unreader.Unreader"], "tests.test_http.test_unreader_read_zero_size": ["gunicorn.http.unreader.Unreader", "unittest.mock.MagicMock"], "tests.test_http.test_unreader_read_with_nonzero_size": ["gunicorn.http.unreader.Unreader", "unittest.mock.MagicMock"], "tests.test_http.test_unreader_raises_excpetion_on_invalid_size": ["gunicorn.http.unreader.Unreader", "pytest.raises"], "tests.test_http.test_iter_unreader_chunk": ["gunicorn.http.unreader.IterUnreader"], "gunicorn.http.unreader.IterUnreader": [], "tests.test_http.test_socket_unreader_chunk": ["t.FakeSocket", "gunicorn.http.unreader.SocketUnreader", "io.BytesIO"], "t.FakeSocket": [], "gunicorn.http.unreader.SocketUnreader": [], "tests.test_http.test_length_reader_read": ["gunicorn.http.body.LengthReader", "gunicorn.http.unreader.IterUnreader"], "gunicorn.http.body.LengthReader": [], "tests.test_http.test_length_reader_read_invalid_size": ["gunicorn.http.body.LengthReader", "pytest.raises"], "tests.test_http.test_eof_reader_read": ["gunicorn.http.body.EOFReader", "gunicorn.http.unreader.IterUnreader"], "gunicorn.http.body.EOFReader": [], "tests.test_http.test_eof_reader_read_invalid_size": ["gunicorn.http.body.EOFReader", "pytest.raises"], "tests.test_systemd": ["pytest.mark.parametrize", "contextlib.contextmanager"], "contextlib.contextmanager": [], "tests.test_systemd.check_environ": ["os.environ.get", "unittest.mock.patch.dict"], "unittest.mock.patch.dict": [], "os.environ.get": [], "tests.test_systemd.test_listen_fds_ignores_wrong_pid": ["unittest.mock.patch.dict", "gunicorn.systemd.listen_fds", "tests.test_systemd.check_environ", "<builtin>.str"], "gunicorn.systemd.listen_fds": [], "tests.test_systemd.test_listen_fds_returns_count": ["gunicorn.systemd.listen_fds", "os.getpid", "unittest.mock.patch.dict", "<builtin>.str", "tests.test_systemd.check_environ"], "tests.test_invalid_requests": ["os.path.dirname", "os.path.join", "pytest.mark.parametrize", "pytest.mark.skip", "glob.glob"], "tests.test_invalid_requests.test_http_parser": ["pytest.raises", "treq.load_py", "treq.badrequest", "os.path.splitext"], "treq.badrequest": [], "tests.t": ["os.path.dirname"], "tests.t.data_source": ["<builtin>.open", "io.BytesIO"], "tests.t.request.__init__": ["os.path.join"], "tests.t.request.__call__": [], "tests.t.request.__call__.run": ["tests.t.data_source", "gunicorn.http.parser.RequestParser"], "tests.t.FakeSocket.__init__": ["tempfile.TemporaryFile"], "tempfile.TemporaryFile": [], "tests.t.FakeSocket.fileno": [], "tests.t.FakeSocket.len": [], "tests.t.FakeSocket.recv": [], "tests.t.FakeSocket.recv_into": ["tests.t.FakeSocket.len", "<builtin>.enumerate"], "tests.t.FakeSocket.send": [], "tests.t.FakeSocket.seek": [], "tests.test_ssl": ["pytest.importorskip"], "pytest.importorskip": [], "tests.test_ssl.test_keyfile": ["<builtin>.issubclass"], "<builtin>.issubclass": [], "tests.test_ssl.test_certfile": ["<builtin>.issubclass"], "tests.test_ssl.test_ssl_version": ["<builtin>.issubclass"], "tests.test_ssl.test_cacerts": ["<builtin>.issubclass"], "tests.test_ssl.test_suppress_ragged_eofs": ["<builtin>.issubclass"], "tests.test_ssl.test_do_handshake_on_connect": ["<builtin>.issubclass"], "tests.test_ssl.test_ciphers": ["<builtin>.issubclass"], "tests.requests.invalid.008": [], "tests.requests.invalid.015": [], "tests.requests.invalid.pp_02": ["gunicorn.config.Config"], "tests.requests.invalid.010": ["gunicorn.config.Config"], "tests.requests.invalid.009": [], "tests.requests.invalid.013": ["gunicorn.config.Config"], "tests.requests.invalid.016": [], "tests.requests.invalid.005": [], "tests.requests.invalid.017": ["gunicorn.config.Config"], "tests.requests.invalid.007": [], "tests.requests.invalid.004": [], "tests.requests.invalid.020": ["gunicorn.config.Config"], "tests.requests.invalid.019": ["gunicorn.config.Config"], "tests.requests.invalid.002": [], "tests.requests.invalid.014": [], "tests.requests.invalid.006": [], "tests.requests.invalid.pp_01": ["gunicorn.config.Config"], "tests.requests.invalid.003": [], "tests.requests.invalid.012": ["gunicorn.config.Config"], "tests.requests.invalid.001": [], "tests.requests.invalid.018": [], "tests.requests.invalid.011": ["gunicorn.config.Config"], "tests.requests.invalid.021": ["gunicorn.config.Config"], "tests.requests.valid.029": ["gunicorn.config.Config"], "tests.requests.valid.008": [], "tests.requests.valid.015": [], "tests.requests.valid.pp_02": ["gunicorn.config.Config"], "tests.requests.valid.010": [], "tests.requests.valid.009": [], "tests.requests.valid.013": [], "tests.requests.valid.016": [], "tests.requests.valid.100": [], "tests.requests.valid.005": [], "tests.requests.valid.017": [], "tests.requests.valid.007": [], "tests.requests.valid.004": [], "tests.requests.valid.027": [], "tests.requests.valid.028": ["gunicorn.config.Config"], "tests.requests.valid.020": [], "tests.requests.valid.019": [], "tests.requests.valid.002": [], "tests.requests.valid.014": [], "tests.requests.valid.006": [], "tests.requests.valid.pp_01": ["gunicorn.config.Config"], "tests.requests.valid.030": ["gunicorn.config.Config"], "tests.requests.valid.003": [], "tests.requests.valid.023": [], "tests.requests.valid.012": [], "tests.requests.valid.024": ["gunicorn.config.Config"], "tests.requests.valid.026": ["gunicorn.config.Config"], "tests.requests.valid.001": [], "tests.requests.valid.018": [], "tests.requests.valid.025": [], "tests.requests.valid.011": [], "tests.requests.valid.099": [], "tests.requests.valid.022": [], "tests.requests.valid.021": [], "tests.support": ["tests.support.create_app"], "tests.support.create_app": ["wsgiref.validate.validator", "<builtin>.len", "<builtin>.str"], "wsgiref.validate.validator": [], "tests.support.create_app.app": ["<builtin>.iter"], "tests.support.error_factory": ["<builtin>.TypeError"], "<builtin>.TypeError": [], "tests.support.requires_mac_ver": [], "tests.support.requires_mac_ver.decorator": ["functools.wraps"], "functools.wraps": [], "tests.support.requires_mac_ver.decorator.wrapper": ["<builtin>.tuple", "<builtin>.map", "platform.mac_ver", "unittest.SkipTest"], "platform.mac_ver": [], "<builtin>.map": [], "<builtin>.tuple": [], "unittest.SkipTest": []}
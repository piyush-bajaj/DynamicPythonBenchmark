{"test.test": ["unittest.main", "os.path.dirname", "os.path.join"], "os.path.dirname": [], "os.path.join": [], "test.test.UtilityTests.test_db_float_conversions": ["pydub.utils.ratio_to_db", "unittest.TestCase.assertEqual", "pydub.utils.db_to_float"], "pydub.utils.db_to_float": [], "unittest.TestCase.assertEqual": [], "pydub.utils.ratio_to_db": [], "test.test.PathLikeObjectTests.MyPathLike.__init__": [], "test.test.PathLikeObjectTests.MyPathLike.__fspath__": [], "test.test.PathLikeObjectTests.setUp": ["pathlib.Path", "os.path.join", "<builtin>.bytes", "sys.getdefaultencoding", "test.test.PathLikeObjectTests.MyPathLike.__init__"], "pathlib.Path": [], "sys.getdefaultencoding": [], "<builtin>.bytes": [], "test.test.PathLikeObjectTests.test_audio_segment_from_pathlib_path": ["unittest.TestCase.assertTrue", "unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "pydub.AudioSegment.from_file": [], "<builtin>.len": [], "unittest.TestCase.assertTrue": [], "test.test.PathLikeObjectTests.test_audio_segment_from_path_like_str": ["unittest.TestCase.assertTrue", "unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "test.test.PathLikeObjectTests.test_audio_segment_from_path_like_bytes": ["unittest.TestCase.assertTrue", "unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "test.test.PathLikeObjectTests.test_non_existant_pathlib_path": ["pathlib.Path", "unittest.TestCase.assertRaises", "pydub.AudioSegment.from_file"], "unittest.TestCase.assertRaises": [], "test.test.PathLikeObjectTests.test_non_existant_path_like_str": ["pydub.AudioSegment.from_file", "unittest.TestCase.assertRaises", "test.test.PathLikeObjectTests.MyPathLike.__init__"], "test.test.PathLikeObjectTests.test_non_existant_path_like_bytes": ["unittest.TestCase.assertRaises", "<builtin>.bytes", "pydub.AudioSegment.from_file", "sys.getdefaultencoding", "test.test.PathLikeObjectTests.MyPathLike.__init__"], "test.test.PathLikeObjectTests.assertWithinRange": ["unittest.TestCase.assertTrue"], "test.test.PathLikeObjectTests.assertWithinTolerance": ["test.test.PathLikeObjectTests.assertWithinRange"], "test.test.PathLikeObjectTests.test_export_pathlib_path": ["test.test.PathLikeObjectTests.assertWithinTolerance", "unittest.TestCase.assertTrue", "pathlib.Path", "pydub.AudioSegment.from_file", "<builtin>.len", "tempfile.gettempdir", "os.unlink"], "tempfile.gettempdir": [], "os.unlink": [], "test.test.FileAccessTests.setUp": ["os.path.join"], "test.test.FileAccessTests.test_audio_segment_from_mp3": ["<builtin>.open", "pydub.AudioSegment.from_mp3", "unittest.TestCase.assertTrue", "os.path.join", "unittest.TestCase.assertEqual", "<builtin>.len"], "pydub.AudioSegment.from_mp3": [], "<builtin>.open": [], "test.test.AudioSegmentTests.setUp": ["pydub.AudioSegment.from_mp3", "os.path.join"], "test.test.AudioSegmentTests.assertWithinRange": ["unittest.TestCase.assertTrue"], "test.test.AudioSegmentTests.assertWithinTolerance": ["test.test.AudioSegmentTests.assertWithinRange"], "test.test.AudioSegmentTests.test_direct_instantiation_with_bytes": ["pydub.AudioSegment", "unittest.TestCase.assertEqual"], "pydub.AudioSegment": [], "test.test.AudioSegmentTests.test_24_bit_audio": ["pydub.AudioSegment._from_safe_wav", "<builtin>.open", "os.path.join", "unittest.TestCase.assertEqual", "<builtin>.len", "struct.unpack"], "pydub.AudioSegment._from_safe_wav": [], "struct.unpack": [], "test.test.AudioSegmentTests.test_8_bit_audio": ["test.test.AudioSegmentTests.test_8_bit_audio.check_8bit_segment", "<builtin>.open", "tempfile.NamedTemporaryFile", "os.path.join", "pydub.AudioSegment.from_file"], "test.test.AudioSegmentTests.test_8_bit_audio.check_8bit_segment": ["test.test.AudioSegmentTests.assertWithinTolerance"], "tempfile.NamedTemporaryFile": [], "test.test.AudioSegmentTests.test_192khz_audio": ["<builtin>.open", "pydub.audio_segment.extract_wav_headers", "os.path.join", "unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "pydub.audio_segment.extract_wav_headers": [], "test.test.AudioSegmentTests.test_concat": ["test.test.AudioSegmentTests.assertWithinTolerance", "<builtin>.len"], "test.test.AudioSegmentTests.test_append": ["unittest.TestCase.assertEqual", "<builtin>.len"], "test.test.AudioSegmentTests.test_too_long_crossfade": ["unittest.TestCase.assertRaises"], "test.test.AudioSegmentTests.test_too_long_crossfade.<lambda1>": ["<builtin>.len"], "test.test.AudioSegmentTests.test_sum": ["unittest.TestCase.fail", "<builtin>.sum", "<builtin>.str", "test.test.AudioSegmentTests.test_sum.gen"], "test.test.AudioSegmentTests.test_sum.gen": [], "<builtin>.sum": [], "<builtin>.str": [], "unittest.TestCase.fail": [], "test.test.AudioSegmentTests.test_volume_with_add_sub": ["unittest.TestCase.assertAlmostEqual", "pydub.utils.ratio_to_db"], "unittest.TestCase.assertAlmostEqual": [], "test.test.AudioSegmentTests.test_repeat_with_multiply": ["unittest.TestCase.assertTrue", "<builtin>.len"], "test.test.AudioSegmentTests.test_overlay": ["unittest.TestCase.assertTrue", "unittest.TestCase.assertEqual", "<builtin>.len"], "test.test.AudioSegmentTests.test_overlay_times": ["unittest.TestCase.assertTrue", "unittest.TestCase.assertEqual", "unittest.TestCase.assertFalse", "<builtin>.len"], "unittest.TestCase.assertFalse": [], "test.test.AudioSegmentTests.test_overlay_with_gain_change": ["unittest.TestCase.assertAlmostEqual", "unittest.TestCase.assertEqual", "pydub.AudioSegment.silent", "<builtin>.len"], "pydub.AudioSegment.silent": [], "test.test.AudioSegmentTests.test_slicing": ["unittest.TestCase.assertTrue", "unittest.TestCase.assertEqual", "<builtin>.len"], "test.test.AudioSegmentTests.test_slicing_by_step": ["unittest.TestCase.assertTrue", "<builtin>.isinstance", "unittest.TestCase.assertEqual", "<builtin>.len"], "<builtin>.isinstance": [], "test.test.AudioSegmentTests.test_indexing": ["unittest.TestCase.assertTrue", "<builtin>.sum"], "test.test.AudioSegmentTests.test_set_channels": ["tempfile.NamedTemporaryFile", "pydub.AudioSegment.from_mp3", "unittest.TestCase.assertEqual", "test.test.AudioSegmentTests.assertWithinTolerance", "<builtin>.len", "os.remove"], "os.remove": [], "test.test.AudioSegmentTests.test_split_to_mono": ["unittest.TestCase.assertEqual", "<builtin>.len"], "test.test.AudioSegmentTests.test_apply_gain_stereo": ["test.test.AudioSegmentTests.test_apply_gain_stereo.check_stereo_gain", "<builtin>.float"], "<builtin>.float": [], "test.test.AudioSegmentTests.test_apply_gain_stereo.assertAlmostEqual": ["unittest.TestCase.assertAlmostEqual", "unittest.TestCase.assertEqual"], "test.test.AudioSegmentTests.test_apply_gain_stereo.check_stereo_gain": ["test.test.AudioSegmentTests.test_apply_gain_stereo.assertAlmostEqual", "unittest.TestCase.assertEqual"], "test.test.AudioSegmentTests.test_pan": ["<builtin>.float", "test.test.AudioSegmentTests.test_pan.check_pan"], "test.test.AudioSegmentTests.test_pan.assertAlmostEqual": ["unittest.TestCase.assertAlmostEqual", "unittest.TestCase.assertEqual"], "test.test.AudioSegmentTests.test_pan.check_pan": ["test.test.AudioSegmentTests.test_pan.assertAlmostEqual"], "test.test.AudioSegmentTests.test_export_as_mp3": ["pydub.AudioSegment.from_mp3", "test.test.AudioSegmentTests.assertWithinTolerance", "<builtin>.len"], "test.test.AudioSegmentTests.test_export_as_wav": ["test.test.AudioSegmentTests.assertWithinTolerance", "pydub.AudioSegment.from_wav", "<builtin>.len"], "pydub.AudioSegment.from_wav": [], "test.test.AudioSegmentTests.test_export_as_wav_with_codec": ["unittest.TestCase.assertEqual", "test.test.AudioSegmentTests.assertWithinTolerance", "pydub.AudioSegment.from_wav", "<builtin>.len"], "test.test.AudioSegmentTests.test_export_as_wav_with_parameters": ["unittest.TestCase.assertEqual", "test.test.AudioSegmentTests.assertWithinTolerance", "pydub.AudioSegment.from_wav", "<builtin>.len"], "test.test.AudioSegmentTests.test_export_as_raw": ["pydub.AudioSegment.from_raw", "test.test.AudioSegmentTests.assertWithinTolerance", "<builtin>.len"], "pydub.AudioSegment.from_raw": [], "test.test.AudioSegmentTests.test_export_as_raw_with_codec": ["unittest.TestCase.assertRaises"], "test.test.AudioSegmentTests.test_export_as_raw_with_parameters": ["unittest.TestCase.assertRaises"], "test.test.AudioSegmentTests.test_export_as_ogg": ["pydub.AudioSegment.from_ogg", "test.test.AudioSegmentTests.assertWithinTolerance", "<builtin>.len"], "pydub.AudioSegment.from_ogg": [], "test.test.AudioSegmentTests.test_export_forced_codec": ["tempfile.NamedTemporaryFile", "<builtin>.len", "test.test.AudioSegmentTests.assertWithinTolerance", "os.remove", "pydub.AudioSegment.from_ogg"], "test.test.AudioSegmentTests.test_fades": ["<builtin>.float", "unittest.TestCase.assertTrue", "pydub.utils.ratio_to_db", "unittest.TestCase.assertEqual", "test.test.AudioSegmentTests.assertWithinTolerance", "<builtin>.len"], "test.test.AudioSegmentTests.test_reverse": ["unittest.TestCase.assertEqual", "<builtin>.len"], "test.test.AudioSegmentTests.test_normalize": ["unittest.TestCase.assertTrue", "unittest.TestCase.assertEqual", "test.test.AudioSegmentTests.assertWithinTolerance", "<builtin>.len"], "test.test.AudioSegmentTests.test_for_accidental_shortening": ["tempfile.NamedTemporaryFile", "pydub.AudioSegment.from_mp3", "<builtin>.range", "<builtin>.len", "unittest.TestCase.assertAlmostEqual", "os.remove"], "<builtin>.range": [], "pydub.utils.get_supported_decoders": [], "test.test.AudioSegmentTests": ["unittest.skipUnless", "pydub.utils.get_supported_decoders"], "unittest.skipUnless": [], "test.test.AudioSegmentTests.test_formats": ["unittest.TestCase.assertTrue", "os.path.join", "pydub.AudioSegment.from_file", "<builtin>.len"], "test.test.AudioSegmentTests.test_equal_and_not_equal": ["unittest.TestCase.assertTrue", "unittest.TestCase.assertFalse", "pydub.AudioSegment.from_wav"], "test.test.AudioSegmentTests.test_duration": ["<builtin>.int", "unittest.TestCase.assertEqual", "pydub.AudioSegment.from_wav"], "<builtin>.int": [], "test.test.AudioSegmentTests.test_autodetect_format": ["unittest.TestCase.assertRaises", "os.path.join", "functools.partial", "<builtin>.int", "unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file"], "functools.partial": [], "test.test.AudioSegmentTests.test_export_ogg_as_mp3": ["pydub.AudioSegment.from_file", "tempfile.NamedTemporaryFile"], "test.test.AudioSegmentTests.test_export_mp3_as_ogg": ["pydub.AudioSegment.from_file", "tempfile.NamedTemporaryFile"], "test.test.AudioSegmentTests.test_export_webm_as_mp3": ["pydub.AudioSegment.from_file", "tempfile.NamedTemporaryFile"], "test.test.AudioSegmentTests.test_export_mp3_as_webm": ["pydub.AudioSegment.from_file", "tempfile.NamedTemporaryFile"], "test.test.AudioSegmentTests.test_export_mp4_as_ogg": ["pydub.AudioSegment.from_file", "tempfile.NamedTemporaryFile"], "test.test.AudioSegmentTests.test_export_mp4_as_mp3": ["pydub.AudioSegment.from_file", "tempfile.NamedTemporaryFile"], "test.test.AudioSegmentTests.test_export_mp4_as_wav": ["pydub.AudioSegment.from_file", "tempfile.NamedTemporaryFile"], "test.test.AudioSegmentTests.test_export_mp4_as_mp3_with_tags": ["pydub.AudioSegment.from_file", "tempfile.NamedTemporaryFile"], "test.test.AudioSegmentTests.test_export_mp4_as_mp3_with_tags_raises_exception_when_tags_are_not_a_dictionary": ["pydub.AudioSegment.from_file", "functools.partial", "unittest.TestCase.assertRaises", "tempfile.NamedTemporaryFile"], "test.test.AudioSegmentTests.test_export_mp4_as_mp3_with_tags_raises_exception_when_id3version_is_wrong": ["pydub.AudioSegment.from_file", "functools.partial", "unittest.TestCase.assertRaises", "tempfile.NamedTemporaryFile"], "test.test.AudioSegmentTests.test_export_mp3_with_tags": ["tempfile.NamedTemporaryFile", "unittest.TestCase.assertEqual", "pydub.utils.mediainfo", "pydub.AudioSegment.from_file", "os.remove"], "pydub.utils.mediainfo": [], "test.test.AudioSegmentTests.test_mp3_with_jpg_cover_img": ["pydub.AudioSegment.from_file", "test.test.AudioSegmentTests.assertWithinTolerance", "tempfile.NamedTemporaryFile", "<builtin>.len"], "test.test.AudioSegmentTests.test_mp3_with_png_cover_img": ["pydub.AudioSegment.from_file", "test.test.AudioSegmentTests.assertWithinTolerance", "tempfile.NamedTemporaryFile", "<builtin>.len"], "test.test.AudioSegmentTests.test_fade_raises_exception_when_duration_start_end_are_none": ["functools.partial", "unittest.TestCase.assertRaises"], "test.test.AudioSegmentTests.test_silent": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.silent", "<builtin>.len"], "test.test.AudioSegmentTests.test_from_mono_audiosegments": ["pydub.AudioSegment.from_mono_audiosegments", "unittest.TestCase.assertEqual", "<builtin>.len"], "pydub.AudioSegment.from_mono_audiosegments": [], "test.test.AudioSegmentTests.test_fade_raises_exception_when_duration_is_negative": ["functools.partial", "unittest.TestCase.assertRaises"], "test.test.AudioSegmentTests.test_make_chunks": ["pydub.utils.make_chunks", "unittest.TestCase.assertEqual", "<builtin>.len"], "pydub.utils.make_chunks": [], "test.test.AudioSegmentTests.test_empty": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.empty", "<builtin>.len"], "pydub.AudioSegment.empty": [], "test.test.AudioSegmentTests.test_speedup": ["test.test.AudioSegmentTests.assertWithinTolerance", "<builtin>.len"], "test.test.AudioSegmentTests.test_dBFS": ["test.test.AudioSegmentTests.assertWithinTolerance"], "test.test.AudioSegmentTests.test_compress": ["unittest.TestCase.assertTrue", "test.test.AudioSegmentTests.assertWithinTolerance"], "test.test.AudioSegmentTests.test_exporting_to_ogg_uses_default_codec_when_codec_param_is_none": ["tempfile.NamedTemporaryFile", "unittest.TestCase.assertEqual", "pydub.utils.mediainfo", "pydub.AudioSegment.from_file", "os.remove"], "test.test.AudioSegmentTests.test_zero_length_segment": ["unittest.TestCase.assertEqual", "<builtin>.len"], "test.test.AudioSegmentTests.test_invert": ["unittest.TestCase.assertTrue", "<builtin>.Exception", "unittest.TestCase.assertFalse", "pydub.generators.Sine"], "pydub.generators.Sine": [], "<builtin>.Exception": [], "test.test.AudioSegmentTests.test_max_dBFS": ["unittest.TestCase.assertAlmostEqual", "pydub.generators.Sine"], "test.test.AudioSegmentTests.test_array_type": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.silent"], "test.test.AudioSegmentTests.test_sample_array": ["<builtin>.list", "pydub.generators.Sine", "unittest.TestCase.assertEqual"], "<builtin>.list": [], "test.test.AudioSegmentTests.test_get_dc_offset": ["test.test.AudioSegmentTests.assertWithinTolerance"], "test.test.AudioSegmentTests.test_remove_dc_offset": ["test.test.AudioSegmentTests.assertWithinTolerance"], "test.test.AudioSegmentTests.test_from_file_clean_fail": ["unittest.TestCase.assertEquals", "os.remove", "tempfile.NamedTemporaryFile", "unittest.TestCase.assertRaises", "os.rmdir", "os.path.basename", "tempfile.mkdtemp", "tempfile.gettempdir", "os.listdir"], "tempfile.mkdtemp": [], "os.listdir": [], "os.path.basename": [], "unittest.TestCase.assertEquals": [], "os.rmdir": [], "test.test.SilenceTests.setUp": ["os.path.join", "pydub.AudioSegment.from_wav"], "test.test.SilenceTests.test_split_on_silence_complete_silence": ["pydub.silence.split_on_silence", "unittest.TestCase.assertEquals", "pydub.AudioSegment.silent"], "pydub.silence.split_on_silence": [], "test.test.SilenceTests.test_split_on_silence_test1": ["pydub.silence.split_on_silence", "unittest.TestCase.assertEqual", "<builtin>.len"], "test.test.SilenceTests.test_split_on_silence_no_silence": ["pydub.silence.split_on_silence", "unittest.TestCase.assertEqual", "<builtin>.len"], "test.test.SilenceTests.test_detect_completely_silent_segment": ["pydub.silence.detect_silence", "pydub.AudioSegment.silent", "unittest.TestCase.assertEqual"], "pydub.silence.detect_silence": [], "test.test.SilenceTests.test_detect_tight_silent_segment": ["pydub.silence.detect_silence", "pydub.AudioSegment.silent", "unittest.TestCase.assertEqual"], "test.test.SilenceTests.test_detect_too_long_silence": ["pydub.silence.detect_silence", "pydub.AudioSegment.silent", "unittest.TestCase.assertEqual"], "test.test.SilenceTests.test_detect_silence_seg1": ["pydub.silence.detect_silence", "unittest.TestCase.assertEqual"], "test.test.SilenceTests.test_detect_silence_seg1_with_seek_split": ["pydub.silence.detect_silence", "unittest.TestCase.assertEqual"], "test.test.SilenceTests.test_realistic_audio": ["unittest.TestCase.assertTrue", "pydub.silence.detect_silence"], "test.test.GeneratorTests.test_with_smoke": ["pydub.generators.Sawtooth", "pydub.generators.Sine", "pydub.generators.Triangle", "pydub.generators.WhiteNoise", "pydub.generators.Pulse", "pydub.generators.Square"], "pydub.generators.Square": [], "pydub.generators.Triangle": [], "pydub.generators.Pulse": [], "pydub.generators.Sawtooth": [], "pydub.generators.WhiteNoise": [], "test.test.GeneratorTests.test_loudness": ["unittest.TestCase.assertAlmostEqual", "pydub.generators.Square", "pydub.generators.Sine", "pydub.generators.WhiteNoise"], "test.test.GeneratorTests.test_duration": ["unittest.TestCase.assertAlmostEqual", "pydub.generators.Sine", "<builtin>.len"], "test.test.NoConverterTests.setUp": ["os.path.join"], "test.test.NoConverterTests.tearDown": ["pydub.utils.get_encoder_name"], "pydub.utils.get_encoder_name": [], "test.test.NoConverterTests.test_opening_wav_file": ["unittest.TestCase.assertTrue", "pydub.AudioSegment.from_file", "pydub.AudioSegment.from_wav", "<builtin>.len"], "test.test.NoConverterTests.test_opening_wav24_file": ["unittest.TestCase.assertTrue", "pydub.AudioSegment.from_file", "pydub.AudioSegment.from_wav", "<builtin>.len"], "test.test.NoConverterTests.test_opening_raw_file": ["pydub.AudioSegment.from_raw", "unittest.TestCase.assertTrue", "pydub.AudioSegment.from_file", "<builtin>.len"], "test.test.NoConverterTests.test_opening_raw_file_with_missing_args_fails": ["functools.partial", "unittest.TestCase.assertRaises"], "test.test.NoConverterTests.test_opening_mp3_file_fails": ["functools.partial", "unittest.TestCase.assertRaises"], "test.test.NoConverterTests.test_init_AudioSegment_data_buffer": ["pydub.AudioSegment", "unittest.TestCase.assertEqual"], "test.test.NoConverterTests.test_init_AudioSegment_data_buffer_with_missing_args_fails": ["functools.partial", "unittest.TestCase.assertRaises"], "test.test.NoConverterTests.test_init_AudioSegment_data_buffer_with_bad_values_fails": ["functools.partial", "unittest.TestCase.assertRaises"], "test.test.NoConverterTests.test_exporting": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.from_wav", "<builtin>.len"], "test.test.NoConverterTests.test_opening_empty_wav_file": ["unittest.TestCase.assertTrue", "pydub.AudioSegment.from_file", "pydub.AudioSegment.from_wav", "<builtin>.len"], "test.test.FilterTests.setUp": ["os.path.join", "pydub.AudioSegment.from_wav"], "test.test.FilterTests.test_highpass_works_on_multichannel_segments": ["unittest.TestCase.assertTrue", "unittest.TestCase.assertEqual"], "test.test.FilterTests.test_highpass_filter_reduces_loudness": ["pydub.generators.Square", "unittest.TestCase.assertTrue"], "test.test.FilterTests.test_highpass_filter_cutoff_frequency": ["unittest.TestCase.assertAlmostEqual", "pydub.generators.Sine"], "test.test.FilterTests.test_lowpass_filter_reduces_loudness": ["pydub.generators.Square", "unittest.TestCase.assertTrue"], "test.test.FilterTests.test_lowpass_filter_cutoff_frequency": ["unittest.TestCase.assertAlmostEqual", "pydub.generators.Sine"], "test.test.PartialAudioSegmentLoadTests.setUp": ["os.path.join"], "test.test.PartialAudioSegmentLoadTests.tearDown": ["pydub.utils.get_encoder_name"], "test.test.PartialAudioSegmentLoadTests.test_partial_load_duration_equals_cropped_mp3_audio_segment": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "test.test.PartialAudioSegmentLoadTests.test_partial_load_start_second_equals_cropped_mp3_audio_segment": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "test.test.PartialAudioSegmentLoadTests.test_partial_load_start_second_and_duration_equals_cropped_mp3_audio_segment": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "test.test.PartialAudioSegmentLoadTests.test_partial_load_duration_equals_cropped_wav_audio_segment": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "test.test.PartialAudioSegmentLoadTests.test_partial_load_start_second_equals_cropped_wav_audio_segment": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "test.test.PartialAudioSegmentLoadTests.test_partial_load_start_second_and_duration_equals_cropped_wav_audio_segment": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "test.test.PartialAudioSegmentLoadTests.test_partial_load_duration_equals_cropped_raw_audio_segment": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "test.test.PartialAudioSegmentLoadTests.test_partial_load_start_second_equals_cropped_raw_audio_segment": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "test.test.PartialAudioSegmentLoadTests.test_partial_load_start_second_and_duration_equals_cropped_raw_audio_segment": ["unittest.TestCase.assertEqual", "pydub.AudioSegment.from_file", "<builtin>.len"], "unittest.main": []}
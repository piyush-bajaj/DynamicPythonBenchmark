{"tests.test_utils": ["<builtin>.range", "<builtin>.list", "pathlib.Path", "pytest.mark.parametrize", "pytest.mark.external"], "pathlib.Path": [], "pytest.mark.parametrize": [], "tests.test_utils.test_skip_over_whitespace": ["pypdf._utils.skip_over_whitespace"], "pypdf._utils.skip_over_whitespace": [], "tests.test_utils.test_read_until_whitespace": ["pypdf._utils.read_until_whitespace", "io.BytesIO"], "io.BytesIO": [], "pypdf._utils.read_until_whitespace": [], "tests.test_utils.test_skip_over_comment": ["pypdf._utils.skip_over_comment"], "pypdf._utils.skip_over_comment": [], "tests.test_utils.test_read_until_regex_premature_ending_raise": ["re.compile", "pypdf._utils.read_until_regex", "io.BytesIO", "pytest.raises"], "pytest.raises": [], "re.compile": [], "pypdf._utils.read_until_regex": [], "tests.test_utils.test_read_until_regex_premature_ending_name": ["re.compile", "io.BytesIO", "pypdf._utils.read_until_regex"], "tests.test_utils.test_matrix_multiply": ["pypdf._utils.matrix_multiply"], "pypdf._utils.matrix_multiply": [], "tests.test_utils.test_mark_location": ["os.remove", "pypdf._utils.mark_location", "io.BytesIO"], "pypdf._utils.mark_location": [], "os.remove": [], "tests.test_utils.test_hex_str": [], "tests.test_utils.test_b": [], "tests.test_utils.test_deprecate_no_replacement": ["pytest.warns"], "pytest.warns": [], "tests.test_utils.test_paeth_predictor": [], "tests.test_utils.test_read_block_backwards_errs": ["pypdf._utils.read_block_backwards", "io.BytesIO", "pytest.raises"], "pypdf._utils.read_block_backwards": [], "tests.test_utils.test_read_block_backwards": ["pypdf._utils.read_block_backwards", "io.BytesIO"], "tests.test_utils.test_read_block_backwards_at_start": ["pypdf._utils.read_previous_line", "io.BytesIO", "pytest.raises"], "pypdf._utils.read_previous_line": [], "<builtin>.range": [], "<builtin>.list": [], "tests.test_utils.test_read_previous_line": ["pypdf._utils.read_previous_line", "io.BytesIO"], "tests.test_utils.test_read_previous_line2": ["tests.test_utils.test_read_previous_line"], "tests.test_utils.test_get_max_pdf_version_header": ["pypdf._utils._get_max_pdf_version_header", "pytest.raises"], "pypdf._utils._get_max_pdf_version_header": [], "tests.test_utils.test_read_block_backwards_exception": ["pypdf._utils.read_block_backwards", "io.BytesIO", "pytest.raises"], "tests.test_utils.test_deprecation_bookmark": ["tests.test_utils.test_deprecation_bookmark.foo", "pypdf._utils.deprecation_bookmark", "pytest.raises"], "pypdf._utils.deprecation_bookmark": [], "tests.test_utils.test_deprecation_bookmark.foo": [], "pytest.mark.external": [], "tests.test_utils.test_escapedcode_followed_by_int": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "get_pdf_from_url": [], "pypdf.PdfReader": [], "tests.test_utils.test_human_readable_bytes": ["pypdf._utils._human_readable_bytes"], "pypdf._utils._human_readable_bytes": [], "tests.test_utils.test_file": ["<builtin>.repr", "<builtin>.str", "pypdf._utils.File"], "pypdf._utils.File": [], "<builtin>.str": [], "<builtin>.repr": [], "tests.test_filters": ["unittest.mock.patch", "pytest.mark.xfail", "<builtin>.list", "pytest.mark.parametrize", "pytest.mark.external", "itertools.product"], "itertools.product": [], "tests.test_filters.test_FlateDecode": ["pypdf.filters.FlateDecode", "pypdf.generic.DictionaryObject"], "pypdf.filters.FlateDecode": [], "pypdf.generic.DictionaryObject": [], "tests.test_filters.test_FlateDecode_unsupported_predictor": ["itertools.product", "pypdf.filters.FlateDecode", "pypdf.generic.DictionaryObject", "pytest.raises"], "tests.test_filters.test_FlateDecode_decompress_array_params": ["pypdf.filters.FlateDecode"], "tests.test_filters.test_ASCIIHexDecode": ["pypdf.filters.ASCIIHexDecode.decode"], "pypdf.filters.ASCIIHexDecode.decode": [], "tests.test_filters.test_ASCIIHexDecode_no_eod": ["pypdf.filters.ASCIIHexDecode.decode", "pytest.raises"], "pytest.mark.xfail": [], "tests.test_filters.test_ASCII85Decode_with_overflow": ["pypdf.filters.ASCII85Decode.decode", "pytest.raises"], "pypdf.filters.ASCII85Decode.decode": [], "tests.test_filters.test_ASCII85Decode_five_zero_bytes": ["pypdf.filters.ASCII85Decode.decode", "<builtin>.zip"], "<builtin>.zip": [], "tests.test_filters.test_CCITParameters": ["pypdf.filters.CCITParameters"], "pypdf.filters.CCITParameters": [], "tests.test_filters.test_CCIT_get_parameters": ["pypdf.filters.CCITTFaxDecode._get_parameters"], "pypdf.filters.CCITTFaxDecode._get_parameters": [], "tests.test_filters.test_CCITTFaxDecode": ["pypdf.generic.NumberObject", "pypdf.filters.CCITTFaxDecode.decode", "pypdf.generic.DictionaryObject"], "pypdf.generic.NumberObject": [], "pypdf.filters.CCITTFaxDecode.decode": [], "unittest.mock.patch": [], "tests.test_filters.test_decompress_zlib_error": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_filters.test_lzw_decode_neg1": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO", "pytest.raises"], "tests.test_filters.test_issue_399": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_filters.test_image_without_imagemagic": ["pytest.raises", "get_pdf_from_url", "unittest.mock.patch.dict", "pypdf.PdfReader", "io.BytesIO"], "unittest.mock.patch.dict": [], "tests.test_generic": ["unittest.mock.patch", "pathlib.Path", "pytest.mark.parametrize", "pytest.mark.external", "pytest.mark.slow"], "tests.test_generic.ChildDummy.indirect_reference": [], "tests.test_generic.test_float_object_exception": ["pypdf.generic.FloatObject"], "pypdf.generic.FloatObject": [], "tests.test_generic.test_number_object_exception": ["pypdf.generic.NumberObject"], "tests.test_generic.test_number_object_no_exception": ["pypdf.generic.NumberObject"], "tests.test_generic.test_create_string_object_exception": ["pypdf.generic.create_string_object", "pytest.raises"], "pypdf.generic.create_string_object": [], "tests.test_generic.test_boolean_object": ["pypdf.generic.BooleanObject.read_from_stream", "io.BytesIO"], "pypdf.generic.BooleanObject.read_from_stream": [], "tests.test_generic.test_boolean_object_write": ["pypdf.generic.BooleanObject", "io.BytesIO"], "pypdf.generic.BooleanObject": [], "tests.test_generic.test_boolean_eq": ["pypdf.generic.BooleanObject"], "tests.test_generic.test_boolean_object_exception": ["pypdf.generic.BooleanObject.read_from_stream", "io.BytesIO", "pytest.raises"], "tests.test_generic.test_array_object_exception": ["pypdf.generic.ArrayObject.read_from_stream", "io.BytesIO", "pytest.raises"], "pypdf.generic.ArrayObject.read_from_stream": [], "tests.test_generic.test_null_object_exception": ["pypdf.generic.NullObject.read_from_stream", "io.BytesIO", "pytest.raises"], "pypdf.generic.NullObject.read_from_stream": [], "tests.test_generic.test_indirect_object_premature": ["pypdf.generic.IndirectObject.read_from_stream", "io.BytesIO", "pytest.raises"], "pypdf.generic.IndirectObject.read_from_stream": [], "tests.test_generic.test_readHexStringFromStream": ["io.BytesIO", "pypdf.generic.read_hex_string_from_stream"], "pypdf.generic.read_hex_string_from_stream": [], "tests.test_generic.test_readHexStringFromStream_exception": ["pypdf.generic.read_hex_string_from_stream", "io.BytesIO", "pytest.raises"], "tests.test_generic.test_readStringFromStream_exception": ["pypdf.generic.read_string_from_stream", "io.BytesIO", "pytest.raises"], "pypdf.generic.read_string_from_stream": [], "tests.test_generic.test_readStringFromStream_not_in_escapedict_no_digit": ["pypdf.generic.read_string_from_stream", "io.BytesIO", "pytest.raises"], "tests.test_generic.test_readStringFromStream_multichar_eol": ["io.BytesIO", "pypdf.generic.read_string_from_stream"], "tests.test_generic.test_readStringFromStream_multichar_eol2": ["io.BytesIO", "pypdf.generic.read_string_from_stream"], "tests.test_generic.test_readStringFromStream_excape_digit": ["io.BytesIO", "pypdf.generic.read_string_from_stream"], "tests.test_generic.test_readStringFromStream_excape_digit2": ["io.BytesIO", "pypdf.generic.read_string_from_stream"], "tests.test_generic.test_NameObject": ["ReaderDummy", "pypdf.generic.NameObject", "pytest.raises", "<builtin>.bytes", "pypdf.generic.NameObject.read_from_stream", "io.BytesIO"], "pypdf.generic.NameObject.read_from_stream": [], "ReaderDummy": [], "pypdf.generic.NameObject": [], "<builtin>.bytes": [], "tests.test_generic.test_destination_fit_r": ["pypdf.generic.NameObject", "pypdf.generic.Destination", "pypdf.generic.FloatObject", "pypdf.generic.NullObject", "pypdf.generic.Fit.fit_rectangle", "pypdf.generic.TextStringObject", "<builtin>.list"], "pypdf.generic.TextStringObject": [], "pypdf.generic.NullObject": [], "pypdf.generic.Fit.fit_rectangle": [], "pypdf.generic.Destination": [], "tests.test_generic.test_destination_fit_v": ["pypdf.generic.Fit.fit_vertically", "pypdf.generic.NameObject", "pypdf.generic.NullObject", "pypdf.generic.Destination"], "pypdf.generic.Fit.fit_vertically": [], "tests.test_generic.test_outline_item_write_to_stream": ["pypdf.generic.NameObject", "io.BytesIO", "pypdf.generic.NullObject", "pypdf.generic.Fit.fit_vertically", "pypdf.generic.OutlineItem"], "pypdf.generic.OutlineItem": [], "tests.test_generic.test_encode_pdfdocencoding_keyerror": ["pypdf.generic.encode_pdfdocencoding", "pytest.raises"], "pypdf.generic.encode_pdfdocencoding": [], "tests.test_generic.test_read_object_comment_exception": ["pypdf.generic.read_object", "io.BytesIO", "pytest.raises"], "pypdf.generic.read_object": [], "tests.test_generic.test_read_object_empty": ["pypdf.generic.read_object", "<builtin>.isinstance", "io.BytesIO"], "<builtin>.isinstance": [], "tests.test_generic.test_read_object_invalid": ["pypdf.generic.read_object", "io.BytesIO", "pytest.raises"], "tests.test_generic.test_read_object_comment": ["pypdf.generic.read_object", "io.BytesIO"], "tests.test_generic.test_ByteStringObject": ["pypdf.generic.ByteStringObject", "io.BytesIO"], "pypdf.generic.ByteStringObject": [], "tests.test_generic.test_DictionaryObject_key_is_no_pdfobject": ["pypdf.generic.NameObject", "pypdf.generic.DictionaryObject", "pytest.raises"], "tests.test_generic.test_DictionaryObject_xmp_meta": ["pypdf.generic.NameObject", "pypdf.generic.DictionaryObject"], "tests.test_generic.test_DictionaryObject_value_is_no_pdfobject": ["pypdf.generic.NameObject", "pypdf.generic.DictionaryObject", "pytest.raises"], "tests.test_generic.test_DictionaryObject_setdefault_key_is_no_pdfobject": ["pypdf.generic.NameObject", "pypdf.generic.DictionaryObject", "pytest.raises"], "tests.test_generic.test_DictionaryObject_setdefault_value_is_no_pdfobject": ["pypdf.generic.NameObject", "pypdf.generic.DictionaryObject", "pytest.raises"], "tests.test_generic.test_DictionaryObject_setdefault_value": ["pypdf.generic.NameObject", "pypdf.generic.DictionaryObject"], "tests.test_generic.test_DictionaryObject_read_from_stream": ["pypdf.generic.NameObject", "io.BytesIO", "pypdf.generic.DictionaryObject.read_from_stream"], "pypdf.generic.DictionaryObject.read_from_stream": [], "tests.test_generic.test_DictionaryObject_read_from_stream_broken": ["pypdf.generic.DictionaryObject.read_from_stream", "io.BytesIO", "pytest.raises"], "tests.test_generic.test_DictionaryObject_read_from_stream_unexpected_end": ["pypdf.generic.DictionaryObject.read_from_stream", "io.BytesIO", "pytest.raises"], "tests.test_generic.test_DictionaryObject_read_from_stream_stream_no_newline": ["pypdf.generic.DictionaryObject.read_from_stream", "io.BytesIO", "pytest.raises"], "tests.test_generic.test_DictionaryObject_read_from_stream_stream_no_stream_length": ["pypdf.generic.DictionaryObject.read_from_stream", "io.BytesIO", "pytest.raises"], "tests.test_generic.test_DictionaryObject_read_from_stream_stream_stream_valid": ["pypdf.generic.DictionaryObject.read_from_stream", "pypdf.errors.PdfReadError", "io.BytesIO", "pytest.raises"], "pypdf.errors.PdfReadError": [], "tests.test_generic.test_RectangleObject": ["pypdf.generic.RectangleObject"], "pypdf.generic.RectangleObject": [], "tests.test_generic.test_TextStringObject_exc": ["pypdf.generic.TextStringObject", "pytest.raises"], "tests.test_generic.test_TextStringObject_autodetect_utf16": ["pypdf.generic.TextStringObject"], "tests.test_generic.test_remove_child_not_in_tree": ["pypdf.generic.DictionaryObject.__init__", "pypdf.generic.TreeObject", "pytest.raises"], "pypdf.generic.TreeObject": [], "pypdf.generic.DictionaryObject.__init__": [], "tests.test_generic.test_remove_child_not_in_that_tree": ["ReaderDummy", "pypdf.generic.NullObject", "pypdf.generic.TreeObject", "pytest.raises"], "tests.test_generic.test_remove_child_not_found_in_tree": ["ReaderDummy", "pypdf.generic.NameObject", "pytest.raises", "pypdf.generic.DictionaryObject.__init__", "pypdf.generic.NullObject", "pypdf.generic.TreeObject"], "tests.test_generic.test_remove_child_not_found_in_tree.ChildDummy.indirect_reference": [], "tests.test_generic.test_remove_child_found_in_tree": ["pypdf.generic.NameObject", "pypdf.generic.TextStringObject", "<builtin>.len", "pypdf.generic.TreeObject", "pypdf.PdfWriter"], "pypdf.PdfWriter": [], "<builtin>.len": [], "tests.test_generic.test_remove_child_in_tree": ["pypdf.PdfReader", "pypdf.generic.TreeObject", "pypdf.PdfWriter"], "tests.test_generic.test_dict_read_from_stream": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_generic.test_parse_content_stream_peek_percentage": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_generic.test_read_inline_image_no_has_q": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_generic.test_read_inline_image_loc_neg_1": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "pytest.mark.slow": [], "tests.test_generic.test_text_string_write_to_stream": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_generic.test_name_object_read_from_stream_unicode_error": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_generic.test_bool_repr": ["<builtin>.open", "get_pdf_from_url", "<builtin>.list", "pypdf.PdfReader", "io.BytesIO"], "<builtin>.open": [], "tests.test_generic.test_issue_997": ["<builtin>.open", "pytest.raises", "get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "io.BytesIO"], "pypdf.PdfMerger": [], "tests.test_generic.test_annotation_builder_free_text": ["<builtin>.open", "pypdf.generic.AnnotationBuilder.free_text", "os.remove", "pypdf.PdfReader", "pypdf.PdfWriter"], "pypdf.generic.AnnotationBuilder.free_text": [], "tests.test_generic.test_annotation_builder_polygon": ["<builtin>.open", "pytest.raises", "pypdf.generic.AnnotationBuilder.polygon", "os.remove", "pypdf.PdfReader", "pypdf.PdfWriter"], "pypdf.generic.AnnotationBuilder.polygon": [], "tests.test_generic.test_annotation_builder_line": ["pypdf.generic.AnnotationBuilder.line", "<builtin>.open", "os.remove", "pypdf.PdfReader", "pypdf.PdfWriter"], "pypdf.generic.AnnotationBuilder.line": [], "tests.test_generic.test_annotation_builder_square": ["<builtin>.open", "pypdf.generic.AnnotationBuilder.rectangle", "os.remove", "pypdf.PdfReader", "pypdf.PdfWriter"], "pypdf.generic.AnnotationBuilder.rectangle": [], "tests.test_generic.test_annotation_builder_link": ["<builtin>.open", "pytest.raises", "pypdf.generic.AnnotationBuilder.link", "os.remove", "pypdf.PdfReader", "pypdf.PdfWriter"], "pypdf.generic.AnnotationBuilder.link": [], "tests.test_generic.test_annotation_builder_text": ["<builtin>.open", "pypdf.generic.AnnotationBuilder.text", "os.remove", "pypdf.PdfReader", "pypdf.PdfWriter"], "pypdf.generic.AnnotationBuilder.text": [], "tests.test_generic.test_CheckboxRadioButtonAttributes_opt": ["pypdf.constants.CheckboxRadioButtonAttributes.attributes_dict"], "pypdf.constants.CheckboxRadioButtonAttributes.attributes_dict": [], "tests.test_generic.test_name_object_invalid_decode": ["ReaderDummy", "pypdf.generic.NameObject.read_from_stream", "io.BytesIO", "pytest.raises"], "tests.test_generic.test_indirect_object_invalid_read": ["ReaderDummy", "pypdf.generic.IndirectObject.read_from_stream", "io.BytesIO", "pytest.raises"], "tests.test_generic.test_create_string_object_force": ["pypdf.generic.create_string_object"], "tests.test_generic.test_float_object_decimal_to_string": ["<builtin>.repr", "pypdf.generic.FloatObject"], "tests.test_generic.test_cloning": ["pypdf.generic.NameObject", "pypdf.generic.DictionaryObject", "pytest.raises", "pypdf.generic.StreamObject", "<builtin>.len", "pypdf.generic.PdfObject", "<builtin>.isinstance", "pypdf.generic.NumberObject", "pypdf.generic.ArrayObject", "pypdf.PdfWriter"], "pypdf.generic.PdfObject": [], "pypdf.generic.ArrayObject": [], "pypdf.generic.StreamObject": [], "tests.test_pagerange": ["pytest.mark.parametrize"], "tests.test_pagerange.test_equality": ["<builtin>.slice", "pypdf.pagerange.PageRange"], "<builtin>.slice": [], "pypdf.pagerange.PageRange": [], "tests.test_pagerange.test_str": ["pypdf.pagerange.PageRange", "<builtin>.str"], "tests.test_pagerange.test_repr": ["<builtin>.repr", "pypdf.pagerange.PageRange"], "tests.test_pagerange.test_equality_other_objectc": ["<builtin>.slice", "pypdf.pagerange.PageRange"], "tests.test_pagerange.test_idempotency": ["<builtin>.slice", "pypdf.pagerange.PageRange"], "tests.test_pagerange.test_str_init": ["pypdf.pagerange.PageRange"], "tests.test_pagerange.test_str_init_error": ["pypdf.pagerange.PageRange.valid", "pypdf.pagerange.PageRange", "pytest.raises"], "pypdf.pagerange.PageRange.valid": [], "tests.test_pagerange.test_parse_filename_page_ranges": ["pypdf.pagerange.parse_filename_page_ranges"], "pypdf.pagerange.parse_filename_page_ranges": [], "tests.test_pagerange.test_parse_filename_page_ranges_err": ["pypdf.pagerange.parse_filename_page_ranges", "pytest.raises"], "tests.test_pagerange.test_addition": ["pypdf.pagerange.PageRange"], "tests.test_pagerange.test_addition_gap": ["pytest.raises"], "tests.test_pagerange.test_addition_non_page_range": ["<builtin>.slice", "pypdf.pagerange.PageRange", "pytest.raises"], "tests.test_pagerange.test_addition_stride": ["<builtin>.slice", "pypdf.pagerange.PageRange", "pytest.raises"], "tests.test_page": ["tests.test_page.get_all_sample_files", "pytest.mark.xfail", "pytest.mark.filterwarnings", "pathlib.Path", "pytest.mark.parametrize", "pytest.mark.skip", "pytest.mark.samples", "pytest.mark.external", "pytest.mark.slow"], "tests.test_page.get_all_sample_files": ["json.loads", "<builtin>.open", "os.path.isfile"], "os.path.isfile": [], "json.loads": [], "pytest.mark.samples": [], "pytest.mark.filterwarnings": [], "tests.test_page.test_read": ["<builtin>.len", "pypdf.PdfReader"], "tests.test_page.test_page_operations": ["get_pdf_from_url", "pypdf.Transformation", "<builtin>.abs", "pypdf.PdfReader", "io.BytesIO"], "pypdf.Transformation": [], "<builtin>.abs": [], "tests.test_page.test_transformation_equivalence": ["pypdf.generic.NameObject", "copy.deepcopy", "pytest.raises", "pypdf.Transformation", "pypdf.PdfReader", "tests.test_page.compare_dict_objects"], "copy.deepcopy": [], "tests.test_page.compare_dict_objects": ["<builtin>.isinstance", "<builtin>.sorted", "tests.test_page.compare_dict_objects"], "tests.test_page.test_get_user_unit_property": ["pypdf.PdfReader"], "<builtin>.sorted": [], "tests.test_page.test_page_transformations": ["pypdf.PdfReader", "pytest.raises"], "tests.test_page.test_compress_content_streams": ["pypdf.PdfReader"], "tests.test_page.test_page_properties": ["pypdf.PdfReader", "pypdf.generic.RectangleObject"], "tests.test_page.test_page_rotation": ["pypdf.PdfReader", "<builtin>.abs", "<builtin>.float", "pytest.raises"], "<builtin>.float": [], "tests.test_page.test_page_scale": ["pypdf.Transformation", "pytest.raises"], "tests.test_page.test_add_transformation_on_page_without_contents": ["pypdf._page.PageObject", "pypdf.Transformation"], "pypdf._page.PageObject": [], "tests.test_page.test_multi_language": ["<builtin>.ord", "pypdf.PdfReader", "pypdf._page.set_custom_rtl"], "pypdf._page.set_custom_rtl": [], "<builtin>.ord": [], "tests.test_page.test_extract_text_single_quote_op": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_page.test_no_ressources_on_text_extract": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_page.test_iss_1142": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_page.test_extract_text_page_pdf": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_page.test_extract_text_page_pdf_impossible_decode_xform": ["normalize_warnings", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "normalize_warnings": [], "tests.test_page.test_extract_text_operator_t_star": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_page.test_extract_text_visitor_callbacks": ["tests.test_page.test_extract_text_visitor_callbacks.extract_cell_text", "<builtin>.len", "tests.test_page.test_extract_text_visitor_callbacks.extract_text_and_rectangles", "pypdf.PdfReader", "tests.test_page.test_extract_text_visitor_callbacks.extract_table"], "tests.test_page.test_extract_text_visitor_callbacks.PositionedText.__init__": [], "tests.test_page.test_extract_text_visitor_callbacks.PositionedText.get_base_font": [], "tests.test_page.test_extract_text_visitor_callbacks.Rectangle.__init__": [], "tests.test_page.test_extract_text_visitor_callbacks.Rectangle.contains": [], "tests.test_page.test_extract_text_visitor_callbacks.extract_text_and_rectangles": ["logging.getLogger"], "logging.getLogger": [], "tests.test_page.test_extract_text_visitor_callbacks.extract_text_and_rectangles.print_op_b": ["tests.test_page.test_extract_text_visitor_callbacks.Rectangle.__init__", "tests.test_page.test_extract_text_visitor_callbacks.filter_first_table", "tests.test_page.test_extract_text_visitor_callbacks.ignore_large_rectangles"], "tests.test_page.test_extract_text_visitor_callbacks.filter_first_table": [], "tests.test_page.test_extract_text_visitor_callbacks.ignore_large_rectangles": [], "tests.test_page.test_extract_text_visitor_callbacks.extract_text_and_rectangles.print_visi": ["tests.test_page.test_extract_text_visitor_callbacks.PositionedText.__init__"], "tests.test_page.test_extract_text_visitor_callbacks.extract_table": ["logging.getLogger", "<builtin>.round"], "<builtin>.round": [], "tests.test_page.test_extract_text_visitor_callbacks.extract_table.<lambda1>": [], "tests.test_page.test_extract_text_visitor_callbacks.extract_cell_text": [], "tests.test_page.test_extract_text_visitor_callbacks.visitor_td": [], "tests.test_page.test_get_fonts": ["pypdf.PdfReader", "<builtin>.set"], "<builtin>.set": [], "tests.test_page.test_annotation_getter": ["pypdf.PdfReader", "pypdf.generic.DictionaryObject", "<builtin>.isinstance", "<builtin>.dict", "pypdf.generic.ArrayObject"], "<builtin>.dict": [], "tests.test_page.test_annotation_setter": ["pypdf.PdfReader", "pypdf.generic.NameObject", "pypdf.generic.FloatObject", "pypdf.generic.DictionaryObject", "<builtin>.open", "pypdf.generic.TextStringObject", "os.remove", "pypdf.generic.ArrayObject", "pypdf.PdfWriter"], "tests.test_page.test_text_extraction_issue_1091": ["pytest.warns", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_page.test_empyt_password_1088": ["<builtin>.len", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_page.test_arab_text_extraction": ["pypdf.PdfReader"], "pytest.mark.skip": [], "tests.test_page.test_read_link_annotation": ["pypdf.PdfReader", "pypdf.generic.DictionaryObject", "<builtin>.len", "<builtin>.set", "<builtin>.dict", "pypdf.generic.ArrayObject"], "tests.test_page.test_no_resources": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_encryption": ["pytest.mark.skipif", "pathlib.Path", "pytest.mark.parametrize"], "tests.test_encryption.test_encryption": ["pypdf.PdfReader", "pytest.raises", "<builtin>.len", "<builtin>.str", "<builtin>.dict"], "pytest.mark.skipif": [], "tests.test_encryption.test_both_password": ["<builtin>.len", "pypdf.PdfReader"], "tests.test_encryption.test_get_page_of_encrypted_file_new_algorithm": ["pypdf.PdfReader"], "tests.test_encryption.test_encryption_merge": ["pypdf.PdfMerger", "pypdf.PdfReader"], "tests.test_encryption.test_encrypt_decrypt_class": ["<builtin>.range", "<builtin>.bytes"], "tests.test_encryption.test_decrypt_not_decrypted_pdf": ["pypdf.PdfReader", "pytest.raises"], "tests.test_encryption.test_generate_values": ["pypdf._encryption.AlgV5.generate_values"], "pypdf._encryption.AlgV5.generate_values": [], "tests.test_security": [], "tests.test_security.test_alg32_metadata_encrypt": ["pypdf.generic.ByteStringObject", "pypdf._security._alg32"], "pypdf._security._alg32": [], "tests.test_security.test_alg32_no_metadata_encrypt": ["pypdf.generic.ByteStringObject", "pypdf._security._alg32"], "tests.test_cmap": ["pytest.mark.external", "pytest.mark.slow"], "tests.test_cmap.test_compute_space_width": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_cmap.test_parse_to_unicode_process_rg": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_cmap.test_parse_encoding_advanced_encoding_not_implemented": ["pytest.warns", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_cmap.test_get_font_width_from_default": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_cmap.test_multiline_bfrange": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_cmap.test_bfchar_on_2_chars": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_cmap.test_ascii_charset": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_cmap.test_iss1370": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_cmap.test_iss1379": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_papersizes": ["<builtin>.list", "<builtin>.zip", "pytest.mark.parametrize"], "tests.test_papersizes.test_din_a0": ["<builtin>.abs", "<builtin>.float"], "tests.test_papersizes.test_din_a_ratio": ["<builtin>.abs"], "tests.test_papersizes.test_din_a_doubling": ["<builtin>.abs"], "tests.test_merger": ["sys.path.append", "pathlib.Path", "pytest.mark.parametrize", "<builtin>.str", "pytest.mark.external", "pytest.mark.slow"], "sys.path.append": [], "tests.test_merger.merger_operate": ["pypdf.generic.Fit.fit_box_horizontally", "<builtin>.slice", "pypdf.generic.Fit.fit_vertically", "<builtin>.open", "pypdf.generic.Fit.fit_box_vertically", "pytest.raises", "pypdf.pagerange.PageRange", "<builtin>.range", "pypdf.generic.Fit.fit_rectangle", "<builtin>.list", "<builtin>.len", "pypdf.generic.Fit.fit_horizontally", "pypdf.generic.Fit.fit_box", "pypdf.generic.Fit.xyz", "pypdf.PdfReader", "io.BytesIO"], "pypdf.generic.Fit.fit_box_vertically": [], "pypdf.generic.Fit.xyz": [], "pypdf.generic.Fit.fit_horizontally": [], "pypdf.generic.Fit.fit_box": [], "pypdf.generic.Fit.fit_box_horizontally": [], "tests.test_merger.check_outline": ["<builtin>.isinstance", "pypdf.PdfReader"], "tests.test_merger.test_merger_operations_by_traditional_usage": ["tests.test_merger.merger_operate", "pypdf.PdfMerger", "tests.test_merger.check_outline"], "tests.test_merger.test_merger_operations_by_traditional_usage_with_writer": ["tests.test_merger.merger_operate", "tests.test_merger.check_outline", "pypdf.PdfWriter"], "tests.test_merger.test_merger_operations_by_semi_traditional_usage": ["tests.test_merger.merger_operate", "pypdf.PdfMerger", "tests.test_merger.check_outline", "os.path.isfile"], "tests.test_merger.test_merger_operations_by_semi_traditional_usage_with_writer": ["os.path.isfile", "tests.test_merger.merger_operate", "tests.test_merger.check_outline", "pypdf.PdfWriter"], "tests.test_merger.test_merger_operation_by_new_usage": ["tests.test_merger.merger_operate", "pypdf.PdfMerger", "tests.test_merger.check_outline", "os.path.isfile"], "tests.test_merger.test_merger_operation_by_new_usage_with_writer": ["os.path.isfile", "tests.test_merger.merger_operate", "tests.test_merger.check_outline", "pypdf.PdfWriter"], "tests.test_merger.test_merge_page_exception": ["pypdf.PdfMerger", "pytest.raises"], "tests.test_merger.test_merge_page_exception_with_writer": ["pytest.raises", "pypdf.PdfWriter"], "tests.test_merger.test_merge_page_tuple": ["pypdf.PdfMerger"], "tests.test_merger.test_merge_page_tuple_with_writer": ["pypdf.PdfWriter"], "tests.test_merger.test_merge_write_closed_fh": ["pypdf.PdfMerger", "pytest.raises"], "tests.test_merger.test_merge_write_closed_fh_with_writer": ["pypdf.PdfWriter"], "tests.test_merger.test_trim_outline_list": ["get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_merger.test_trim_outline_list_with_writer": ["get_pdf_from_url", "os.remove", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_merger.test_zoom": ["get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_merger.test_zoom_with_writer": ["get_pdf_from_url", "os.remove", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_merger.test_zoom_xyz_no_left": ["get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_merger.test_zoom_xyz_no_left_with_writer": ["get_pdf_from_url", "os.remove", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_merger.test_outline_item": ["get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_merger.test_outline_item_with_writer": ["get_pdf_from_url", "os.remove", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_merger.test_trim_outline": ["get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_merger.test_trim_outline_with_writer": ["get_pdf_from_url", "os.remove", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_merger.test1": ["get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_merger.test1_with_writer": ["get_pdf_from_url", "os.remove", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_merger.test_sweep_recursion1": ["get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_merger.test_sweep_recursion1_with_writer": ["get_pdf_from_url", "os.remove", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_merger.test_sweep_recursion2": ["get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_merger.test_sweep_recursion2_with_writer": ["get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_merger.test_sweep_indirect_list_newobj_is_none": ["get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_merger.test_sweep_indirect_list_newobj_is_none_with_writer": ["get_pdf_from_url", "os.remove", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_merger.test_iss1145": ["pypdf.PdfMerger", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_merger.test_iss1145_with_writer": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_merger.test_deprecation_bookmark_decorator_deprecationexcp": ["pypdf.PdfMerger", "pypdf.PdfReader", "pytest.raises"], "tests.test_merger.test_deprecation_bookmark_decorator_deprecationexcp_with_writer": ["pytest.raises", "pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_merger.test_deprecation_bookmark_decorator_output": ["pypdf.PdfMerger", "pypdf.PdfReader", "pytest.raises"], "tests.test_merger.test_deprecation_bookmark_decorator_output_with_writer": ["pytest.raises", "pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_merger.test_iss1344": ["pypdf.PdfMerger", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_merger.test_iss1344_with_writer": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_merger.test_articles_with_writer": ["get_pdf_from_url", "<builtin>.len", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_xmp": ["pytest.mark.external", "pathlib.Path", "pytest.mark.parametrize"], "tests.test_xmp.test_read_xmp": ["<builtin>.print", "tests.test_xmp.get_all_tiff", "pypdf.PdfReader"], "<builtin>.print": [], "tests.test_xmp.get_all_tiff": [], "tests.test_xmp.test_regression_issue774": ["pytest.raises"], "tests.test_xmp.test_regression_issue914": ["datetime.datetime", "pypdf.PdfReader"], "datetime.datetime": [], "tests.test_xmp.test_identity": [], "tests.test_xmp.test_xmpmm": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_xmp.test_dc_description": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_xmp.test_dc_creator": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_xmp.test_custom_properties": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_xmp.test_dc_subject": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_xmp.test_issue585": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO", "pytest.raises"], "tests": [], "tests.get_pdf_from_url": ["<builtin>.open", "os.path.exists", "os.path.dirname", "os.mkdir", "os.path.join"], "os.path.dirname": [], "os.path.join": [], "os.path.exists": [], "os.mkdir": [], "tests._strip_position": [], "tests.normalize_warnings": ["tests._strip_position"], "tests.ReaderDummy.__init__": [], "tests.ReaderDummy.get_object": ["pypdf.generic.DictionaryObject"], "tests.ReaderDummy.get_object.DummyObj.get_object": [], "tests.ReaderDummy.get_reference": ["pypdf.generic.IndirectObject"], "pypdf.generic.IndirectObject": [], "tests.test_reader": ["pytest.mark.filterwarnings", "pytest.mark.skipif", "pathlib.Path", "pytest.mark.parametrize", "pytest.mark.skip", "pytest.mark.samples", "pytest.mark.external", "pytest.mark.slow"], "tests.test_reader.test_get_num_pages": ["<builtin>.len", "pypdf.PdfReader"], "tests.test_reader.test_read_metadata": ["pypdf.PdfReader", "<builtin>.dict", "<builtin>.open"], "tests.test_reader.test_broken_meta_data": ["pypdf.PdfReader", "<builtin>.open", "pytest.raises"], "tests.test_reader.test_get_annotations": ["pypdf.PdfReader"], "tests.test_reader.test_get_attachments": ["<builtin>.len", "pypdf.PdfReader"], "tests.test_reader.test_get_outline": ["<builtin>.len", "pypdf.PdfReader"], "tests.test_reader.test_get_images": ["PIL.Image.open", "<builtin>.open", "pytest.raises", "<builtin>.zip", "<builtin>.len", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "PIL.Image.open": [], "tests.test_reader.test_get_images_raw": ["pytest.raises", "normalize_warnings", "pytest.warns", "pypdf.PdfReader", "io.BytesIO"], "tests.test_reader.test_issue297": ["normalize_warnings", "pypdf.PdfReader", "pytest.raises"], "tests.test_reader.test_get_page_of_encrypted_file": ["pypdf.PdfReader", "pytest.raises"], "tests.test_reader.test_get_form": ["<builtin>.open", "pypdf.PdfReader", "os.remove"], "tests.test_reader.test_get_page_number": ["pypdf.PdfReader"], "tests.test_reader.test_get_page_layout": ["pypdf.PdfReader"], "tests.test_reader.test_get_page_mode": ["pypdf.PdfReader"], "tests.test_reader.test_read_empty": ["pypdf.PdfReader", "io.BytesIO", "pytest.raises"], "tests.test_reader.test_read_malformed_header": ["pypdf.PdfReader", "io.BytesIO", "pytest.raises"], "tests.test_reader.test_read_malformed_body": ["pypdf.PdfReader", "io.BytesIO", "pytest.raises"], "tests.test_reader.test_read_prev_0_trailer": ["pytest.warns", "pypdf.PdfReader", "io.BytesIO", "pytest.raises"], "tests.test_reader.test_read_missing_startxref": ["pypdf.PdfReader", "io.BytesIO", "pytest.raises"], "tests.test_reader.test_read_unknown_zero_pages": ["pytest.raises", "normalize_warnings", "pytest.warns", "<builtin>.len", "pypdf.PdfReader", "io.BytesIO"], "tests.test_reader.test_read_encrypted_without_decryption": ["<builtin>.len", "pypdf.PdfReader", "pytest.raises"], "tests.test_reader.test_get_destination_page_number": ["<builtin>.isinstance", "pypdf.PdfReader"], "tests.test_reader.test_do_not_get_stuck_on_large_files_without_start_xref": ["pypdf.PdfReader", "time.time", "io.BytesIO", "pytest.raises"], "time.time": [], "tests.test_reader.test_decrypt_when_no_id": ["pypdf.PdfReader", "<builtin>.open"], "tests.test_reader.test_reader_properties": ["<builtin>.len", "pypdf.PdfReader"], "tests.test_reader.test_issue604": ["<builtin>.open", "pytest.raises", "tests.test_reader.test_issue604.get_dest_pages", "pytest.warns", "normalize_warnings", "<builtin>.Exception", "pypdf.PdfReader"], "<builtin>.Exception": [], "tests.test_reader.test_issue604.get_dest_pages": ["<builtin>.isinstance", "tests.test_reader.test_issue604.get_dest_pages"], "tests.test_reader.test_decode_permissions": ["pypdf.PdfReader"], "tests.test_reader.test_pages_attribute": ["<builtin>.len", "pypdf.PdfReader", "pytest.raises"], "tests.test_reader.test_convert_to_int": ["pypdf._reader.convert_to_int"], "pypdf._reader.convert_to_int": [], "tests.test_reader.test_convert_to_int_error": ["pypdf._reader.convert_to_int", "pytest.raises"], "tests.test_reader.test_convertToInt_deprecated": ["pypdf._reader.convertToInt", "pytest.raises"], "pypdf._reader.convertToInt": [], "tests.test_reader.test_iss925": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_get_object": ["pypdf.PdfReader"], "tests.test_reader.test_extract_text_hello_world": ["pypdf.PdfReader"], "tests.test_reader.test_read_path": ["<builtin>.len", "pathlib.Path", "pypdf.PdfReader"], "tests.test_reader.test_read_not_binary_mode": ["pypdf.PdfReader", "normalize_warnings", "<builtin>.open", "pytest.raises"], "tests.test_reader.test_read_form_416": ["<builtin>.len", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_extract_text_xref_issue_2": ["normalize_warnings", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_extract_text_xref_issue_3": ["normalize_warnings", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_extract_text_pdf15": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_extract_text_xref_table_21_bytes_clrf": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_get_fields": ["<builtin>.dict", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_get_full_qualified_fields": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_get_fields_read_else_block": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_get_fields_read_else_block2": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_get_fields_read_else_block3": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_metadata_is_none": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_get_fields_read_write_report": ["<builtin>.open", "get_pdf_from_url", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_reader.test_xfa": ["pypdf.PdfReader"], "tests.test_reader.test_xfa_non_empty": ["<builtin>.list", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_header": ["pypdf.PdfReader"], "tests.test_reader.test_outline_color": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_outline_font_format": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.get_outline_property": ["<builtin>.ValueError", "<builtin>.type", "<builtin>.getattr", "tests.test_reader.get_outline_property", "<builtin>.isinstance"], "<builtin>.getattr": [], "<builtin>.type": [], "<builtin>.ValueError": [], "tests.test_reader.test_outline_title_issue_1121": ["pypdf.PdfReader", "tests.test_reader.get_outline_property"], "tests.test_reader.test_outline_count": ["pypdf.PdfReader", "tests.test_reader.get_outline_property"], "tests.test_reader.test_outline_missing_title": ["pypdf.PdfReader", "pytest.raises"], "tests.test_reader.test_named_destination": ["<builtin>.len", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_outline_with_missing_named_destination": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_outline_with_empty_action": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_outline_with_invalid_destinations": ["<builtin>.len", "pypdf.PdfReader"], "tests.test_reader.test_PdfReaderMultipleDefinitions": ["normalize_warnings", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_wrong_password_error": ["pypdf.PdfReader", "pytest.raises"], "tests.test_reader.test_get_page_number_by_indirect": ["pypdf.PdfReader"], "tests.test_reader.test_corrupted_xref_table": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_reader": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_zeroing_xref": ["<builtin>.len", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_reader.test_thread": ["get_pdf_from_url", "<builtin>.len", "<builtin>.isinstance", "pypdf.PdfReader", "io.BytesIO"], "tests.test_reader.test_build_outline_item": ["pypdf.generic.DictionaryObject", "pytest.raises", "get_pdf_from_url", "pypdf.PdfReader", "io.BytesIO"], "tests.test_reader.test_page_labels": ["pypdf.PdfReader"], "tests.test_workflows": ["sys.path.append", "pathlib.Path", "pytest.mark.parametrize", "pytest.mark.skip", "<builtin>.str", "pytest.mark.samples", "pytest.mark.external", "pytest.mark.slow"], "tests.test_workflows.test_basic_features": ["<builtin>.open", "<builtin>.len", "pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_workflows.test_dropdown_items": ["pypdf.PdfReader"], "tests.test_workflows.test_PdfReaderFileLoad": ["pypdf.PdfReader", "<builtin>.zip", "<builtin>.open"], "tests.test_workflows.test_PdfReaderJpegImage": ["pypdf.PdfReader", "<builtin>.open", "binascii.hexlify"], "binascii.hexlify": [], "tests.test_workflows.test_decrypt": ["pypdf.PdfReader", "<builtin>.dict", "<builtin>.len", "<builtin>.open"], "tests.test_workflows.test_text_extraction_encrypted": ["pypdf.PdfReader"], "tests.test_workflows.test_rotate": ["pypdf.PdfReader", "<builtin>.open"], "tests.test_workflows.test_rotate_45": ["pypdf.PdfReader", "<builtin>.open", "pytest.raises"], "tests.test_workflows.test_extract_textbench": ["<builtin>.print", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_workflows.test_orientations": ["pytest.warns", "pypdf.PdfReader", "re.findall", "pytest.raises"], "re.findall": [], "tests.test_workflows.test_overlay": ["<builtin>.open", "get_pdf_from_url", "os.remove", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_workflows.test_merge_with_warning": ["pypdf.PdfMerger", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_workflows.test_merge": ["pypdf.PdfMerger", "pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_workflows.test_get_metadata": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_workflows.test_extract_text": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO", "pytest.raises"], "tests.test_workflows.test_compress_raised": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_workflows.test_compress": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_workflows.test_get_fields_warns": ["<builtin>.open", "get_pdf_from_url", "normalize_warnings", "pypdf.PdfReader", "io.BytesIO"], "tests.test_workflows.test_get_fields_no_warning": ["<builtin>.open", "get_pdf_from_url", "<builtin>.len", "pypdf.PdfReader", "io.BytesIO"], "tests.test_workflows.test_scale_rectangle_indirect_object": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_workflows.test_merge_output": ["<builtin>.open", "normalize_warnings", "pypdf.PdfMerger", "<builtin>.len", "io.BytesIO"], "tests.test_workflows.test_image_extraction": ["<builtin>.open", "os.path.exists", "get_pdf_from_url", "pathlib.Path", "os.mkdir", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_workflows.test_image_extraction_strict": ["<builtin>.open", "os.path.exists", "get_pdf_from_url", "pathlib.Path", "os.mkdir", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_workflows.test_image_extraction2": ["<builtin>.open", "os.path.exists", "get_pdf_from_url", "pathlib.Path", "os.mkdir", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_workflows.test_get_outline": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_workflows.test_get_xfa": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_workflows.test_get_fonts": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_workflows.test_get_xmp": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_workflows.test_tounicode_is_identity": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO"], "tests.test_workflows.test_extra_test_iss1541": ["pytest.raises", "pypdf.generic.read_object", "pypdf.generic.ContentStream", "get_pdf_from_url", "<builtin>.bytes", "pypdf.PdfReader", "io.BytesIO"], "pypdf.generic.ContentStream": [], "tests.test_page_labels": ["pytest.mark.parametrize"], "tests.test_page_labels.test_number2uppercase_roman_numeral": ["pypdf._page_labels.number2uppercase_roman_numeral"], "pypdf._page_labels.number2uppercase_roman_numeral": [], "tests.test_page_labels.test_number2lowercase_roman_numeral": ["pypdf._page_labels.number2lowercase_roman_numeral"], "pypdf._page_labels.number2lowercase_roman_numeral": [], "tests.test_page_labels.test_number2lowercase_letter": ["pypdf._page_labels.number2lowercase_letter"], "pypdf._page_labels.number2lowercase_letter": [], "tests.bench": ["pathlib.Path"], "tests.bench.page_ops": ["pypdf.PdfReader", "pypdf.Transformation"], "tests.bench.test_page_operations": [], "tests.bench.merge": ["<builtin>.slice", "<builtin>.open", "pypdf.pagerange.PageRange", "pypdf.PdfMerger", "<builtin>.isinstance", "pypdf.PdfReader"], "tests.bench.test_merge": [], "tests.bench.text_extraction": ["pypdf.PdfReader"], "tests.bench.test_text_extraction": [], "tests.bench.read_string_from_stream_performance": ["io.BytesIO", "pypdf.generic.read_string_from_stream"], "tests.bench.test_read_string_from_stream_performance": [], "tests.test_writer": ["pathlib.Path", "pytest.mark.parametrize", "pytest.mark.skip", "pytest.mark.samples", "pytest.mark.external", "pytest.mark.slow"], "tests.test_writer.test_writer_exception_non_binary": ["<builtin>.open", "pytest.raises", "pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_writer.test_writer_clone": ["<builtin>.len", "pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_writer.test_writer_clone_bookmarks": ["<builtin>.len", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_writer.test_writer_clone_bookmarks.cat1": [], "tests.test_writer.writer_operate": ["pypdf.generic.Fit.fit_box_horizontally", "pypdf.generic.Fit.fit_vertically", "pypdf.generic.NameObject", "pypdf.generic.Fit.fit_box_vertically", "pytest.raises", "pypdf.generic.Fit.fit_rectangle", "pypdf.generic.RectangleObject", "pypdf.generic.Fit.fit_horizontally", "pypdf.generic.Fit.fit_box", "pypdf.generic.Fit.xyz", "pypdf.PdfReader"], "tests.test_writer.test_writer_operations_by_traditional_usage": ["tests.test_writer.writer_operate", "<builtin>.open", "os.remove", "pypdf.PdfWriter"], "tests.test_writer.test_writer_operations_by_semi_traditional_usage": ["tests.test_writer.writer_operate", "<builtin>.open", "os.remove", "pypdf.PdfWriter"], "tests.test_writer.test_writer_operations_by_semi_new_traditional_usage": ["tests.test_writer.writer_operate", "os.remove", "pypdf.PdfWriter"], "tests.test_writer.test_writer_operation_by_new_usage": ["tests.test_writer.writer_operate", "os.remove", "pypdf.PdfWriter"], "tests.test_writer.test_remove_images": ["<builtin>.open", "pypdf.PdfReader", "os.remove", "pypdf.PdfWriter"], "tests.test_writer.test_remove_text": ["<builtin>.open", "pypdf.PdfReader", "os.remove", "pypdf.PdfWriter"], "tests.test_writer.test_remove_text_all_operators": ["<builtin>.open", "<builtin>.print", "<builtin>.len", "os.remove", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_writer.test_write_metadata": ["<builtin>.open", "pypdf.PdfReader", "os.remove", "pypdf.PdfWriter"], "tests.test_writer.test_fill_form": ["<builtin>.open", "pypdf.PdfReader", "os.remove", "pypdf.PdfWriter"], "tests.test_writer.test_encrypt": ["<builtin>.open", "pypdf.PdfReader", "os.remove", "pypdf.PdfWriter"], "tests.test_writer.test_add_outline_item": ["<builtin>.open", "pypdf.generic.Fit.fit", "os.remove", "pypdf.PdfReader", "pypdf.PdfWriter"], "pypdf.generic.Fit.fit": [], "tests.test_writer.test_add_named_destination": ["pypdf.generic.NameObject", "<builtin>.open", "pytest.raises", "pypdf.generic.TextStringObject", "os.remove", "pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_writer.test_add_uri": ["<builtin>.open", "pypdf.generic.RectangleObject", "os.remove", "pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_writer.test_add_link": ["re.escape", "<builtin>.open", "pytest.raises", "pypdf.generic.RectangleObject", "os.remove", "pypdf.PdfReader", "pypdf.PdfWriter"], "re.escape": [], "tests.test_writer.test_io_streams": ["<builtin>.open", "<builtin>.len", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_writer.test_regression_issue670": ["<builtin>.open", "<builtin>.range", "os.remove", "pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_writer.test_issue301": ["pypdf.PdfReader", "<builtin>.open", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_writer.test_append_pages_from_reader_append": ["pypdf.PdfReader", "<builtin>.open", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_writer.test_sweep_indirect_references_nullobject_exception": ["get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_writer.test_write_outline_item_on_page_fitv": ["get_pdf_from_url", "pypdf.PdfMerger", "os.remove", "pypdf.PdfReader", "io.BytesIO"], "tests.test_writer.test_pdf_header": ["pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_writer.test_write_dict_stream_object": ["pypdf.PageObject.create_blank_page", "<builtin>.open", "pypdf.generic.NameObject", "pypdf.generic.StreamObject", "<builtin>.str", "os.remove", "<builtin>.isinstance", "pypdf.PdfWriter"], "pypdf.PageObject.create_blank_page": [], "tests.test_writer.test_add_single_annotation": ["<builtin>.open", "pypdf.PdfReader", "os.remove", "pypdf.PdfWriter"], "tests.test_writer.test_deprecation_bookmark_decorator": ["pytest.raises", "pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_writer.test_colors_in_outline_item": ["<builtin>.open", "<builtin>.str", "os.remove", "pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_writer.test_write_empty_stream": ["pytest.raises", "pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_writer.test_startup_dest": ["pypdf.generic.NameObject", "pytest.raises", "<builtin>.str", "<builtin>.isinstance", "pypdf.generic.NumberObject", "pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_writer.test_iss471": ["get_pdf_from_url", "<builtin>.isinstance", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_writer.test_reset_translation": ["get_pdf_from_url", "<builtin>.len", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_writer.test_threads_empty": ["<builtin>.isinstance", "<builtin>.len", "pypdf.PdfWriter"], "tests.test_writer.test_append_without_annots_and_articles": ["get_pdf_from_url", "<builtin>.len", "pypdf.PdfReader", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_writer.test_append_multiple": ["pypdf.PdfReader", "get_pdf_from_url", "io.BytesIO", "pypdf.PdfWriter"], "tests.test_constants": [], "tests.test_constants.test_slash_prefix": ["<builtin>.dir", "re.compile", "<builtin>.getattr", "<builtin>.isinstance"], "<builtin>.dir": [], "tests.test_javascript": ["pytest.fixture", "pathlib.Path"], "pytest.fixture": [], "tests.test_javascript.pdf_file_writer": ["pypdf.PdfReader", "pypdf.PdfWriter"], "tests.test_javascript.test_add_js": [], "tests.test_javascript.test_added_js": ["tests.test_javascript.test_added_js.get_javascript_name"], "tests.test_javascript.test_added_js.get_javascript_name": []}
{"flask_api.settings": ["flask_api.settings.APISettings"], "flask_api.settings.APISettings.DEFAULT_PARSERS": ["dict.get", "flask_api.settings.perform_imports", "Config.get"], "flask_api.settings.perform_imports": ["builtins.isinstance", "flask_api.settings.perform_imports", "flask_api.settings.import_from_string"], "flask_api.settings.import_from_string": ["str.split", "str.join", "importlib.import_module", "builtins.getattr", "builtins.ImportError"], "flask_api.settings.APISettings.DEFAULT_RENDERERS": ["dict.get", "flask_api.settings.perform_imports", "Config.get"], "flask_api.app": ["flask.blueprints.Blueprint"], "flask_api.tests.test_app": ["flask_api.app.FlaskAPI"], "flask_api.app.FlaskAPI.__init__": ["flask.app.Flask.__init__", "flask_api.settings.APISettings", "flask.app.Flask.register_blueprint"], "flask_api.tests.test_negotiation": ["flask_api.app.FlaskAPI"], "flask_api.tests.test_parsers": ["flask_api.app.FlaskAPI"], "flask_api.tests.test_request": ["flask_api.app.FlaskAPI"], "flask_api.tests.__init__": ["posixpath.dirname", "posix.listdir", "str.endswith", "str.startswith", "str.rsplit"], "flask_api.tests.test_app.AppTests.test_abort_view": ["flask.app.Flask.test_client", "werkzeug.test.Client.get", "unittest.case.TestCase.assertEqual"], "flask_api.app.FlaskAPI.create_url_adapter": ["dict.copy", "werkzeug.routing.map.Map.bind_to_environ"], "flask_api.request.APIRequest.method": ["builtins.hasattr"], "flask_api.app.FlaskAPI.preprocess_request": ["flask.app.Flask.preprocess_request"], "flask_api.tests.test_app.abort_view": ["flask.helpers.abort"], "flask_api.app.FlaskAPI.handle_user_exception": ["sys.exc_info", "builtins.isinstance", "flask.app.Flask.trap_http_exception", "flask.app.Flask.handle_http_exception", "flask_api.app.FlaskAPI.handle_api_exception", "defaultdict.get", "flask_api.compat.is_flask_legacy", "builtins.dict", "dict.items", "itertools.chain", "flask_api.tests.test_app.handle_invalid_usage"], "flask_api.app.FlaskAPI.make_response": ["builtins.isinstance", "werkzeug.wrappers.response.Response.force_type", "flask_api.response.APIResponse", "builtins.len", "builtins.ValueError"], "flask_api.response.APIResponse.__init__": ["werkzeug.wrappers.response.Response.__init__", "builtins.isinstance", "flask_api.response.APIResponse.get_renderer_options", "flask_api.renderers.JSONRenderer.render", "werkzeug.wrappers.response.Response.set_data", "builtins.str", "flask_api.renderers.BrowsableAPIRenderer.render", "flask_api.tests.test_renderers.OverrideParserSettings.setUp.<locals>.CustomRenderer2.render", "flask_api.tests.test_renderers.OverrideParserSettings.setUp.<locals>.CustomRenderer1.render"], "flask_api.tests.test_app.AppTests.test_accepted_media_type_property": ["flask.app.Flask.test_client", "werkzeug.test.Client.get", "werkzeug.wrappers.response.Response.get_data", "bytes.decode", "json.loads", "unittest.case.TestCase.assertEqual"], "flask_api.decorators.decorated_function": ["builtins.len", "builtins.isinstance", "flask_api.tests.test_app.accepted_media_type", "flask_api.tests.test_parsers.OverrideParserSettings.setUp.<locals>.custom_parser_2", "flask_api.tests.test_parsers.OverrideParserSettings.setUp.<locals>.custom_parser_2_as_args", "flask_api.tests.test_renderers.OverrideParserSettings.setUp.<locals>.custom_renderer_2", "flask_api.tests.test_renderers.OverrideParserSettings.setUp.<locals>.custom_renderer_2_as_args"], "flask_api.request.APIRequest.accepted_media_type": ["builtins.hasattr", "flask_api.request.APIRequest._perform_content_negotiation"], "flask_api.request.APIRequest._perform_content_negotiation": ["flask_api.negotiation.DefaultNegotiation", "flask_api.tests.test_app.JSONVersion2", "flask_api.tests.test_app.JSONVersion1", "flask_api.negotiation.DefaultNegotiation.select_renderer", "flask_api.renderers.JSONRenderer", "flask_api.renderers.BrowsableAPIRenderer", "flask_api.tests.test_renderers.OverrideParserSettings.setUp.<locals>.CustomRenderer2", "flask_api.tests.test_renderers.OverrideParserSettings.setUp.<locals>.CustomRenderer1"], "flask_api.negotiation.DefaultNegotiation.select_renderer": ["werkzeug.datastructures.Headers.get", "flask_api.mediatypes.parse_accept_header", "flask_api.mediatypes.MediaType", "flask_api.mediatypes.MediaType.satisfies", "flask_api.exceptions.NotAcceptable"], "flask_api.mediatypes.parse_accept_header": ["builtins.set", "str.split", "str.strip", "flask_api.mediatypes.MediaType", "set.add"], "flask_api.mediatypes.MediaType.__init__": ["flask_api.mediatypes.MediaType._parse"], "flask_api.mediatypes.MediaType._parse": ["str.partition", "str.strip", "str.split", "str.startswith", "str.endswith"], "flask_api.mediatypes.MediaType.precedence": ["dict.keys", "builtins.list"], "flask_api.mediatypes.MediaType.__hash__": ["builtins.str", "builtins.hash"], "flask_api.mediatypes.MediaType.__str__": ["dict.items", "builtins.sorted", "str.join"], "flask_api.mediatypes.MediaType.satisfies": ["dict.keys", "dict.get"], "flask_api.tests.test_app.accepted_media_type": ["builtins.str"], "flask_api.request.APIRequest.accepted_renderer": ["builtins.hasattr", "flask_api.request.APIRequest._perform_content_negotiation"], "flask_api.renderers.JSONRenderer.render": ["dict.get", "json.dumps", "builtins.int", "builtins.min", "builtins.max"], "flask_api.tests.test_app.AppTests.test_api_exception": ["flask.app.Flask.test_client", "werkzeug.test.Client.get", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode"], "flask_api.tests.test_app.api_exception": ["flask_api.exceptions.PermissionDenied"], "flask_api.app.FlaskAPI.handle_api_exception": ["flask_api.response.APIResponse"], "flask_api.tests.test_app.AppTests.test_custom_exception": ["flask.app.Flask.test_client", "werkzeug.test.Client.get", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_app.custom_exception": ["flask_api.tests.test_app.InvalidUsage"], "flask_api.tests.test_app.InvalidUsage.__init__": ["Exception.__init__"], "flask_api.compat.is_flask_legacy": ["str.split", "builtins.int"], "flask_api.tests.test_app.handle_invalid_usage": ["flask_api.tests.test_app.InvalidUsage.to_dict", "flask.json.jsonify"], "flask_api.tests.test_app.InvalidUsage.to_dict": ["builtins.dict"], "flask_api.tests.test_app.AppTests.test_custom_exception_default_code": ["flask.app.Flask.test_client", "werkzeug.test.Client.get", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_app.custom_exception_no_status_code": ["flask_api.tests.test_app.InvalidUsage"], "flask_api.tests.test_app.AppTests.test_make_response": ["flask.app.Flask.test_client", "werkzeug.test.Client.get", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode"], "flask_api.tests.test_app.make_response_view": ["flask.helpers.make_response"], "flask_api.tests.test_app.AppTests.test_none_200_response": ["flask.app.Flask.test_client", "unittest.case.TestCase.assertRaises", "werkzeug.test.Client.get"], "flask_api.tests.test_app.AppTests.test_none_204_response": ["flask.app.Flask.test_client", "werkzeug.test.Client.get", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode"], "flask_api.tests.test_app.AppTests.test_options_view": ["flask.app.Flask.test_client", "werkzeug.test.Client.options", "werkzeug.wrappers.response.Response.get_data"], "flask_api.tests.test_app.AppTests.test_set_headers": ["flask.app.Flask.test_client", "werkzeug.test.Client.get", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode"], "flask_api.tests.test_app.AppTests.test_set_status_and_headers": ["flask.app.Flask.test_client", "werkzeug.test.Client.get", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode"], "flask_api.tests.test_exceptions.TestExceptions.test_custom_exception": ["flask_api.tests.test_exceptions.Conflict", "builtins.str", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_exceptions.TestExceptions.test_override_exception_detail": ["flask_api.tests.test_exceptions.Conflict", "builtins.str", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_mediatypes.MediaTypeParsingTests.test_media_type_with_params": ["flask_api.mediatypes.MediaType", "builtins.str", "unittest.case.TestCase.assertEqual", "builtins.repr"], "flask_api.mediatypes.MediaType.__repr__": ["builtins.str"], "flask_api.tests.test_mediatypes.MediaTypeParsingTests.test_media_type_with_q_params": ["flask_api.mediatypes.MediaType", "builtins.str", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_mediatypes.MediaTypeParsingTests.test_media_type_with_wildcard_main_type": ["flask_api.mediatypes.MediaType", "builtins.str", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_mediatypes.MediaTypeParsingTests.test_media_type_with_wildcard_sub_type": ["flask_api.mediatypes.MediaType", "builtins.str", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_mediatypes.MediaTypeParsingTests.test_media_type_without_params": ["flask_api.mediatypes.MediaType", "builtins.str", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_includes_params": ["flask_api.mediatypes.MediaType", "flask_api.mediatypes.MediaType.satisfies", "unittest.case.TestCase.assertTrue"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_main_type_match": ["flask_api.mediatypes.MediaType", "flask_api.mediatypes.MediaType.satisfies", "unittest.case.TestCase.assertTrue"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_matching_params": ["flask_api.mediatypes.MediaType", "flask_api.mediatypes.MediaType.satisfies", "unittest.case.TestCase.assertTrue"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_missing_params": ["flask_api.mediatypes.MediaType", "flask_api.mediatypes.MediaType.satisfies", "unittest.case.TestCase.assertFalse"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_non_matching_params": ["flask_api.mediatypes.MediaType", "flask_api.mediatypes.MediaType.satisfies", "unittest.case.TestCase.assertFalse"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_sub_type_mismatch": ["flask_api.mediatypes.MediaType", "flask_api.mediatypes.MediaType.satisfies", "unittest.case.TestCase.assertFalse"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_wildcard_match": ["flask_api.mediatypes.MediaType", "flask_api.mediatypes.MediaType.satisfies", "unittest.case.TestCase.assertTrue"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_wildcard_mismatch": ["flask_api.mediatypes.MediaType", "flask_api.mediatypes.MediaType.satisfies", "unittest.case.TestCase.assertFalse"], "flask_api.tests.test_mediatypes.AcceptHeaderTests.test_parse_complex_accept_header": ["flask_api.mediatypes.parse_accept_header", "flask_api.mediatypes.MediaType", "builtins.set", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_mediatypes.AcceptHeaderTests.test_parse_simple_accept_header": ["flask_api.mediatypes.parse_accept_header", "flask_api.mediatypes.MediaType", "builtins.set", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_negotiation.TestRendererNegotiation.test_renderer_negotiation_not_implemented": ["flask_api.negotiation.BaseNegotiation", "unittest.case.TestCase.assertRaises", "flask_api.negotiation.BaseNegotiation.select_renderer", "builtins.str", "unittest.case.TestCase.assertEqual"], "flask_api.negotiation.BaseNegotiation.select_renderer": ["builtins.NotImplementedError"], "flask_api.tests.test_negotiation.TestRendererNegotiation.test_select_renderer_client_preference": ["flask_api.negotiation.DefaultNegotiation", "flask.app.Flask.test_request_context", "flask_api.negotiation.DefaultNegotiation.select_renderer", "unittest.case.TestCase.assertEqual", "builtins.str"], "flask_api.tests.test_negotiation.TestRendererNegotiation.test_select_renderer_failed": ["flask_api.negotiation.DefaultNegotiation", "flask.app.Flask.test_request_context", "unittest.case.TestCase.assertRaises", "flask_api.negotiation.DefaultNegotiation.select_renderer"], "flask_api.tests.test_negotiation.TestRendererNegotiation.test_select_renderer_no_accept_header": ["flask_api.negotiation.DefaultNegotiation", "flask.app.Flask.test_request_context", "flask_api.negotiation.DefaultNegotiation.select_renderer", "unittest.case.TestCase.assertEqual", "builtins.str"], "flask_api.tests.test_negotiation.TestRendererNegotiation.test_select_renderer_server_preference": ["flask_api.negotiation.DefaultNegotiation", "flask.app.Flask.test_request_context", "flask_api.negotiation.DefaultNegotiation.select_renderer", "unittest.case.TestCase.assertEqual", "builtins.str"], "flask_api.tests.test_negotiation.TestParserNegotiation.test_parser_negotiation_not_implemented": ["flask_api.negotiation.BaseNegotiation", "unittest.case.TestCase.assertRaises", "flask_api.negotiation.BaseNegotiation.select_parser", "builtins.str", "unittest.case.TestCase.assertEqual"], "flask_api.negotiation.BaseNegotiation.select_parser": ["builtins.NotImplementedError"], "flask_api.tests.test_negotiation.TestParserNegotiation.test_select_parser": ["flask_api.negotiation.DefaultNegotiation", "flask.app.Flask.test_request_context", "flask_api.negotiation.DefaultNegotiation.select_parser", "unittest.case.TestCase.assertEqual", "builtins.str"], "flask_api.request.APIRequest.content_type": ["builtins.hasattr", "flask_api.request.APIRequest._perform_method_overloading"], "flask_api.request.APIRequest._perform_method_overloading": ["builtins.hasattr", "werkzeug.datastructures.Headers.get", "werkzeug.wsgi.get_content_length", "werkzeug.wrappers.request.Request.get_data", "_io.BytesIO", "werkzeug.urls.url_decode_stream"], "flask_api.negotiation.DefaultNegotiation.select_parser": ["flask_api.mediatypes.MediaType", "flask_api.mediatypes.MediaType.satisfies", "flask_api.exceptions.UnsupportedMediaType"], "flask_api.tests.test_negotiation.TestParserNegotiation.test_select_parser_failed": ["flask_api.negotiation.DefaultNegotiation", "flask.app.Flask.test_request_context", "unittest.case.TestCase.assertRaises", "flask_api.negotiation.DefaultNegotiation.select_parser"], "flask_api.tests.test_parsers.ParserTests.test_accessing_json": ["flask.app.Flask.test_client", "json.dumps", "werkzeug.test.Client.post", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode", "json.loads"], "flask_api.request.APIRequest.data": ["builtins.hasattr", "flask_api.request.APIRequest._parse"], "flask_api.request.APIRequest.content_length": ["builtins.hasattr"], "flask_api.request.APIRequest._parse": ["flask_api.negotiation.DefaultNegotiation", "flask_api.parsers.JSONParser", "flask_api.parsers.URLEncodedParser", "flask_api.parsers.MultiPartParser", "flask_api.request.APIRequest._get_parser_options", "flask_api.negotiation.DefaultNegotiation.select_parser", "flask_api.parsers.JSONParser.parse", "werkzeug.datastructures.MultiDict", "flask_api.parsers.MultiPartParser.parse", "builtins.isinstance", "builtins.len", "flask_api.parsers.URLEncodedParser.parse", "flask_api.tests.test_parsers.OverrideParserSettings.setUp.<locals>.CustomParser2", "flask_api.tests.test_parsers.OverrideParserSettings.setUp.<locals>.CustomParser2.parse", "flask_api.tests.test_parsers.OverrideParserSettings.setUp.<locals>.CustomParser1", "flask_api.tests.test_parsers.OverrideParserSettings.setUp.<locals>.CustomParser1.parse", "flask_api.request.APIRequest._set_empty_data"], "flask_api.request.APIRequest.stream": ["builtins.hasattr"], "flask_api.parsers.JSONParser.parse": ["werkzeug.wsgi.LimitedStream.read", "bytes.decode", "json.loads", "BytesIO.read", "builtins.str", "flask_api.exceptions.ParseError"], "flask_api.request.APIRequest.form": ["builtins.hasattr", "flask_api.request.APIRequest._parse"], "flask_api.request.APIRequest.files": ["builtins.hasattr", "flask_api.request.APIRequest._parse"], "flask_api.tests.test_parsers.data": ["werkzeug.datastructures.MultiDict.items", "builtins.dict", "tempfile.SpooledTemporaryFile.read", "bytes.decode"], "flask_api.tests.test_parsers.ParserTests.test_accessing_multipart": ["flask.app.Flask.test_client", "_io.BytesIO", "werkzeug.test.Client.post", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode", "json.loads"], "flask_api.parsers.MultiPartParser.parse": ["dict.get", "str.encode", "werkzeug.formparser.MultiPartParser", "werkzeug.formparser.MultiPartParser.parse", "builtins.str", "flask_api.exceptions.ParseError"], "flask_api.tests.test_parsers.ParserTests.test_accessing_url_encoded": ["flask.app.Flask.test_client", "werkzeug.test.Client.post", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode", "json.loads"], "flask_api.parsers.URLEncodedParser.parse": ["werkzeug.urls.url_decode_stream"], "flask_api.tests.test_parsers.ParserTests.test_invalid_json": ["flask_api.parsers.JSONParser", "_io.BytesIO", "unittest.case.TestCase.assertRaises", "flask_api.mediatypes.MediaType", "flask_api.parsers.JSONParser.parse", "builtins.str", "unittest.case.TestCase.assertIn"], "flask_api.tests.test_parsers.ParserTests.test_invalid_multipart": ["flask_api.parsers.MultiPartParser", "_io.BytesIO", "flask_api.mediatypes.MediaType", "unittest.case.TestCase.assertRaises", "builtins.len", "flask_api.parsers.MultiPartParser.parse", "builtins.str", "unittest.case.TestCase.assertIn"], "flask_api.tests.test_parsers.ParserTests.test_invalid_multipart_no_boundary": ["flask_api.parsers.MultiPartParser", "_io.BytesIO", "unittest.case.TestCase.assertRaises", "flask_api.mediatypes.MediaType", "flask_api.parsers.MultiPartParser.parse", "builtins.str", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_parsers.ParserTests.test_renderer_negotiation_not_implemented": ["flask_api.parsers.BaseParser", "unittest.case.TestCase.assertRaises", "flask_api.parsers.BaseParser.parse", "builtins.str", "unittest.case.TestCase.assertEqual"], "flask_api.parsers.BaseParser.parse": ["builtins.NotImplementedError"], "flask_api.tests.test_parsers.ParserTests.test_valid_json": ["flask_api.parsers.JSONParser", "_io.BytesIO", "flask_api.parsers.JSONParser.parse", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_parsers.OverrideParserSettings.setUp": ["flask_api.app.FlaskAPI"], "flask_api.tests.test_parsers.OverrideParserSettings.test_overridden_parsers_with_decorator": ["flask.app.Flask.test_client", "werkzeug.test.Client.post", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode", "json.loads"], "flask_api.tests.test_parsers.OverrideParserSettings.test_overridden_parsers_with_decorator_as_args": ["flask.app.Flask.test_client", "werkzeug.test.Client.post", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode", "json.loads"], "flask_api.tests.test_parsers.OverrideParserSettings.test_overridden_parsers_with_settings": ["flask.app.Flask.test_client", "werkzeug.test.Client.post", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode", "json.loads"], "flask_api.tests.test_renderers.RendererTests.test_render_browsable_encoding": ["flask_api.app.FlaskAPI", "flask.app.Flask.test_client", "werkzeug.test.Client.get", "werkzeug.wrappers.response.Response.get_data", "builtins.str", "unittest.case.TestCase.assertTrue"], "flask_api.renderers.BrowsableAPIRenderer.render": ["builtins.issubclass", "flask_api.renderers.JSONRenderer", "flask_api.mediatypes.MediaType", "flask_api.renderers.JSONRenderer.render", "flask_api.renderers.BrowsableAPIRenderer._html_escape", "werkzeug.routing.map.MapAdapter.allowed_methods", "builtins.str", "flask_api.renderers.convert_to_title", "flask.templating.render_template"], "flask_api.renderers.BrowsableAPIRenderer._html_escape": ["str.replace"], "flask_api.renderers.convert_to_title": ["str.replace", "str.capitalize"], "flask_api.app.urlize_quoted_links": ["re.sub"], "flask_api.tests.test_renderers.RendererTests.test_render_browsable_linking": ["flask_api.app.FlaskAPI", "flask.app.Flask.test_client", "werkzeug.test.Client.get", "werkzeug.wrappers.response.Response.get_data", "builtins.str", "unittest.case.TestCase.assertTrue"], "flask_api.tests.test_renderers.RendererTests.test_render_json": ["flask_api.tests.test_renderers.RendererTests._make_app", "flask_api.renderers.JSONRenderer", "flask.app.Flask.app_context", "flask_api.mediatypes.MediaType", "flask_api.renderers.JSONRenderer.render", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_renderers.RendererTests._make_app": ["flask_api.app.FlaskAPI"], "flask_api.tests.test_renderers.RendererTests.test_render_json_with_custom_encoder": ["flask_api.tests.test_renderers.RendererTests._make_app", "flask_api.renderers.JSONRenderer", "datetime.datetime", "flask.app.Flask.app_context", "flask_api.mediatypes.MediaType", "flask_api.renderers.JSONRenderer.render", "datetime.isoformat", "str.format", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_renderers.CustomJsonEncoder.default": ["builtins.isinstance", "datetime.isoformat"], "flask_api.tests.test_renderers.RendererTests.test_render_json_with_indent": ["flask_api.tests.test_renderers.RendererTests._make_app", "flask_api.renderers.JSONRenderer", "flask.app.Flask.app_context", "flask_api.mediatypes.MediaType", "flask_api.renderers.JSONRenderer.render", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_renderers.RendererTests.test_renderer_negotiation_not_implemented": ["flask_api.renderers.BaseRenderer", "unittest.case.TestCase.assertRaises", "flask_api.renderers.BaseRenderer.render", "builtins.str", "unittest.case.TestCase.assertEqual"], "flask_api.renderers.BaseRenderer.render": ["builtins.NotImplementedError"], "flask_api.tests.test_renderers.OverrideParserSettings.setUp": ["flask_api.app.FlaskAPI"], "flask_api.tests.test_renderers.OverrideParserSettings.test_overridden_parsers_with_decorator": ["flask.app.Flask.test_client", "werkzeug.test.Client.get", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode"], "flask_api.tests.test_renderers.OverrideParserSettings.test_overridden_parsers_with_decorator_as_args": ["flask.app.Flask.test_client", "werkzeug.test.Client.get", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode"], "flask_api.tests.test_renderers.OverrideParserSettings.test_overridden_parsers_with_settings": ["flask.app.Flask.test_client", "werkzeug.test.Client.get", "unittest.case.TestCase.assertEqual", "werkzeug.wrappers.response.Response.get_data", "bytes.decode"], "flask_api.tests.test_request.MediaTypeParsingTests.test_encode_request": ["flask.app.Flask.test_request_context", "unittest.case.TestCase.assertEqual"], "flask_api.request.APIRequest.full_path": ["bytes.decode"], "flask_api.tests.test_request.MediaTypeParsingTests.test_invalid_content_type_request": ["_io.BytesIO", "flask.app.Flask.test_request_context", "unittest.case.TestCase.assertRaises"], "flask_api.request.APIRequest._set_empty_data": ["werkzeug.datastructures.MultiDict"], "flask_api.tests.test_request.MediaTypeParsingTests.test_json_request": ["_io.BytesIO", "flask.app.Flask.test_request_context", "unittest.case.TestCase.assertEqual"], "flask_api.tests.test_request.MediaTypeParsingTests.test_no_content_request": ["flask.app.Flask.test_request_context", "unittest.case.TestCase.assertFalse"], "flask_api.tests.test_settings.SettingsTests.test_bad_import": ["flask_api.settings.APISettings", "unittest.case.TestCase.assertRaises", "builtins.str", "unittest.case.TestCase.assertIn"], "flask_api.tests.test_status.TestStatus.test_status_categories": ["flask_api.status.is_informational", "unittest.case.TestCase.assertFalse", "unittest.case.TestCase.assertTrue", "flask_api.status.is_success", "flask_api.status.is_redirect", "flask_api.status.is_client_error", "flask_api.status.is_server_error"]}

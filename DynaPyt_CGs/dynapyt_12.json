{"patterns.behavioral.strategy": ["patterns.behavioral.strategy.DiscountStrategyValidator"], "patterns.creational.lazy_evaluation.lazy_property.__init__": ["functools.update_wrapper"], "patterns.structural.adapter": ["typing.TypeVar"], "tests.behavioral.test_strategy.order": ["patterns.behavioral.strategy.Order"], "patterns.behavioral.strategy.DiscountStrategyValidator.__set__": ["builtins.setattr", "patterns.behavioral.strategy.DiscountStrategyValidator.validate"], "tests.behavioral.test_strategy.test_discount_function_return": ["patterns.behavioral.strategy.ten_percent_discount", "patterns.behavioral.strategy.on_sale_discount"], "tests.behavioral.test_strategy.test_order_discount_strategy_validate_success": ["patterns.behavioral.strategy.Order"], "patterns.behavioral.strategy.DiscountStrategyValidator.validate": ["patterns.behavioral.strategy.on_sale_discount", "patterns.behavioral.strategy.ten_percent_discount", "builtins.ValueError", "builtins.str", "builtins.print"], "patterns.behavioral.strategy.DiscountStrategyValidator.__get__": ["builtins.getattr"], "tests.behavioral.test_strategy.test_discount_apply_success": ["patterns.behavioral.strategy.Order", "patterns.behavioral.strategy.Order.apply_discount"], "patterns.behavioral.strategy.Order.apply_discount": ["patterns.behavioral.strategy.ten_percent_discount", "patterns.behavioral.strategy.on_sale_discount"], "tests.behavioral.test_strategy.test_order_discount_strategy_validate_error": ["patterns.behavioral.strategy.Order"], "tests.structural.test_decorator.TestTextWrapping.setUp": ["patterns.structural.decorator.TextTag"], "tests.structural.test_decorator.TestTextWrapping.test_bold": ["patterns.structural.decorator.BoldWrapper", "patterns.structural.decorator.BoldWrapper.render", "unittest.case.TestCase.assertEqual"], "patterns.structural.decorator.BoldWrapper.render": ["patterns.structural.decorator.TextTag.render", "patterns.structural.decorator.ItalicWrapper.render"], "tests.structural.test_decorator.TestTextWrapping.test_mixed_bold_and_italic": ["patterns.structural.decorator.ItalicWrapper", "patterns.structural.decorator.BoldWrapper", "patterns.structural.decorator.BoldWrapper.render", "unittest.case.TestCase.assertEqual"], "patterns.structural.decorator.ItalicWrapper.render": ["patterns.structural.decorator.TextTag.render"], "tests.structural.test_decorator.TestTextWrapping.test_italic": ["patterns.structural.decorator.ItalicWrapper", "patterns.structural.decorator.ItalicWrapper.render", "unittest.case.TestCase.assertEqual"], "tests.structural.test_adapter.ClassTest.setUp": ["patterns.structural.adapter.Dog", "patterns.structural.adapter.Cat", "patterns.structural.adapter.Human", "patterns.structural.adapter.Car"], "tests.structural.test_adapter.ClassTest.test_car_shall_make_loud_noise": ["patterns.structural.adapter.Car.make_noise", "unittest.case.TestCase.assertEqual"], "tests.structural.test_adapter.ClassTest.test_dog_shall_bark": ["patterns.structural.adapter.Dog.bark", "unittest.case.TestCase.assertEqual"], "tests.structural.test_adapter.ClassTest.test_human_shall_speak": ["patterns.structural.adapter.Human.speak", "unittest.case.TestCase.assertEqual"], "tests.structural.test_adapter.ClassTest.test_cat_shall_meow": ["patterns.structural.adapter.Cat.meow", "unittest.case.TestCase.assertEqual"], "tests.structural.test_adapter.ClassTest.test_car_shall_make_very_loud_noise": ["patterns.structural.adapter.Car.make_noise", "unittest.case.TestCase.assertEqual"], "tests.structural.test_adapter.AdapterTest.test_car_adapter_shall_make_loud_noise": ["patterns.structural.adapter.Car", "patterns.structural.adapter.Adapter", "patterns.structural.adapter.Car.make_noise", "unittest.case.TestCase.assertEqual"], "patterns.structural.adapter.Adapter.__init__": ["dict.update"], "tests.structural.test_adapter.AdapterTest.test_cat_adapter_shall_make_noise": ["patterns.structural.adapter.Cat", "patterns.structural.adapter.Adapter", "patterns.structural.adapter.Cat.meow", "unittest.case.TestCase.assertEqual"], "tests.structural.test_adapter.AdapterTest.test_human_adapter_shall_make_noise": ["patterns.structural.adapter.Human", "patterns.structural.adapter.Adapter", "patterns.structural.adapter.Human.speak", "unittest.case.TestCase.assertEqual"], "tests.structural.test_adapter.AdapterTest.test_car_adapter_shall_make_very_loud_noise": ["patterns.structural.adapter.Car", "patterns.structural.adapter.Adapter", "patterns.structural.adapter.Car.make_noise", "unittest.case.TestCase.assertEqual"], "tests.structural.test_adapter.AdapterTest.test_dog_adapter_shall_make_noise": ["patterns.structural.adapter.Dog", "patterns.structural.adapter.Adapter", "patterns.structural.adapter.Dog.bark", "unittest.case.TestCase.assertEqual"], "tests.creational.test_borg.BorgTest.setUp": ["patterns.creational.borg.Borg", "patterns.creational.borg.YourBorg"], "patterns.creational.borg.YourBorg.__init__": ["patterns.creational.borg.Borg.__init__", "builtins.hasattr"], "tests.creational.test_borg.BorgTest.test_changing_instance_attribute_shall_change_borg_state": ["unittest.case.TestCase.assertEqual"], "tests.creational.test_borg.BorgTest.test_instances_shall_have_own_ids": ["builtins.id", "unittest.case.TestCase.assertNotEqual"], "tests.creational.test_borg.BorgTest.test_initial_borg_state_shall_be_init": ["patterns.creational.borg.Borg", "unittest.case.TestCase.assertEqual"], "tests.creational.test_pool.TestNaitivePool.test_pool_behavior_with_single_object_inside": ["queue.Queue", "queue.Queue.put", "patterns.creational.pool.ObjectPool", "unittest.case.TestCase.assertEqual", "queue.Queue.empty", "unittest.case.TestCase.assertFalse", "queue.Queue.get", "unittest.case.TestCase.assertTrue"], "patterns.creational.pool.ObjectPool.__enter__": ["queue.Queue.get"], "patterns.creational.pool.ObjectPool.__exit__": ["queue.Queue.put"], "tests.creational.test_pool.TestPool.setUp": ["queue.Queue", "queue.Queue.put"], "tests.creational.test_pool.TestPool.test_frozen_pool": ["patterns.creational.pool.ObjectPool", "unittest.case.TestCase.assertEqual", "queue.Queue.get", "unittest.case.TestCase.assertTrue", "queue.Queue.empty", "unittest.case.TestCase.assertFalse"], "tests.creational.test_pool.TestPool.test_items_recoil": ["patterns.creational.pool.ObjectPool", "unittest.case.TestCase.assertEqual", "queue.Queue.get", "unittest.case.TestCase.assertTrue", "queue.Queue.empty", "unittest.case.TestCase.assertFalse"], "patterns.creational.pool.ObjectPool.__init__": ["queue.Queue.get"], "tests.creational.test_abstract_factory.TestPetShop.test_dog_pet_shop_shall_show_dog_instance": ["patterns.creational.abstract_factory.PetShop", "unittest.mock._patch_object", "patterns.creational.abstract_factory.PetShop.buy_pet", "<MagicMock name='speak' id='140089857206464'>", "unittest.case.TestCase.assertEqual"], "patterns.creational.abstract_factory.PetShop.buy_pet": ["patterns.creational.abstract_factory.Dog", "builtins.print"], "tests.creational.test_lazy.TestDynamicExpanding.setUp": ["patterns.creational.lazy_evaluation.Person"], "tests.creational.test_lazy.TestDynamicExpanding.test_relatives_not_in_properties": ["unittest.case.TestCase.assertNotIn"], "tests.creational.test_lazy.TestDynamicExpanding.test_innate_properties": ["unittest.case.TestCase.assertDictEqual"], "patterns.creational.lazy_evaluation.lazy_property.__get__": ["patterns.creational.lazy_evaluation.Person.relatives"], "tests.creational.test_lazy.TestDynamicExpanding.test_extended_properties": ["builtins.print", "unittest.case.TestCase.assertDictEqual"], "tests.creational.test_lazy.TestDynamicExpanding.test_parents": ["builtins.range", "unittest.case.TestCase.assertEqual"], "patterns.creational.lazy_evaluation._lazy_property": ["builtins.hasattr", "patterns.creational.lazy_evaluation.Person.parents", "builtins.setattr", "builtins.getattr"], "tests.creational.test_lazy.TestDynamicExpanding.test_relatives_after_access": ["builtins.print", "unittest.case.TestCase.assertIn"], "tests.structural.test_bridge.BridgeTest.test_bridge_shall_scale_both_api_circles_with_own_implementation": ["patterns.structural.bridge.DrawingAPI1", "patterns.structural.bridge.DrawingAPI2", "patterns.structural.bridge.CircleShape", "patterns.structural.bridge.CircleShape.scale", "unittest.case.TestCase.assertEqual", "unittest.mock._patch_object", "<MagicMock name='scale' id='140089838173344'>", "<MagicMock name='scale' id='140089839385472'>"], "tests.structural.test_bridge.BridgeTest.test_bridge_shall_draw_with_concrete_api_implementation": ["patterns.structural.bridge.DrawingAPI1", "patterns.structural.bridge.DrawingAPI2", "unittest.mock._patch_object", "patterns.structural.bridge.CircleShape", "patterns.structural.bridge.CircleShape.draw", "unittest.case.TestCase.assertEqual"], "patterns.structural.bridge.CircleShape.draw": ["<MagicMock name='draw_circle' id='140089842065248'>", "<MagicMock name='draw_circle' id='140089840006480'>"], "tests.structural.test_proxy.ProxyTest.setUpClass": ["patterns.structural.proxy.Proxy"], "patterns.structural.proxy.Proxy.__init__": ["patterns.structural.proxy.RealSubject"], "tests.structural.test_proxy.ProxyTest.setUp": ["_io.StringIO"], "tests.structural.test_proxy.ProxyTest.test_do_the_job_for_admin_shall_pass": ["patterns.structural.proxy.client", "StringIO.getvalue"], "patterns.structural.proxy.client": ["patterns.structural.proxy.Proxy.do_the_job"], "patterns.structural.proxy.Proxy.do_the_job": ["builtins.print", "patterns.structural.proxy.RealSubject.do_the_job"], "patterns.structural.proxy.RealSubject.do_the_job": ["builtins.print"], "tests.structural.test_proxy.ProxyTest.tearDown": ["StringIO.close"], "tests.structural.test_proxy.ProxyTest.test_do_the_job_for_anonymous_shall_reject": ["patterns.structural.proxy.client", "StringIO.getvalue"], "tests.creational.test_prototype.TestPrototypeFeatures.setUp": ["patterns.creational.prototype.Prototype"], "patterns.creational.prototype.Prototype.__init__": ["dict.update"], "tests.creational.test_prototype.TestPrototypeFeatures.test_cloning_propperty_assigned_values": ["patterns.creational.prototype.Prototype.clone", "unittest.case.TestCase.assertNotEqual"], "patterns.creational.prototype.Prototype.clone": ["patterns.creational.prototype.Prototype", "dict.update"], "tests.creational.test_prototype.TestPrototypeFeatures.test_cloning_propperty_innate_values": ["patterns.creational.prototype.Prototype.clone", "unittest.case.TestCase.assertEqual"], "tests.creational.test_prototype.TestPrototypeFeatures.test_extended_property_values_cloning": ["patterns.creational.prototype.Prototype.clone", "unittest.case.TestCase.assertRaises"], "tests.creational.test_prototype.TestDispatcherFeatures.setUp": ["patterns.creational.prototype.PrototypeDispatcher", "patterns.creational.prototype.Prototype", "patterns.creational.prototype.Prototype.clone", "patterns.creational.prototype.PrototypeDispatcher.register_object"], "tests.creational.test_prototype.TestDispatcherFeatures.test_particular_properties_retrieving": ["patterns.creational.prototype.PrototypeDispatcher.get_objects", "unittest.case.TestCase.assertEqual"], "tests.creational.test_prototype.TestDispatcherFeatures.test_batch_retrieving": ["patterns.creational.prototype.PrototypeDispatcher.get_objects", "builtins.len", "unittest.case.TestCase.assertEqual"], "tests.creational.test_prototype.TestDispatcherFeatures.test_extended_properties_retrieving": ["patterns.creational.prototype.PrototypeDispatcher.get_objects", "unittest.case.TestCase.assertEqual", "unittest.case.TestCase.assertTrue"], "tests.behavioral.test_state.radio": ["patterns.behavioral.state.Radio"], "patterns.behavioral.state.Radio.__init__": ["patterns.behavioral.state.AmState", "patterns.behavioral.state.FmState"], "tests.behavioral.test_state.test_toggle_amfm": ["patterns.behavioral.state.Radio.toggle_amfm"], "patterns.behavioral.state.Radio.toggle_amfm": ["patterns.behavioral.state.AmState.toggle_amfm", "patterns.behavioral.state.FmState.toggle_amfm"], "patterns.behavioral.state.AmState.toggle_amfm": ["builtins.print"], "patterns.behavioral.state.FmState.toggle_amfm": ["builtins.print"], "tests.behavioral.test_publish_subscribe.TestProvider.test_provider_shall_update_affected_subscribers_with_published_subscription": ["patterns.behavioral.publish_subscribe.Provider", "patterns.behavioral.publish_subscribe.Publisher", "patterns.behavioral.publish_subscribe.Subscriber", "patterns.behavioral.publish_subscribe.Subscriber.subscribe", "unittest.mock._patch_object", "patterns.behavioral.publish_subscribe.Provider.update", "unittest.case.TestCase.assertEqual", "patterns.behavioral.publish_subscribe.Publisher.publish"], "patterns.behavioral.publish_subscribe.Subscriber.subscribe": ["patterns.behavioral.publish_subscribe.Provider.subscribe"], "patterns.behavioral.publish_subscribe.Provider.subscribe": ["dict.setdefault", "list.append"], "patterns.behavioral.publish_subscribe.Publisher.publish": ["patterns.behavioral.publish_subscribe.Provider.notify"], "patterns.behavioral.publish_subscribe.Provider.notify": ["list.append"], "patterns.behavioral.publish_subscribe.Provider.update": ["dict.get", "<MagicMock name='run' id='140089839403312'>", "<MagicMock name='run' id='140089840005472'>"], "tests.behavioral.test_publish_subscribe.TestProvider.test_subscriber_shall_be_attachable_to_subscriptions": ["patterns.behavioral.publish_subscribe.Provider", "builtins.len", "unittest.case.TestCase.assertEqual", "patterns.behavioral.publish_subscribe.Subscriber", "patterns.behavioral.publish_subscribe.Subscriber.subscribe"], "tests.behavioral.test_publish_subscribe.TestProvider.test_subscriber_shall_be_detachable_from_subscriptions": ["patterns.behavioral.publish_subscribe.Provider", "patterns.behavioral.publish_subscribe.Subscriber", "patterns.behavioral.publish_subscribe.Subscriber.subscribe", "builtins.len", "unittest.case.TestCase.assertEqual", "patterns.behavioral.publish_subscribe.Subscriber.unsubscribe"], "patterns.behavioral.publish_subscribe.Subscriber.unsubscribe": ["patterns.behavioral.publish_subscribe.Provider.unsubscribe"], "patterns.behavioral.publish_subscribe.Provider.unsubscribe": ["list.remove"], "tests.behavioral.test_publish_subscribe.TestProvider.test_publisher_shall_append_subscription_message_to_queue": ["patterns.behavioral.publish_subscribe.Provider", "patterns.behavioral.publish_subscribe.Publisher", "patterns.behavioral.publish_subscribe.Subscriber", "builtins.len", "unittest.case.TestCase.assertEqual", "patterns.behavioral.publish_subscribe.Publisher.publish"], "tests.test_hsm.StandbyStateTest.setUpClass": ["patterns.other.hsm.hsm.HierachicalStateMachine"], "patterns.other.hsm.hsm.HierachicalStateMachine.__init__": ["patterns.other.hsm.hsm.Active", "patterns.other.hsm.hsm.Standby", "patterns.other.hsm.hsm.Suspect", "patterns.other.hsm.hsm.Failed"], "tests.test_hsm.StandbyStateTest.setUp": ["patterns.other.hsm.hsm.Standby"], "tests.test_hsm.StandbyStateTest.test_given_standby_on_message_operator_inservice_shall_raise_exception_and_keep_in_state": ["unittest.case.TestCase.assertRaises", "patterns.other.hsm.hsm.HierachicalStateMachine.on_message", "builtins.isinstance", "unittest.case.TestCase.assertEqual"], "patterns.other.hsm.hsm.HierachicalStateMachine.on_message": ["dict.keys", "patterns.other.hsm.hsm.Unit.on_operator_inservice", "patterns.other.hsm.hsm.Standby.on_switchover", "patterns.other.hsm.hsm.Inservice.on_fault_trigger", "patterns.other.hsm.hsm.Unit.on_diagnostics_passed", "patterns.other.hsm.hsm.Unit.on_diagnostics_failed"], "tests.test_hsm.StandbyStateTest.test_given_standby_on_message_switchover_shall_set_active": ["patterns.other.hsm.hsm.HierachicalStateMachine.on_message", "builtins.isinstance", "unittest.case.TestCase.assertEqual"], "patterns.other.hsm.hsm.Standby.on_switchover": ["patterns.other.hsm.hsm.Inservice.on_switchover", "patterns.other.hsm.hsm.HierachicalStateMachine._next_state", "<MagicMock name='_next_state' id='140089837322784'>"], "patterns.other.hsm.hsm.Inservice.on_switchover": ["patterns.other.hsm.hsm.HierachicalStateMachine._perform_switchover", "patterns.other.hsm.hsm.HierachicalStateMachine._check_mate_status", "patterns.other.hsm.hsm.HierachicalStateMachine._send_switchover_response", "<MagicMock name='_perform_switchover' id='140089837728000'>", "<MagicMock name='_check_mate_status' id='140089837398496'>", "<MagicMock name='_send_switchover_response' id='140089838571328'>"], "tests.test_hsm.StandbyStateTest.test_given_standby_on_message_fault_trigger_shall_set_suspect": ["patterns.other.hsm.hsm.HierachicalStateMachine.on_message", "builtins.isinstance", "unittest.case.TestCase.assertEqual"], "patterns.other.hsm.hsm.Inservice.on_fault_trigger": ["patterns.other.hsm.hsm.HierachicalStateMachine._next_state", "patterns.other.hsm.hsm.HierachicalStateMachine._send_diagnostics_request", "patterns.other.hsm.hsm.HierachicalStateMachine._raise_alarm"], "tests.test_hsm.StandbyStateTest.test_given_standby_on_message_diagnostics_passed_shall_raise_exception_and_keep_in_state": ["unittest.case.TestCase.assertRaises", "patterns.other.hsm.hsm.HierachicalStateMachine.on_message", "builtins.isinstance", "unittest.case.TestCase.assertEqual"], "tests.test_hsm.StandbyStateTest.test_given_standby_on_message_switchover_shall_call_hsm_methods": ["unittest.mock._patch_object", "patterns.other.hsm.hsm.HierachicalStateMachine.on_message", "unittest.case.TestCase.assertEqual"], "tests.test_hsm.StandbyStateTest.test_given_standby_on_message_diagnostics_failed_shall_raise_exception_and_keep_in_state": ["unittest.case.TestCase.assertRaises", "patterns.other.hsm.hsm.HierachicalStateMachine.on_message", "builtins.isinstance", "unittest.case.TestCase.assertEqual"], "tests.test_hsm.HsmMethodTest.setUpClass": ["patterns.other.hsm.hsm.HierachicalStateMachine"], "tests.test_hsm.HsmMethodTest.test_method_perform_switchover_shall_return_specifically": ["patterns.other.hsm.hsm.HierachicalStateMachine._perform_switchover", "unittest.case.TestCase.assertEqual"], "tests.test_hsm.HsmMethodTest.test_initial_state_shall_be_standby": ["builtins.isinstance", "unittest.case.TestCase.assertEqual"], "tests.test_hsm.HsmMethodTest.test_unsupported_state_shall_raise_exception": ["unittest.case.TestCase.assertRaises", "patterns.other.hsm.hsm.HierachicalStateMachine._next_state"], "tests.test_hsm.HsmMethodTest.test_unsupported_message_type_shall_raise_exception": ["unittest.case.TestCase.assertRaises", "patterns.other.hsm.hsm.HierachicalStateMachine.on_message"], "tests.test_hsm.HsmMethodTest.test_calling_next_state_shall_change_current_state": ["patterns.other.hsm.hsm.HierachicalStateMachine._next_state", "builtins.isinstance", "unittest.case.TestCase.assertEqual", "patterns.other.hsm.hsm.Standby"], "tests.behavioral.test_observer.observable": ["patterns.behavioral.observer.Data"], "patterns.behavioral.observer.Data.__init__": ["patterns.behavioral.observer.Subject.__init__"], "tests.behavioral.test_observer.test_one_data_change_notifies_each_observer_once": ["patterns.behavioral.observer.DecimalViewer", "patterns.behavioral.observer.Subject.attach", "patterns.behavioral.observer.HexViewer", "unittest.mock.Mock", "unittest.mock.patch"], "patterns.behavioral.observer.Subject.attach": ["list.append"], "patterns.behavioral.observer.Data.data": ["patterns.behavioral.observer.Subject.notify"], "patterns.behavioral.observer.Subject.notify": ["<Mock name='mock()' id='140089840838080'>", "patterns.behavioral.observer.HexViewer.update"], "patterns.behavioral.observer.HexViewer.update": ["builtins.print"], "tests.behavioral.test_observer.test_attach_detach": ["patterns.behavioral.observer.DecimalViewer", "builtins.len", "patterns.behavioral.observer.Subject.attach", "patterns.behavioral.observer.Subject.detach"], "patterns.behavioral.observer.Subject.detach": ["contextlib.suppress", "list.remove"], "tests.creational.test_builder.TestComplex.test_house": ["patterns.creational.builder.construct_building", "unittest.case.TestCase.assertEqual"], "patterns.creational.builder.construct_building": ["patterns.creational.builder.ComplexHouse", "patterns.creational.builder.ComplexHouse.build_floor", "patterns.creational.builder.ComplexHouse.build_size"], "tests.creational.test_builder.TestSimple.test_flat": ["patterns.creational.builder.Flat", "unittest.case.TestCase.assertEqual"], "patterns.creational.builder.Building.__init__": ["patterns.creational.builder.Flat.build_floor", "patterns.creational.builder.Flat.build_size", "patterns.creational.builder.House.build_floor", "patterns.creational.builder.House.build_size"], "tests.creational.test_builder.TestSimple.test_house": ["patterns.creational.builder.House", "unittest.case.TestCase.assertEqual"]}

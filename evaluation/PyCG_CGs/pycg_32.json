{"tests.test_browser": [], "tests.test_browser.TestInnerText._prepare_dom": ["pyquery.pyquery.PyQuery", "<builtin>.super"], "<builtin>.super": [], "pyquery.pyquery.PyQuery": [], "tests.test_browser.TestInnerText._simple_test": ["unittest.TestCase.assertEqual", "tests.test_browser.TestInnerText._prepare_dom"], "unittest.TestCase.assertEqual": [], "tests.apps": [], "tests.apps.input_app": ["webob.Response", "webob.Request"], "webob.Response": [], "webob.Request": [], "tests.apps.application": ["webob.Response", "webob.Request"], "tests.apps.secure_application": ["webob.exc.HTTPUnauthorized", "tests.apps.application"], "webob.exc.HTTPUnauthorized": [], "tests": [], "tests.test_pyquery": ["sys.path.insert", "os.path.dirname", "os.path.join", "os.path.abspath"], "os.path.dirname": [], "sys.path.insert": [], "os.path.abspath": [], "os.path.join": [], "tests.test_pyquery.TestUnicode.test_unicode": ["<builtin>.type", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual", "<builtin>.str"], "<builtin>.type": [], "<builtin>.str": [], "tests.test_pyquery.TestAttributeCase.test_xml_upper_element_name": ["<builtin>.len", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "<builtin>.len": [], "tests.test_pyquery.TestAttributeCase.test_html_upper_element_name": ["<builtin>.len", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestSelector.test_get_root": ["unittest.TestCase.assertTrue", "unittest.TestCase.assertNotEqual", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual", "<builtin>.isinstance"], "<builtin>.isinstance": [], "unittest.TestCase.assertNotEqual": [], "unittest.TestCase.assertTrue": [], "tests.test_pyquery.TestSelector.test_selector_from_doc": ["pyquery.pyquery.PyQuery", "lxml.etree.fromstring", "<builtin>.len"], "lxml.etree.fromstring": [], "tests.test_pyquery.TestSelector.test_selector_from_html": ["<builtin>.len", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestSelector.test_selector_from_obj": ["<builtin>.len", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestSelector.test_selector_from_html_from_obj": ["<builtin>.len", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestSelector.test_class": ["pyquery.pyquery.PyQuery", "<builtin>.isinstance"], "tests.test_pyquery.TestSelector.test_pseudo_classes": ["<builtin>.len", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual", "unittest.TestCase.assertIn"], "unittest.TestCase.assertIn": [], "tests.test_pyquery.TestSelector.test_on_the_fly_dom_creation": ["pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestTraversal.test_filter": ["<builtin>.len", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestTraversal.test_filter.<lambda1>": [], "tests.test_pyquery.TestTraversal.test_filter.<lambda2>": [], "tests.test_pyquery.TestTraversal.test_not": ["<builtin>.len", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestTraversal.test_is": ["pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestTraversal.test_find": ["<builtin>.len", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestTraversal.test_each": ["<builtin>.len", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestTraversal.test_each.<lambda1>": [], "tests.test_pyquery.TestTraversal.test_map": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestTraversal.test_map.ids_minus_one": ["pyquery.pyquery.PyQuery", "<builtin>.int"], "<builtin>.int": [], "tests.test_pyquery.TestTraversal.test_map.<lambda1>": ["pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestTraversal.test_end": ["<builtin>.len", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestTraversal.test_closest": ["<builtin>.len", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestTraversal.test_next_all": ["<builtin>.len", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestTraversal.test_next_until": ["<builtin>.len", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestOpener.test_open_filename": ["<builtin>.len", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestOpener.test_invalid_filename": ["<builtin>.len", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestOpener.test_custom_opener": ["<builtin>.len", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestOpener.test_custom_opener.opener": [], "tests.test_pyquery.TestConstruction.test_typeerror_on_invalid_value": ["unittest.TestCase.assertRaises", "<builtin>.object"], "<builtin>.object": [], "unittest.TestCase.assertRaises": [], "tests.test_pyquery.TestComment.test_comment": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestCallback.test_S_this_inside_callback": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestCallback.test_S_this_inside_callback.<lambda1>": [], "tests.test_pyquery.TestCallback.test_parameterless_callback": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestCallback.test_parameterless_callback.<lambda1>": [], "tests.test_pyquery.TestHook.test_fn": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestHook.test_fn.<lambda1>": [], "tests.test_pyquery.TestHook.test_fn.<lambda1>.<lambda1>": ["pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestHook.test_fn_with_kwargs": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestHook.test_fn_with_kwargs.<lambda1>": ["pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestManipulating.test_attr_empty_string": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestManipulating.test_remove": ["<builtin>.repr", "pyquery.pyquery.PyQuery"], "<builtin>.repr": [], "tests.test_pyquery.TestManipulating.test_class": ["pyquery.pyquery.PyQuery", "<builtin>.str"], "tests.test_pyquery.TestManipulating.test_val_for_inputs": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual", "unittest.TestCase.assertIsNone"], "unittest.TestCase.assertIsNone": [], "tests.test_pyquery.TestManipulating.test_val_for_inputs_with_newline": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestManipulating.test_val_for_textarea": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestManipulating.test_val_for_select": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual", "unittest.TestCase.assertIsNone"], "tests.test_pyquery.TestManipulating.test_val_for_select_multiple": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestManipulating.test_val_for_input_and_textarea_given_array_value": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestManipulating.test_val_for_multiple_elements": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestManipulating.test_val_checkbox_no_value_attribute": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestManipulating.test_val_radio_no_value_attribute": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestManipulating.test_val_value_is_empty_string": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestManipulating.test_val_input_has_no_value_attr": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestManipulating.test_html_replacement": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual", "unittest.TestCase.assertIn"], "tests.test_pyquery.TestManipulating.test_html_escape": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestAjax.test_serialize_pairs_form_id": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestAjax.test_serialize_pairs_form_controls": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestAjax.test_serialize_pairs_filter_controls": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestAjax.test_serialize_pairs_form_values": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestAjax.test_serialize_array": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestAjax.test_serialize": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestAjax.test_serialize_dict": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestMakeLinks.test_make_link": ["<builtin>.len", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual", "unittest.TestCase.assertTrue"], "tests.test_pyquery.TestHTMLParser.test_parser_persistance": ["unittest.TestCase.assertRaises", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestHTMLParser.test_parser_persistance.<lambda1>": [], "tests.test_pyquery.TestHTMLParser.test_replaceWith": ["<builtin>.repr", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestHTMLParser.test_replaceWith_with_function": ["<builtin>.repr", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestHTMLParser.test_replaceWith_with_function.<lambda1>": ["pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestXMLNamespace.test_selector": ["<builtin>.repr", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestXMLNamespace.test_selector_with_xml": ["<builtin>.repr", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestXMLNamespace.test_selector_html": ["<builtin>.repr", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestXMLNamespace.test_xhtml_namespace": ["<builtin>.repr", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestXMLNamespace.test_xhtml_namespace_html_parser": ["<builtin>.repr", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestXMLNamespace.test_remove_namespaces": ["<builtin>.repr", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestXMLNamespace.test_persistent_namespaces": ["<builtin>.repr", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestXMLNamespace.test_namespace_traversal": ["<builtin>.repr", "pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual"], "tests.test_pyquery.TestWebScrapping.setUp": ["webtest.http.StopableWSGIServer.create"], "webtest.http.StopableWSGIServer.create": [], "tests.test_pyquery.TestWebScrapping.test_get": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertIn", "<builtin>.print"], "<builtin>.print": [], "tests.test_pyquery.TestWebScrapping.test_post": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertIn"], "tests.test_pyquery.TestWebScrapping.test_session": ["pyquery.pyquery.PyQuery", "requests.Session", "unittest.TestCase.assertIn", "unittest.TestCase.skipTest"], "requests.Session": [], "unittest.TestCase.skipTest": [], "tests.test_pyquery.TestWebScrapping.tearDown": [], "pytest.mark.skip": [], "tests.test_pyquery.TestWebScrappingEncoding": ["pytest.mark.skip"], "tests.test_pyquery.TestWebScrappingEncoding.test_get": ["pyquery.pyquery.PyQuery", "unittest.TestCase.assertEqual", "<builtin>.print"], "tests.test_pyquery.TestWebScrappingTimeouts.setUp": ["webtest.http.StopableWSGIServer.create"], "tests.test_pyquery.TestWebScrappingTimeouts.setUp.app": ["time.sleep"], "time.sleep": [], "tests.test_pyquery.TestWebScrappingTimeouts.test_get": ["unittest.TestCase.assertRaises", "pyquery.pyquery.PyQuery"], "tests.test_pyquery.TestWebScrappingTimeouts.tearDown": [], "tests.browser_base": [], "tests.browser_base.TextExtractionMixin._prepare_dom": [], "tests.browser_base.TextExtractionMixin._simple_test": [], "tests.browser_base.TextExtractionMixin.test_inline_tags": ["tests.browser_base.TextExtractionMixin._simple_test"], "tests.browser_base.TextExtractionMixin.test_block_tags": ["tests.browser_base.TextExtractionMixin._simple_test"], "tests.browser_base.TextExtractionMixin.test_separators": ["tests.browser_base.TextExtractionMixin._simple_test"], "tests.browser_base.TextExtractionMixin.test_strip": ["tests.browser_base.TextExtractionMixin._simple_test"], "tests.browser_base.TextExtractionMixin.test_ul_li": ["tests.browser_base.TextExtractionMixin._simple_test"], "tests.test_real_browser": [], "tests.test_real_browser.BaseTestRequestHandler._get_last_html": ["http.server.BaseHTTPRequestHandler.server.html_queue.empty", "http.server.BaseHTTPRequestHandler.server.html_queue.get_nowait"], "http.server.BaseHTTPRequestHandler.server.html_queue.empty": [], "http.server.BaseHTTPRequestHandler.server.html_queue.get_nowait": [], "tests.test_real_browser.BaseTestRequestHandler.log_request": [], "tests.test_real_browser.BaseTestRequestHandler.recv_from_testsuite": ["http.server.BaseHTTPRequestHandler.server.in_queue.get", "http.server.BaseHTTPRequestHandler.server.in_queue.get_nowait", "http.server.BaseHTTPRequestHandler.server.in_queue.empty"], "http.server.BaseHTTPRequestHandler.server.in_queue.empty": [], "http.server.BaseHTTPRequestHandler.server.in_queue.get_nowait": [], "http.server.BaseHTTPRequestHandler.server.in_queue.get": [], "tests.test_real_browser.BaseTestRequestHandler.send_to_testsuite": ["http.server.BaseHTTPRequestHandler.server.out_queue.put"], "http.server.BaseHTTPRequestHandler.server.out_queue.put": [], "tests.test_real_browser.HTMLSnippetSender.get_last_html": ["tests.test_real_browser.BaseTestRequestHandler.recv_from_testsuite"], "tests.test_real_browser.HTMLSnippetSender.do_GET": ["http.server.BaseHTTPRequestHandler.end_headers", "tests.test_real_browser.HTMLSnippetSender.get_last_html", "http.server.BaseHTTPRequestHandler.send_response", "http.server.BaseHTTPRequestHandler.send_header", "http.server.BaseHTTPRequestHandler.wfile.write"], "http.server.BaseHTTPRequestHandler.send_response": [], "http.server.BaseHTTPRequestHandler.send_header": [], "http.server.BaseHTTPRequestHandler.end_headers": [], "http.server.BaseHTTPRequestHandler.wfile.write": [], "tests.test_real_browser.BaseBrowserTest.setUpClass": ["selenium.webdriver.Firefox", "selenium.webdriver.firefox.options.Options", "threading.Thread", "queue.Queue", "http.server.HTTPServer", "time.sleep"], "queue.Queue": [], "http.server.HTTPServer": [], "threading.Thread": [], "selenium.webdriver.firefox.options.Options": [], "selenium.webdriver.Firefox": [], "tests.test_real_browser.BaseBrowserTest.tearDownClass": [], "tests.test_real_browser.BaseBrowserTest.send_to_server": [], "tests.test_real_browser.BaseBrowserTest.recv_from_server": [], "tests.test_real_browser.BaseBrowserTest.open_url": ["urllib.parse.urlunsplit"], "urllib.parse.urlunsplit": [], "tests.test_real_browser.TestInnerText._simple_test": ["tests.test_real_browser.BaseBrowserTest.open_url", "unittest.TestCase.assertEqual", "tests.test_real_browser.BaseBrowserTest.send_to_server"]}
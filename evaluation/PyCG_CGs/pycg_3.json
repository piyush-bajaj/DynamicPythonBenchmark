{"flask_api.tests.test_mediatypes": [], "flask_api.tests.test_mediatypes.MediaTypeParsingTests.test_media_type_with_params": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertEqual", "<builtin>.str", "<builtin>.repr"], "flask_api.mediatypes.MediaType": [], "<builtin>.str": [], "unittest.TestCase.assertEqual": [], "<builtin>.repr": [], "flask_api.tests.test_mediatypes.MediaTypeParsingTests.test_media_type_with_q_params": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertEqual", "<builtin>.str"], "flask_api.tests.test_mediatypes.MediaTypeParsingTests.test_media_type_without_params": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertEqual", "<builtin>.str"], "flask_api.tests.test_mediatypes.MediaTypeParsingTests.test_media_type_with_wildcard_sub_type": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertEqual", "<builtin>.str"], "flask_api.tests.test_mediatypes.MediaTypeParsingTests.test_media_type_with_wildcard_main_type": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertEqual", "<builtin>.str"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_includes_params": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertTrue"], "unittest.TestCase.assertTrue": [], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_missing_params": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertFalse"], "unittest.TestCase.assertFalse": [], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_matching_params": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertTrue"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_non_matching_params": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertFalse"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_main_type_match": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertTrue"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_sub_type_mismatch": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertFalse"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_wildcard_match": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertTrue"], "flask_api.tests.test_mediatypes.MediaTypeMatchingTests.test_media_type_wildcard_mismatch": ["flask_api.mediatypes.MediaType", "unittest.TestCase.assertFalse"], "flask_api.tests.test_mediatypes.AcceptHeaderTests.test_parse_simple_accept_header": ["unittest.TestCase.assertEqual", "<builtin>.set", "flask_api.mediatypes.parse_accept_header"], "flask_api.mediatypes.parse_accept_header": [], "<builtin>.set": [], "flask_api.tests.test_mediatypes.AcceptHeaderTests.test_parse_complex_accept_header": ["unittest.TestCase.assertEqual", "<builtin>.set", "flask_api.mediatypes.parse_accept_header"], "flask_api.tests.test_request": ["flask_api.FlaskAPI"], "flask_api.FlaskAPI": [], "flask_api.tests.test_request.MediaTypeParsingTests.test_json_request": ["unittest.TestCase.assertEqual", "io.BytesIO"], "io.BytesIO": [], "flask_api.tests.test_request.MediaTypeParsingTests.test_invalid_content_type_request": ["unittest.TestCase.assertRaises", "io.BytesIO"], "unittest.TestCase.assertRaises": [], "flask_api.tests.test_request.MediaTypeParsingTests.test_no_content_request": ["unittest.TestCase.assertFalse"], "flask_api.tests.test_request.MediaTypeParsingTests.test_encode_request": ["unittest.TestCase.assertEqual"], "flask_api.tests.test_app": ["flask_api.FlaskAPI", "flask_api.decorators.set_renderers"], "flask_api.tests.test_app.InvalidUsage.__init__": [], "flask_api.tests.test_app.InvalidUsage.to_dict": ["<builtin>.dict"], "<builtin>.dict": [], "flask_api.tests.test_app.handle_invalid_usage": ["flask.jsonify"], "flask.jsonify": [], "flask_api.tests.test_app.set_status_and_headers": [], "flask_api.tests.test_app.set_headers": [], "flask_api.tests.test_app.make_response_view": ["flask.make_response"], "flask.make_response": [], "flask_api.tests.test_app.none_204_response": [], "flask_api.tests.test_app.none_200_response": [], "flask_api.tests.test_app.api_exception": ["flask_api.exceptions.PermissionDenied"], "flask_api.exceptions.PermissionDenied": [], "flask_api.tests.test_app.custom_exception": ["flask_api.tests.test_app.InvalidUsage.__init__"], "flask_api.tests.test_app.custom_exception_no_status_code": ["flask_api.tests.test_app.InvalidUsage.__init__"], "flask_api.tests.test_app.abort_view": ["flask.abort"], "flask.abort": [], "flask_api.tests.test_app.options_view": [], "flask_api.decorators.set_renderers": [], "flask_api.tests.test_app.accepted_media_type": ["<builtin>.str"], "flask_api.tests.test_app.AppTests.test_set_status_and_headers": ["unittest.TestCase.assertEqual"], "flask_api.tests.test_app.AppTests.test_set_headers": ["unittest.TestCase.assertEqual"], "flask_api.tests.test_app.AppTests.test_make_response": ["unittest.TestCase.assertEqual"], "flask_api.tests.test_app.AppTests.test_none_204_response": ["unittest.TestCase.assertEqual"], "flask_api.tests.test_app.AppTests.test_none_200_response": ["unittest.TestCase.assertRaises"], "flask_api.tests.test_app.AppTests.test_api_exception": ["unittest.TestCase.assertEqual"], "flask_api.tests.test_app.AppTests.test_custom_exception": ["unittest.TestCase.assertEqual"], "flask_api.tests.test_app.AppTests.test_custom_exception_default_code": ["unittest.TestCase.assertEqual"], "flask_api.tests.test_app.AppTests.test_abort_view": ["unittest.TestCase.assertEqual"], "flask_api.tests.test_app.AppTests.test_options_view": [], "flask_api.tests.test_app.AppTests.test_accepted_media_type_property": ["unittest.TestCase.assertEqual", "json.loads"], "json.loads": [], "flask_api.tests.test_settings": [], "flask_api.tests.test_settings.SettingsTests.test_bad_import": ["flask_api.settings.APISettings", "unittest.TestCase.assertRaises", "unittest.TestCase.assertIn", "<builtin>.str"], "flask_api.settings.APISettings": [], "unittest.TestCase.assertIn": [], "flask_api.tests.test_exceptions": [], "flask_api.tests.test_exceptions.TestExceptions.test_custom_exception": ["unittest.TestCase.assertEqual", "flask_api.exceptions.APIException.__init__", "<builtin>.str"], "flask_api.exceptions.APIException.__init__": [], "flask_api.tests.test_exceptions.TestExceptions.test_override_exception_detail": ["unittest.TestCase.assertEqual", "flask_api.exceptions.APIException.__init__", "<builtin>.str"], "flask_api.tests.test_status": [], "flask_api.tests.test_status.TestStatus.test_status_categories": ["flask_api.status.is_success", "flask_api.status.is_informational", "unittest.TestCase.assertTrue", "flask_api.status.is_client_error", "flask_api.status.is_redirect", "unittest.TestCase.assertFalse", "flask_api.status.is_server_error"], "flask_api.status.is_informational": [], "flask_api.status.is_success": [], "flask_api.status.is_redirect": [], "flask_api.status.is_client_error": [], "flask_api.status.is_server_error": [], "flask_api.tests.test_renderers": [], "flask_api.tests.test_renderers.RendererTests._make_app": ["flask_api.FlaskAPI"], "flask_api.tests.test_renderers.RendererTests._make_app.love": [], "flask_api.tests.test_renderers.RendererTests.test_render_json": ["flask_api.mediatypes.MediaType", "flask_api.tests.test_renderers.RendererTests._make_app", "flask_api.renderers.JSONRenderer", "unittest.TestCase.assertEqual"], "flask_api.renderers.JSONRenderer": [], "flask_api.tests.test_renderers.RendererTests.test_render_json_with_indent": ["flask_api.mediatypes.MediaType", "flask_api.tests.test_renderers.RendererTests._make_app", "flask_api.renderers.JSONRenderer", "unittest.TestCase.assertEqual"], "flask_api.tests.test_renderers.RendererTests.test_render_json_with_custom_encoder": ["unittest.TestCase.assertEqual", "flask_api.mediatypes.MediaType", "flask_api.renderers.JSONRenderer", "datetime.datetime", "flask_api.tests.test_renderers.RendererTests._make_app"], "flask_api.tests.test_renderers.RendererTests.test_render_json_with_custom_encoder.CustomJsonEncoder.default": ["<builtin>.super", "<builtin>.isinstance"], "<builtin>.isinstance": [], "<builtin>.super": [], "datetime.datetime": [], "flask_api.tests.test_renderers.RendererTests.test_render_browsable_encoding": ["flask_api.FlaskAPI", "unittest.TestCase.assertTrue", "<builtin>.str"], "flask_api.tests.test_renderers.RendererTests.test_render_browsable_encoding.love": [], "pytest.mark.skip": [], "flask_api.tests.test_renderers.RendererTests": ["pytest.mark.skip"], "flask_api.tests.test_renderers.RendererTests.test_render_browsable_encoding_with_markdown": ["<builtin>.print", "flask_api.FlaskAPI", "unittest.TestCase.assertTrue", "<builtin>.str"], "flask_api.tests.test_renderers.RendererTests.test_render_browsable_encoding_with_markdown.foo": [], "<builtin>.print": [], "flask_api.tests.test_renderers.RendererTests.test_render_browsable_linking": ["flask_api.FlaskAPI", "unittest.TestCase.assertTrue", "<builtin>.str"], "flask_api.tests.test_renderers.RendererTests.test_render_browsable_linking.happiness": [], "flask_api.tests.test_renderers.RendererTests.test_renderer_negotiation_not_implemented": ["flask_api.renderers.BaseRenderer", "unittest.TestCase.assertRaises", "<builtin>.str", "unittest.TestCase.assertEqual"], "flask_api.renderers.BaseRenderer": [], "flask_api.tests.test_renderers.OverrideParserSettings.setUp": ["flask_api.FlaskAPI", "flask_api.decorators.set_renderers"], "flask_api.tests.test_renderers.OverrideParserSettings.setUp.CustomRenderer1.render": [], "flask_api.tests.test_renderers.OverrideParserSettings.setUp.CustomRenderer2.render": [], "flask_api.tests.test_renderers.OverrideParserSettings.setUp.custom_renderer_1": [], "flask_api.tests.test_renderers.OverrideParserSettings.setUp.custom_renderer_2": [], "flask_api.tests.test_renderers.OverrideParserSettings.setUp.custom_renderer_2_as_args": [], "flask_api.tests.test_renderers.OverrideParserSettings.test_overridden_parsers_with_settings": ["unittest.TestCase.assertEqual"], "flask_api.tests.test_renderers.OverrideParserSettings.test_overridden_parsers_with_decorator": ["unittest.TestCase.assertEqual"], "flask_api.tests.test_renderers.OverrideParserSettings.test_overridden_parsers_with_decorator_as_args": ["unittest.TestCase.assertEqual"], "flask_api.tests": ["os.path.dirname", "<builtin>.exec", "os.listdir"], "os.path.dirname": [], "os.listdir": [], "<builtin>.exec": [], "flask_api.tests.test_negotiation": ["flask_api.FlaskAPI"], "flask_api.tests.test_negotiation.TestRendererNegotiation.test_select_renderer_client_preference": ["unittest.TestCase.assertEqual", "<builtin>.str", "flask_api.negotiation.DefaultNegotiation"], "flask_api.negotiation.DefaultNegotiation": [], "flask_api.tests.test_negotiation.TestRendererNegotiation.test_select_renderer_no_accept_header": ["unittest.TestCase.assertEqual", "<builtin>.str", "flask_api.negotiation.DefaultNegotiation"], "flask_api.tests.test_negotiation.TestRendererNegotiation.test_select_renderer_server_preference": ["unittest.TestCase.assertEqual", "<builtin>.str", "flask_api.negotiation.DefaultNegotiation"], "flask_api.tests.test_negotiation.TestRendererNegotiation.test_select_renderer_failed": ["unittest.TestCase.assertRaises", "flask_api.negotiation.DefaultNegotiation"], "flask_api.tests.test_negotiation.TestRendererNegotiation.test_renderer_negotiation_not_implemented": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "<builtin>.str", "flask_api.negotiation.BaseNegotiation"], "flask_api.negotiation.BaseNegotiation": [], "flask_api.tests.test_negotiation.TestParserNegotiation.test_select_parser": ["unittest.TestCase.assertEqual", "<builtin>.str", "flask_api.negotiation.DefaultNegotiation"], "flask_api.tests.test_negotiation.TestParserNegotiation.test_select_parser_failed": ["unittest.TestCase.assertRaises", "flask_api.negotiation.DefaultNegotiation"], "flask_api.tests.test_negotiation.TestParserNegotiation.test_parser_negotiation_not_implemented": ["unittest.TestCase.assertEqual", "unittest.TestCase.assertRaises", "<builtin>.str", "flask_api.negotiation.BaseNegotiation"], "flask_api.tests.test_parsers": ["flask_api.FlaskAPI"], "flask_api.tests.test_parsers.data": ["<builtin>.dict", "flask.request.files.items"], "flask.request.files.items": [], "flask_api.tests.test_parsers.ParserTests.test_valid_json": ["unittest.TestCase.assertEqual", "flask_api.parsers.JSONParser", "io.BytesIO"], "flask_api.parsers.JSONParser": [], "flask_api.tests.test_parsers.ParserTests.test_invalid_json": ["io.BytesIO", "unittest.TestCase.assertRaises", "<builtin>.str", "unittest.TestCase.assertIn", "flask_api.mediatypes.MediaType", "flask_api.parsers.JSONParser"], "flask_api.tests.test_parsers.ParserTests.test_invalid_multipart": ["flask_api.parsers.MultiPartParser", "<builtin>.len", "io.BytesIO", "unittest.TestCase.assertRaises", "<builtin>.str", "unittest.TestCase.assertIn", "flask_api.mediatypes.MediaType"], "flask_api.parsers.MultiPartParser": [], "<builtin>.len": [], "flask_api.tests.test_parsers.ParserTests.test_invalid_multipart_no_boundary": ["flask_api.parsers.MultiPartParser", "io.BytesIO", "unittest.TestCase.assertRaises", "unittest.TestCase.assertEqual", "<builtin>.str", "flask_api.mediatypes.MediaType"], "flask_api.tests.test_parsers.ParserTests.test_renderer_negotiation_not_implemented": ["flask_api.parsers.BaseParser", "unittest.TestCase.assertRaises", "<builtin>.str", "unittest.TestCase.assertEqual"], "flask_api.parsers.BaseParser": [], "flask_api.tests.test_parsers.ParserTests.test_accessing_json": ["unittest.TestCase.assertEqual", "json.loads", "json.dumps"], "json.dumps": [], "flask_api.tests.test_parsers.ParserTests.test_accessing_url_encoded": ["unittest.TestCase.assertEqual", "json.loads"], "flask_api.tests.test_parsers.ParserTests.test_accessing_multipart": ["unittest.TestCase.assertEqual", "io.BytesIO", "json.loads"], "flask_api.tests.test_parsers.OverrideParserSettings.setUp": ["flask_api.FlaskAPI", "flask_api.decorators.set_parsers"], "flask_api.tests.test_parsers.OverrideParserSettings.setUp.CustomParser1.parse": [], "flask_api.tests.test_parsers.OverrideParserSettings.setUp.CustomParser2.parse": [], "flask_api.tests.test_parsers.OverrideParserSettings.setUp.custom_parser_1": [], "flask_api.decorators.set_parsers": [], "flask_api.tests.test_parsers.OverrideParserSettings.setUp.custom_parser_2": [], "flask_api.tests.test_parsers.OverrideParserSettings.setUp.custom_parser_2_as_args": [], "flask_api.tests.test_parsers.OverrideParserSettings.test_overridden_parsers_with_settings": ["unittest.TestCase.assertEqual", "json.loads"], "flask_api.tests.test_parsers.OverrideParserSettings.test_overridden_parsers_with_decorator": ["unittest.TestCase.assertEqual", "json.loads"], "flask_api.tests.test_parsers.OverrideParserSettings.test_overridden_parsers_with_decorator_as_args": ["unittest.TestCase.assertEqual", "json.loads"]}
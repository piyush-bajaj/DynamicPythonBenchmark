{"tests.test_utils": ["collections.namedtuple", "pytest.mark.parametrize"], "tests.test_utils.test_missing_singleton_copy": ["copy.deepcopy", "copy.copy"], "copy.copy": [], "copy.deepcopy": [], "collections.namedtuple": [], "tests.test_utils.PointClass.__init__": [], "tests.test_utils.PointDict.__init__": ["<builtin>.super"], "<builtin>.super": [], "pytest.mark.parametrize": [], "tests.test_utils.test_get_value_from_object": ["marshmallow.utils.get_value"], "marshmallow.utils.get_value": [], "tests.test_utils.test_get_value_from_namedtuple_with_default": ["marshmallow.utils.get_value"], "tests.test_utils.Triangle.__init__": [], "tests.test_utils.test_get_value_for_nested_object": ["marshmallow.utils.get_value", "tests.test_utils.PointClass.__init__", "tests.test_utils.Triangle.__init__"], "tests.test_utils.test_get_value_from_dict": ["marshmallow.utils.get_value", "<builtin>.dict"], "<builtin>.dict": [], "tests.test_utils.test_get_value": ["marshmallow.utils.get_value"], "tests.test_utils.test_set_value": ["marshmallow.utils.set_value", "pytest.raises"], "marshmallow.utils.set_value": [], "pytest.raises": [], "tests.test_utils.test_is_keyed_tuple": ["marshmallow.utils.is_keyed_tuple", "collections.namedtuple"], "marshmallow.utils.is_keyed_tuple": [], "tests.test_utils.test_is_collection": ["marshmallow.utils.is_collection"], "marshmallow.utils.is_collection": [], "tests.test_utils.test_rfc_format": ["marshmallow.utils.rfcformat"], "marshmallow.utils.rfcformat": [], "tests.test_utils.test_isoformat": ["marshmallow.utils.isoformat"], "marshmallow.utils.isoformat": [], "tests.test_utils.test_from_rfc": ["<builtin>.type", "marshmallow.utils.from_rfc"], "marshmallow.utils.from_rfc": [], "<builtin>.type": [], "tests.test_utils.test_from_iso_datetime": ["<builtin>.type", "marshmallow.utils.from_iso_datetime"], "marshmallow.utils.from_iso_datetime": [], "tests.test_utils.test_from_iso_time_with_microseconds": ["<builtin>.type", "tests.base.assert_time_equal", "marshmallow.utils.from_iso_time", "datetime.time"], "datetime.time": [], "marshmallow.utils.from_iso_time": [], "tests.base.assert_time_equal": [], "tests.test_utils.test_from_iso_time_without_microseconds": ["<builtin>.type", "tests.base.assert_time_equal", "marshmallow.utils.from_iso_time", "datetime.time"], "tests.test_utils.test_from_iso_date": ["<builtin>.type", "tests.base.assert_date_equal", "marshmallow.utils.from_iso_date", "datetime.date"], "datetime.date": [], "marshmallow.utils.from_iso_date": [], "tests.base.assert_date_equal": [], "tests.test_utils.test_get_func_args": ["marshmallow.utils.get_func_args", "functools.partial"], "tests.test_utils.test_get_func_args.f1": [], "functools.partial": [], "tests.test_utils.test_get_func_args.F3.__call__": [], "marshmallow.utils.get_func_args": [], "tests.test_utils.test_function_field_using_type_annotation": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_utils.test_function_field_using_type_annotation.get_split_words": [], "marshmallow.fields.Function": [], "tests.test_utils.test_function_field_using_type_annotation.MySchema": ["marshmallow.fields.Function"], "marshmallow.Schema.__init__": [], "marshmallow.Schema.load": [], "tests.test_error_store": ["collections.namedtuple"], "tests.test_error_store.test_missing_is_falsy": ["<builtin>.bool"], "<builtin>.bool": [], "tests.test_error_store.TestMergeErrors.test_merging_none_and_string": ["marshmallow.error_store.merge_errors"], "marshmallow.error_store.merge_errors": [], "tests.test_error_store.TestMergeErrors.test_merging_none_and_custom_error": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_none_and_list": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_none_and_dict": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_string_and_none": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_custom_error_and_none": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_list_and_none": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_dict_and_none": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_string_and_string": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_custom_error_and_string": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_string_and_custom_error": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_custom_error_and_custom_error": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_string_and_list": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_string_and_dict": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_string_and_dict_with_schema_error": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_custom_error_and_list": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_custom_error_and_dict": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_custom_error_and_dict_with_schema_error": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_list_and_string": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_list_and_custom_error": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_list_and_list": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_list_and_dict": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_list_and_dict_with_schema_error": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_dict_and_string": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_dict_and_custom_error": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_dict_and_list": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_merging_dict_and_dict": ["marshmallow.error_store.merge_errors"], "tests.test_error_store.TestMergeErrors.test_deep_merging_dicts": ["marshmallow.error_store.merge_errors"], "tests.base": ["functools.partial", "pytz.timezone"], "pytz.timezone": [], "tests.base.DateEnum": ["datetime.date"], "tests.base.User.__init__": ["<builtin>.list", "datetime.datetime", "datetime.time", "datetime.date", "uuid.uuid1", "tests.base.central.localize"], "datetime.datetime": [], "tests.base.central.localize": [], "<builtin>.list": [], "uuid.uuid1": [], "tests.base.User.since_created": ["datetime.datetime"], "tests.base.User.__repr__": [], "tests.base.Blog.__init__": [], "tests.base.Blog.__contains__": [], "tests.base.DummyModel.__init__": [], "tests.base.DummyModel.__eq__": [], "tests.base.DummyModel.__str__": [], "tests.base.Uppercased._serialize": [], "tests.base.get_lowername": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "marshmallow.fields.String": [], "tests.base.UserSchema": ["marshmallow.fields.Method", "<builtin>.list", "marshmallow.fields.Time", "marshmallow.fields.Email", "marshmallow.validate.OneOf", "marshmallow.fields.String", "marshmallow.fields.Boolean", "marshmallow.fields.Date", "marshmallow.fields.Integer", "marshmallow.fields.TimeDelta", "marshmallow.fields.DateTime", "marshmallow.fields.Str", "marshmallow.fields.UUID", "marshmallow.fields.Dict", "marshmallow.fields.List", "marshmallow.fields.Decimal", "marshmallow.fields.Url", "marshmallow.post_load", "marshmallow.fields.Float", "marshmallow.fields.Field.__init__", "marshmallow.fields.Function"], "marshmallow.fields.Float": [], "marshmallow.fields.DateTime": [], "marshmallow.fields.Field.__init__": [], "marshmallow.fields.Url": [], "marshmallow.fields.Email": [], "marshmallow.fields.Decimal": [], "marshmallow.fields.Method": [], "marshmallow.fields.Boolean": [], "marshmallow.fields.List": [], "marshmallow.fields.Integer": [], "marshmallow.fields.UUID": [], "marshmallow.fields.Time": [], "marshmallow.fields.Date": [], "marshmallow.fields.TimeDelta": [], "marshmallow.validate.OneOf": [], "marshmallow.fields.Str": [], "marshmallow.fields.Dict": [], "tests.base.UserSchema.get_is_old": ["<builtin>.isinstance", "marshmallow.exceptions.ValidationError", "<builtin>.str"], "<builtin>.str": [], "marshmallow.exceptions.ValidationError": [], "marshmallow.post_load": [], "tests.base.UserSchema.make_user": ["tests.base.User.__init__"], "tests.base.UserMetaSchema": ["marshmallow.fields.String", "marshmallow.fields.Method", "marshmallow.fields.Dict", "marshmallow.fields.Email", "marshmallow.fields.Field.__init__", "marshmallow.fields.Decimal", "marshmallow.fields.Function", "marshmallow.fields.Url"], "tests.base.UserMetaSchema.get_is_old": ["<builtin>.isinstance", "marshmallow.exceptions.ValidationError", "<builtin>.str"], "tests.base.UserAdditionalSchema.<lambda1>": [], "tests.base.UserAdditionalSchema": ["marshmallow.fields.Function"], "tests.base.UserIntSchema": ["marshmallow.fields.Integer"], "tests.base.UserFloatStringSchema": ["marshmallow.fields.Float"], "tests.base.ExtendedUserSchema": ["marshmallow.fields.Boolean"], "tests.base.UserRelativeUrlSchema": ["marshmallow.fields.Url"], "tests.base.BlogSchema": ["marshmallow.fields.String", "marshmallow.fields.List", "marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "marshmallow.fields.Nested": [], "tests.base.BlogUserMetaSchema": ["marshmallow.fields.List", "marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.base.BlogSchemaMeta": ["marshmallow.fields.List", "marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.base.BlogOnlySchema": ["marshmallow.fields.String", "marshmallow.fields.List", "marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.base.BlogSchemaExclude": ["marshmallow.fields.Nested"], "tests.base.BlogSchemaOnlyExclude": ["marshmallow.fields.Nested"], "tests.base.mockjson.dumps": [], "tests.base.mockjson.loads": [], "tests.test_serialization": [], "tests.test_serialization.DateTimeList.__init__": [], "tests.test_serialization.IntegerList.__init__": [], "tests.test_serialization.DateTimeIntegerTuple.__init__": [], "tests.test_serialization.TestFieldSerialization": ["pytest.fixture", "pytest.mark.parametrize"], "pytest.fixture": [], "tests.test_serialization.TestFieldSerialization.user": ["tests.base.User.__init__"], "tests.test_serialization.TestFieldSerialization.test_number": ["marshmallow.fields.Number"], "marshmallow.fields.Number": [], "tests.test_serialization.TestFieldSerialization.test_number_as_string": ["marshmallow.fields.Number", "<builtin>.float", "<builtin>.str"], "<builtin>.float": [], "tests.test_serialization.TestFieldSerialization.test_number_as_string_passed_none": ["marshmallow.fields.Number"], "tests.test_serialization.TestFieldSerialization.test_function_field_passed_func": ["marshmallow.fields.Function"], "tests.test_serialization.TestFieldSerialization.test_function_field_passed_func.<lambda1>": [], "tests.test_serialization.TestFieldSerialization.test_function_field_passed_serialize_only_is_dump_only": ["marshmallow.fields.Function"], "tests.test_serialization.TestFieldSerialization.test_function_field_passed_serialize_only_is_dump_only.<lambda1>": [], "tests.test_serialization.TestFieldSerialization.test_function_field_passed_deserialize_and_serialize_is_not_dump_only": ["marshmallow.fields.Function"], "tests.test_serialization.TestFieldSerialization.test_function_field_passed_deserialize_and_serialize_is_not_dump_only.<lambda1>": [], "tests.test_serialization.TestFieldSerialization.test_function_field_passed_deserialize_and_serialize_is_not_dump_only.<lambda2>": [], "tests.test_serialization.TestFieldSerialization.test_function_field_passed_serialize": ["marshmallow.fields.Function"], "tests.test_serialization.TestFieldSerialization.test_function_field_passed_serialize.<lambda1>": [], "tests.test_serialization.TestFieldSerialization.test_function_field_does_not_swallow_attribute_error": ["pytest.raises", "marshmallow.fields.Function"], "tests.test_serialization.TestFieldSerialization.test_function_field_does_not_swallow_attribute_error.raise_error": ["<builtin>.AttributeError"], "<builtin>.AttributeError": [], "tests.test_serialization.TestFieldSerialization.test_serialize_with_load_only_param": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_serialization.TestFieldSerialization.test_serialize_with_load_only_param.AliasingUserSerializer": ["marshmallow.fields.String", "marshmallow.fields.Str", "marshmallow.fields.List", "marshmallow.fields.Integer"], "marshmallow.Schema.dump": [], "tests.test_serialization.TestFieldSerialization.test_function_field_load_only": ["marshmallow.fields.Function"], "tests.test_serialization.TestFieldSerialization.test_function_field_load_only.<lambda1>": [], "tests.test_serialization.TestFieldSerialization.test_function_field_passed_serialize_with_context": ["marshmallow.fields.Function", "marshmallow.Schema.__init__"], "tests.test_serialization.TestFieldSerialization.test_function_field_passed_serialize_with_context.<lambda1>": [], "tests.test_serialization.TestFieldSerialization.test_function_field_passed_uncallable_object": ["pytest.raises", "marshmallow.fields.Function"], "tests.test_serialization.TestFieldSerialization.test_integer_field": ["marshmallow.fields.Integer"], "tests.test_serialization.TestFieldSerialization.test_integer_as_string_field": ["marshmallow.fields.Integer"], "tests.test_serialization.TestFieldSerialization.test_integer_field_default": ["marshmallow.fields.Integer"], "tests.test_serialization.TestFieldSerialization.test_integer_field_default_set_to_none": ["marshmallow.fields.Integer"], "tests.test_serialization.TestFieldSerialization.test_uuid_field": ["marshmallow.fields.UUID", "<builtin>.isinstance", "uuid.UUID"], "uuid.UUID": [], "tests.test_serialization.TestFieldSerialization.test_ip_address_field": ["<builtin>.isinstance", "marshmallow.fields.IP", "ipaddress.ip_address"], "ipaddress.ip_address": [], "marshmallow.fields.IP": [], "tests.test_serialization.TestFieldSerialization.test_ipv4_address_field": ["<builtin>.isinstance", "ipaddress.ip_address", "marshmallow.fields.IPv4"], "marshmallow.fields.IPv4": [], "tests.test_serialization.TestFieldSerialization.test_ipv6_address_field": ["<builtin>.isinstance", "ipaddress.ip_address", "marshmallow.fields.IPv6"], "marshmallow.fields.IPv6": [], "tests.test_serialization.TestFieldSerialization.test_ip_interface_field": ["ipaddress.ip_interface", "<builtin>.isinstance", "marshmallow.fields.IPInterface"], "ipaddress.ip_interface": [], "marshmallow.fields.IPInterface": [], "tests.test_serialization.TestFieldSerialization.test_ipv4_interface_field": ["ipaddress.ip_interface", "<builtin>.isinstance", "marshmallow.fields.IPv4Interface"], "marshmallow.fields.IPv4Interface": [], "tests.test_serialization.TestFieldSerialization.test_ipv6_interface_field": ["ipaddress.ip_interface", "<builtin>.isinstance", "marshmallow.fields.IPv6Interface"], "marshmallow.fields.IPv6Interface": [], "tests.test_serialization.TestFieldSerialization.test_enum_field_by_symbol_serialization": ["marshmallow.fields.Enum"], "marshmallow.fields.Enum": [], "tests.test_serialization.TestFieldSerialization.test_enum_field_by_value_true_serialization": ["marshmallow.fields.Enum"], "tests.test_serialization.TestFieldSerialization.test_enum_field_by_value_field_serialization": ["marshmallow.fields.Date", "marshmallow.fields.Enum"], "tests.test_serialization.TestFieldSerialization.test_decimal_field": ["marshmallow.fields.Decimal", "decimal.Decimal", "<builtin>.isinstance"], "decimal.Decimal": [], "tests.test_serialization.TestFieldSerialization.test_decimal_field_string": ["marshmallow.fields.Decimal", "decimal.Decimal", "<builtin>.isinstance"], "tests.test_serialization.TestFieldSerialization.test_decimal_field_special_values": ["marshmallow.fields.Decimal", "<builtin>.isinstance"], "tests.test_serialization.TestFieldSerialization.test_decimal_field_special_values_not_permitted": ["marshmallow.fields.Decimal", "<builtin>.isinstance"], "tests.test_serialization.TestFieldSerialization.test_decimal_field_fixed_point_representation": ["marshmallow.fields.Decimal", "<builtin>.isinstance", "decimal.Decimal"], "tests.test_serialization.TestFieldSerialization.test_boolean_field_serialization": ["marshmallow.fields.Boolean"], "tests.test_serialization.TestFieldSerialization.test_email_field_serialize_none": ["marshmallow.fields.Email"], "tests.test_serialization.TestFieldSerialization.test_dict_field_serialize_none": ["marshmallow.fields.Dict"], "tests.test_serialization.TestFieldSerialization.test_dict_field_serialize": ["marshmallow.fields.Dict"], "tests.test_serialization.TestFieldSerialization.test_dict_field_serialize_ordereddict": ["collections.OrderedDict", "marshmallow.fields.Dict"], "collections.OrderedDict": [], "tests.test_serialization.TestFieldSerialization.test_structured_dict_value_serialize": ["decimal.Decimal", "marshmallow.fields.Dict"], "tests.test_serialization.TestFieldSerialization.test_structured_dict_key_serialize": ["marshmallow.fields.Dict"], "tests.test_serialization.TestFieldSerialization.test_structured_dict_key_value_serialize": ["decimal.Decimal", "marshmallow.fields.Dict"], "tests.test_serialization.TestFieldSerialization.test_url_field_serialize_none": ["marshmallow.fields.Url"], "tests.test_serialization.TestFieldSerialization.test_method_field_with_method_missing": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_serialization.TestFieldSerialization.test_method_field_with_method_missing.BadSerializer": ["marshmallow.fields.Method"], "tests.test_serialization.TestFieldSerialization.test_method_field_passed_serialize_only_is_dump_only": ["marshmallow.fields.Method"], "tests.test_serialization.TestFieldSerialization.test_method_field_passed_deserialize_only_is_load_only": ["marshmallow.fields.Method"], "tests.test_serialization.TestFieldSerialization.test_method_field_with_uncallable_attribute": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_serialization.TestFieldSerialization.test_method_field_with_uncallable_attribute.BadSerializer": ["marshmallow.fields.Method"], "tests.test_serialization.TestFieldSerialization.test_method_field_does_not_swallow_attribute_error": ["pytest.raises", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_serialization.TestFieldSerialization.test_method_field_does_not_swallow_attribute_error.MySchema": ["marshmallow.fields.Method"], "tests.test_serialization.TestFieldSerialization.test_method_field_does_not_swallow_attribute_error.MySchema.raise_error": ["<builtin>.AttributeError"], "tests.test_serialization.TestFieldSerialization.test_method_with_no_serialize_is_missing": ["marshmallow.fields.Method", "marshmallow.Schema"], "marshmallow.Schema": [], "tests.test_serialization.TestFieldSerialization.test_serialize_with_data_key_param": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_serialization.TestFieldSerialization.test_serialize_with_data_key_param.DumpToSchema": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_serialization.TestFieldSerialization.test_serialize_with_data_key_as_empty_string": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "marshmallow.fields.Field": [], "tests.test_serialization.TestFieldSerialization.test_serialize_with_data_key_as_empty_string.MySchema": ["marshmallow.fields.Field"], "tests.test_serialization.TestFieldSerialization.test_serialize_with_attribute_and_data_key_uses_data_key": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_serialization.TestFieldSerialization.test_serialize_with_attribute_and_data_key_uses_data_key.ConfusedDumpToAndAttributeSerializer": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_serialization.TestFieldSerialization.test_datetime_field_rfc822": ["marshmallow.fields.DateTime"], "tests.test_serialization.TestFieldSerialization.test_datetime_field_timestamp": ["marshmallow.fields.DateTime"], "tests.test_serialization.TestFieldSerialization.test_datetime_field_iso8601": ["marshmallow.fields.DateTime"], "tests.test_serialization.TestFieldSerialization.test_datetime_field_format": ["marshmallow.fields.DateTime"], "tests.test_serialization.TestFieldSerialization.test_string_field": ["marshmallow.fields.String", "tests.base.User.__init__"], "tests.test_serialization.TestFieldSerialization.test_string_field_default_to_empty_string": ["marshmallow.fields.String"], "tests.test_serialization.TestFieldSerialization.test_time_field": ["marshmallow.fields.Time"], "tests.test_serialization.TestFieldSerialization.test_time_field_iso8601": ["marshmallow.fields.Time"], "tests.test_serialization.TestFieldSerialization.test_time_field_format": ["marshmallow.fields.Time"], "tests.test_serialization.TestFieldSerialization.test_date_field": ["marshmallow.fields.Date"], "tests.test_serialization.TestFieldSerialization.test_timedelta_field": ["pytest.raises", "math.isclose", "datetime.timedelta", "marshmallow.fields.TimeDelta"], "datetime.timedelta": [], "math.isclose": [], "tests.test_serialization.TestFieldSerialization.test_datetime_list_field": ["<builtin>.type", "<builtin>.all", "marshmallow.fields.List", "datetime.datetime.now", "tests.test_serialization.DateTimeList.__init__", "datetime.datetime.utcnow"], "datetime.datetime.utcnow": [], "datetime.datetime.now": [], "<builtin>.all": [], "tests.test_serialization.TestFieldSerialization.test_list_field_serialize_none_returns_none": ["marshmallow.fields.List", "tests.test_serialization.DateTimeList.__init__"], "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_generator_single_value": ["<builtin>.len", "marshmallow.fields.List", "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_generator_single_value.custom_generator", "tests.test_serialization.DateTimeList.__init__"], "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_generator_single_value.custom_generator": ["datetime.datetime.utcnow"], "<builtin>.len": [], "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_generators_multiple_values": ["<builtin>.len", "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_generators_multiple_values.custom_generator", "marshmallow.fields.List", "tests.test_serialization.DateTimeList.__init__"], "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_generators_multiple_values.custom_generator": ["datetime.datetime.now", "datetime.datetime.utcnow"], "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_generators_empty_generator_returns_none_for_every_non_returning_yield_statement": ["<builtin>.len", "marshmallow.fields.List", "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_generators_empty_generator_returns_none_for_every_non_returning_yield_statement.custom_generator", "tests.test_serialization.DateTimeList.__init__"], "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_generators_empty_generator_returns_none_for_every_non_returning_yield_statement.custom_generator": [], "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_set": ["<builtin>.len", "marshmallow.fields.List", "tests.test_serialization.IntegerList.__init__"], "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_custom_class_with_iterator_protocol": ["tests.test_serialization.TestFieldSerialization.test_list_field_work_with_custom_class_with_iterator_protocol.IteratorSupportingClass.__init__", "marshmallow.fields.List", "<builtin>.len", "tests.test_serialization.IntegerList.__init__"], "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_custom_class_with_iterator_protocol.IteratorSupportingClass.__init__": [], "tests.test_serialization.TestFieldSerialization.test_list_field_work_with_custom_class_with_iterator_protocol.IteratorSupportingClass.__iter__": ["<builtin>.iter"], "<builtin>.iter": [], "tests.test_serialization.TestFieldSerialization.test_bad_list_field": ["marshmallow.fields.List", "pytest.raises"], "marshmallow.fields.Int": [], "tests.test_serialization.TestFieldSerialization.test_bad_list_field.ASchema": ["marshmallow.fields.Int"], "tests.test_serialization.TestFieldSerialization.test_datetime_integer_tuple_field": ["<builtin>.type", "marshmallow.fields.Tuple", "tests.test_serialization.DateTimeIntegerTuple.__init__", "datetime.datetime.utcnow"], "marshmallow.fields.Tuple": [], "tests.test_serialization.TestFieldSerialization.test_tuple_field_serialize_none_returns_none": ["marshmallow.fields.Tuple", "tests.test_serialization.DateTimeIntegerTuple.__init__"], "tests.test_serialization.TestFieldSerialization.test_bad_tuple_field": ["pytest.raises", "marshmallow.fields.Tuple"], "tests.test_serialization.TestFieldSerialization.test_bad_tuple_field.ASchema": ["marshmallow.fields.Int"], "tests.test_serialization.TestFieldSerialization.test_serialize_does_not_apply_validators": ["marshmallow.fields.Field"], "tests.test_serialization.TestFieldSerialization.test_serialize_does_not_apply_validators.<lambda1>": [], "tests.test_serialization.TestFieldSerialization.test_constant_field_serialization": ["marshmallow.fields.Constant"], "marshmallow.fields.Constant": [], "tests.test_serialization.TestFieldSerialization.test_constant_is_always_included_in_serialized_data": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_serialization.TestFieldSerialization.test_constant_is_always_included_in_serialized_data.MySchema": ["marshmallow.fields.Constant"], "tests.test_serialization.TestFieldSerialization.test_constant_field_serialize_when_omitted": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_serialization.TestFieldSerialization.test_constant_field_serialize_when_omitted.MiniUserSchema": ["marshmallow.fields.Constant"], "tests.test_serialization.TestFieldSerialization.test_all_fields_serialize_none_to_none": [], "tests.test_serialization.TestSchemaSerialization.test_serialize_with_missing_param_value": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_serialization.TestSchemaSerialization.test_serialize_with_missing_param_value.AliasingUserSerializer": ["marshmallow.fields.String", "marshmallow.fields.DateTime", "datetime.datetime"], "tests.test_serialization.TestSchemaSerialization.test_serialize_with_missing_param_callable": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_serialization.TestSchemaSerialization.test_serialize_with_missing_param_callable.AliasingUserSerializer": ["marshmallow.fields.String", "marshmallow.fields.DateTime"], "tests.test_serialization.TestSchemaSerialization.test_serialize_with_missing_param_callable.AliasingUserSerializer.<lambda1>": ["datetime.datetime"], "tests.test_serialization.test_serializing_named_tuple": ["marshmallow.fields.Field", "collections.namedtuple"], "tests.test_serialization.test_serializing_named_tuple_with_meta": ["collections.namedtuple", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_serialization.test_serializing_slice": ["<builtin>.range", "marshmallow.Schema.__init__", "itertools.islice", "marshmallow.Schema.dump"], "<builtin>.range": [], "itertools.islice": [], "tests.test_serialization.test_serializing_slice.ValueSchema": ["marshmallow.fields.Int"], "tests.test_serialization.test_nested_field_many_serializing_generator": ["marshmallow.Schema.__init__", "tests.test_serialization.test_nested_field_many_serializing_generator.gen", "marshmallow.Schema.dump"], "tests.test_serialization.test_nested_field_many_serializing_generator.MySchema": ["marshmallow.fields.Str"], "tests.test_serialization.test_nested_field_many_serializing_generator.OtherSchema": ["marshmallow.fields.Nested"], "tests.test_serialization.test_nested_field_many_serializing_generator.gen": [], "tests.test_validate": ["pytest.mark.parametrize"], "tests.test_validate.test_url_absolute_valid": ["marshmallow.validate.URL"], "marshmallow.validate.URL": [], "tests.test_validate.test_url_absolute_invalid": ["pytest.raises", "marshmallow.validate.URL"], "tests.test_validate.test_url_relative_valid": ["marshmallow.validate.URL"], "tests.test_validate.test_url_relative_invalid": ["pytest.raises", "marshmallow.validate.URL"], "tests.test_validate.test_url_dont_require_tld_valid": ["marshmallow.validate.URL"], "tests.test_validate.test_url_dont_require_tld_invalid": ["pytest.raises", "marshmallow.validate.URL"], "tests.test_validate.test_url_custom_scheme": ["pytest.raises", "marshmallow.validate.URL"], "tests.test_validate.test_url_relative_and_custom_schemes": ["pytest.raises", "marshmallow.validate.URL"], "tests.test_validate.test_url_custom_message": ["pytest.raises", "marshmallow.validate.URL"], "tests.test_validate.test_url_repr": ["<builtin>.repr", "marshmallow.validate.URL"], "<builtin>.repr": [], "tests.test_validate.test_email_valid": ["marshmallow.validate.Email"], "marshmallow.validate.Email": [], "tests.test_validate.test_email_invalid": ["marshmallow.validate.Email", "pytest.raises"], "tests.test_validate.test_email_custom_message": ["marshmallow.validate.Email", "pytest.raises"], "tests.test_validate.test_email_repr": ["<builtin>.repr", "marshmallow.validate.Email"], "tests.test_validate.test_range_min": ["marshmallow.validate.Range", "pytest.raises"], "marshmallow.validate.Range": [], "tests.test_validate.test_range_max": ["marshmallow.validate.Range", "pytest.raises"], "tests.test_validate.test_range_custom_message": ["marshmallow.validate.Range", "pytest.raises"], "tests.test_validate.test_range_repr": ["<builtin>.repr", "marshmallow.validate.Range"], "tests.test_validate.test_length_min": ["pytest.raises", "marshmallow.validate.Length"], "marshmallow.validate.Length": [], "tests.test_validate.test_length_max": ["pytest.raises", "marshmallow.validate.Length"], "tests.test_validate.test_length_equal": ["pytest.raises", "marshmallow.validate.Length"], "tests.test_validate.test_length_custom_message": ["pytest.raises", "marshmallow.validate.Length"], "tests.test_validate.test_length_repr": ["<builtin>.repr", "marshmallow.validate.Length"], "tests.test_validate.test_equal": ["pytest.raises", "marshmallow.validate.Equal"], "marshmallow.validate.Equal": [], "tests.test_validate.test_equal_custom_message": ["pytest.raises", "marshmallow.validate.Equal"], "tests.test_validate.test_equal_repr": ["<builtin>.repr", "marshmallow.validate.Equal"], "tests.test_validate.test_regexp_str": ["marshmallow.validate.Regexp", "pytest.raises"], "marshmallow.validate.Regexp": [], "tests.test_validate.test_regexp_compile": ["marshmallow.validate.Regexp", "pytest.raises", "re.compile"], "re.compile": [], "tests.test_validate.test_regexp_custom_message": ["marshmallow.validate.Regexp", "pytest.raises"], "tests.test_validate.test_regexp_repr": ["marshmallow.validate.Regexp", "re.compile", "<builtin>.repr"], "tests.test_validate.test_predicate": ["pytest.raises", "marshmallow.validate.Predicate"], "tests.test_validate.test_predicate.Dummy._true": [], "tests.test_validate.test_predicate.Dummy._false": [], "tests.test_validate.test_predicate.Dummy._list": [], "tests.test_validate.test_predicate.Dummy._empty": [], "tests.test_validate.test_predicate.Dummy._identity": [], "marshmallow.validate.Predicate": [], "tests.test_validate.test_predicate_custom_message": ["pytest.raises", "marshmallow.validate.Predicate"], "tests.test_validate.test_predicate_custom_message.Dummy._false": [], "tests.test_validate.test_predicate_custom_message.Dummy.__str__": [], "tests.test_validate.test_predicate_repr": ["<builtin>.repr", "marshmallow.validate.Predicate"], "tests.test_validate.test_noneof": ["marshmallow.validate.NoneOf", "pytest.raises"], "marshmallow.validate.NoneOf": [], "tests.test_validate.test_noneof_custom_message": ["marshmallow.validate.NoneOf", "pytest.raises"], "tests.test_validate.test_noneof_repr": ["marshmallow.validate.NoneOf", "<builtin>.repr"], "tests.test_validate.test_oneof": ["pytest.raises", "marshmallow.validate.OneOf", "<builtin>.dict"], "tests.test_validate.test_oneof_options": ["marshmallow.validate.OneOf", "<builtin>.list"], "tests.test_validate.test_oneof_text": ["<builtin>.sorted", "marshmallow.validate.OneOf", "<builtin>.dict"], "<builtin>.sorted": [], "tests.test_validate.test_oneof_custom_message": ["pytest.raises", "marshmallow.validate.OneOf", "<builtin>.str"], "tests.test_validate.test_oneof_repr": ["<builtin>.repr", "marshmallow.validate.OneOf"], "tests.test_validate.test_containsonly_in_list": ["pytest.raises", "marshmallow.validate.ContainsOnly"], "marshmallow.validate.ContainsOnly": [], "tests.test_validate.test_contains_only_unhashable_types": ["pytest.raises", "marshmallow.validate.ContainsOnly"], "tests.test_validate.test_containsonly_in_tuple": ["<builtin>.tuple", "marshmallow.validate.ContainsOnly", "pytest.raises"], "<builtin>.tuple": [], "tests.test_validate.test_contains_only_in_string": ["pytest.raises", "marshmallow.validate.ContainsOnly"], "tests.test_validate.test_containsonly_custom_message": ["pytest.raises", "marshmallow.validate.ContainsOnly", "<builtin>.str"], "tests.test_validate.test_containsonly_repr": ["<builtin>.repr", "marshmallow.validate.ContainsOnly"], "tests.test_validate.test_containsnoneof_error_message": ["marshmallow.validate.ContainsNoneOf", "pytest.raises"], "marshmallow.validate.ContainsNoneOf": [], "tests.test_validate.test_containsnoneof_in_list": ["marshmallow.validate.ContainsNoneOf", "pytest.raises"], "tests.test_validate.test_containsnoneof_unhashable_types": ["marshmallow.validate.ContainsNoneOf", "pytest.raises"], "tests.test_validate.test_containsnoneof_in_tuple": ["marshmallow.validate.ContainsNoneOf", "pytest.raises"], "tests.test_validate.test_containsnoneof_in_string": ["marshmallow.validate.ContainsNoneOf", "pytest.raises"], "tests.test_validate.test_containsnoneof_custom_message": ["marshmallow.validate.ContainsNoneOf", "pytest.raises"], "tests.test_validate.test_containsnoneof_mixing_types": ["marshmallow.validate.ContainsNoneOf", "pytest.raises"], "tests.test_validate.is_even": ["marshmallow.ValidationError"], "marshmallow.ValidationError": [], "tests.test_validate.test_and": ["marshmallow.validate.And", "marshmallow.validate.Range", "pytest.raises"], "marshmallow.validate.And": [], "tests.test_schema": ["<builtin>.set", "<builtin>.object", "random.seed", "pytest.mark.parametrize"], "random.seed": [], "tests.test_schema.test_serializing_basic_object": ["math.isclose"], "tests.test_schema.test_serializer_dump": ["marshmallow.Schema.__init__"], "tests.test_schema.test_load_resets_errors": ["<builtin>.len", "pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_load_resets_errors.MySchema": ["marshmallow.fields.Email"], "tests.test_schema.test_load_validation_error_stores_input_data_and_valid_data": ["<builtin>.isinstance", "marshmallow.Schema.__init__", "marshmallow.Schema.load", "pytest.fail", "datetime.datetime.utcnow"], "tests.test_schema.test_load_validation_error_stores_input_data_and_valid_data.MySchema": ["marshmallow.fields.DateTime", "marshmallow.fields.Field"], "tests.test_schema.test_load_validation_error_stores_input_data_and_valid_data.MySchema.<list1>.<lambda1>": [], "pytest.fail": [], "tests.test_schema.test_load_resets_error_fields": ["<builtin>.len", "pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_load_resets_error_fields.MySchema": ["marshmallow.fields.Email", "marshmallow.fields.Str"], "tests.test_schema.test_errored_fields_do_not_appear_in_output": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_errored_fields_do_not_appear_in_output.MyField._serialize": ["marshmallow.exceptions.ValidationError"], "tests.test_schema.test_errored_fields_do_not_appear_in_output.MySchema.<lambda1>": [], "tests.test_schema.test_errored_fields_do_not_appear_in_output.MySchema": ["marshmallow.fields.Field.__init__"], "tests.test_schema.test_load_many_stores_error_indices": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_schema.test_dump_many": ["tests.base.User.__init__", "<builtin>.len", "marshmallow.Schema.__init__"], "tests.test_schema.test_boolean_can_dump_unhashable": ["<builtin>.bool", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_boolean_can_dump_unhashable.MySchema": ["marshmallow.fields.Boolean"], "tests.test_schema.test_multiple_errors_can_be_stored_for_a_given_index": ["<builtin>.len", "marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_schema.test_multiple_errors_can_be_stored_for_a_given_index.MySchema.<lambda1>": ["<builtin>.len"], "tests.test_schema.test_multiple_errors_can_be_stored_for_a_given_index.MySchema": ["marshmallow.fields.Int", "marshmallow.fields.Str"], "tests.test_schema.test_multiple_errors_can_be_stored_for_a_given_index.MySchema.<lambda2>": [], "marshmallow.Schema.validate": [], "tests.test_schema.test_dump_returns_a_dict": ["<builtin>.type", "marshmallow.Schema.__init__"], "tests.test_schema.test_dumps_returns_a_string": ["<builtin>.type", "marshmallow.Schema.__init__"], "tests.test_schema.test_dumping_single_object_with_collection_schema": ["<builtin>.type", "marshmallow.Schema.__init__"], "tests.test_schema.test_loading_single_object_with_collection_schema": ["<builtin>.type", "marshmallow.Schema.__init__"], "tests.test_schema.test_dumps_many": ["tests.base.User.__init__", "<builtin>.len", "simplejson.loads", "marshmallow.Schema.__init__"], "simplejson.loads": [], "tests.test_schema.test_load_returns_an_object": ["<builtin>.type", "marshmallow.Schema.__init__"], "tests.test_schema.test_load_many": ["<builtin>.type", "marshmallow.Schema.__init__"], "<builtin>.object": [], "<builtin>.set": [], "tests.test_schema.test_load_invalid_input_type": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_load_invalid_input_type.Sch": ["marshmallow.fields.Str"], "tests.test_schema.test_load_many_invalid_input_type": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_load_many_invalid_input_type.Sch": ["marshmallow.fields.Str"], "tests.test_schema.test_load_many_empty_collection": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_load_many_empty_collection.Sch": ["marshmallow.fields.Str"], "tests.test_schema.test_load_many_in_nested_invalid_input_type": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_load_many_in_nested_invalid_input_type.Inner": ["marshmallow.fields.String"], "tests.test_schema.test_load_many_in_nested_invalid_input_type.Outer": ["marshmallow.fields.List", "marshmallow.fields.Nested"], "tests.test_schema.test_load_many_in_nested_empty_collection": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_load_many_in_nested_empty_collection.Inner": ["marshmallow.fields.String"], "tests.test_schema.test_load_many_in_nested_empty_collection.Outer": ["marshmallow.fields.List", "marshmallow.fields.Nested"], "tests.test_schema.test_loads_returns_a_user": ["<builtin>.type", "simplejson.dumps", "marshmallow.Schema.__init__"], "simplejson.dumps": [], "tests.test_schema.test_loads_many": ["<builtin>.type", "simplejson.dumps", "marshmallow.Schema.__init__"], "tests.test_schema.test_loads_deserializes_from_json": ["simplejson.dumps", "<builtin>.isinstance", "marshmallow.Schema.__init__", "math.isclose"], "tests.test_schema.test_serializing_none": ["marshmallow.Schema.__init__"], "tests.test_schema.test_serializing_none.MySchema": ["marshmallow.fields.Int", "marshmallow.fields.Str"], "tests.test_schema.test_default_many_symmetry": ["tests.base.User.__init__", "marshmallow.Schema.__init__"], "tests.test_schema.test_on_bind_field_hook": ["marshmallow.Schema.__init__"], "tests.test_schema.test_on_bind_field_hook.MySchema": ["marshmallow.fields.Str"], "tests.test_schema.test_on_bind_field_hook.MySchema.on_bind_field": [], "tests.test_schema.test_nested_on_bind_field_hook": ["marshmallow.Schema.__init__"], "tests.test_schema.test_nested_on_bind_field_hook.MySchema.NestedSchema": ["marshmallow.fields.Str"], "tests.test_schema.test_nested_on_bind_field_hook.MySchema.NestedSchema.on_bind_field": [], "tests.test_schema.test_nested_on_bind_field_hook.MySchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestValidate.test_validate_raises_with_errors_dict": ["<builtin>.type", "marshmallow.Schema.__init__"], "tests.test_schema.TestValidate.test_validate_many": ["marshmallow.Schema.__init__"], "tests.test_schema.TestValidate.test_validate_many_doesnt_store_index_if_index_errors_option_is_false": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_schema.TestValidate.test_validate_many_doesnt_store_index_if_index_errors_option_is_false.NoIndex": ["marshmallow.fields.Email"], "tests.test_schema.TestValidate.test_validate": ["marshmallow.Schema.__init__"], "tests.test_schema.TestValidate.test_validate_required": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_schema.TestValidate.test_validate_required.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.test_fields_are_not_copies": [], "tests.test_schema.test_dumps_returns_json": ["<builtin>.type", "simplejson.dumps", "marshmallow.Schema.__init__"], "tests.test_schema.test_naive_datetime_field": ["marshmallow.utils.isoformat"], "tests.test_schema.test_datetime_formatted_field": [], "tests.test_schema.test_datetime_iso_field": ["marshmallow.utils.isoformat"], "tests.test_schema.test_tz_datetime_field": ["marshmallow.utils.isoformat"], "tests.test_schema.test_class_variable": [], "tests.test_schema.test_serialize_many": ["tests.base.User.__init__", "<builtin>.len"], "tests.test_schema.test_inheriting_schema": ["marshmallow.Schema.__init__"], "tests.test_schema.test_custom_field": [], "tests.test_schema.test_url_field": [], "tests.test_schema.test_relative_url_field": ["marshmallow.Schema.__init__"], "tests.test_schema.test_stores_invalid_url_error": ["pytest.raises"], "tests.test_schema.test_email_field": ["tests.base.User.__init__"], "tests.test_schema.test_stored_invalid_email": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_schema.test_integer_field": ["tests.base.User.__init__", "<builtin>.type", "marshmallow.Schema.__init__"], "tests.test_schema.test_as_string": ["<builtin>.type", "marshmallow.Schema.__init__", "tests.base.User.__init__", "math.isclose", "<builtin>.float"], "tests.test_schema.test_method_field": ["tests.base.User.__init__"], "tests.test_schema.test_function_field": [], "tests.test_schema.test_fields_must_be_declared_as_instances": ["pytest.raises", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_bind_field_does_not_swallow_typeerror": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_schema.test_bind_field_does_not_swallow_typeerror.MySchema": ["marshmallow.fields.Str"], "tests.test_schema.test_bind_field_does_not_swallow_typeerror.MySchema.on_bind_field": ["<builtin>.TypeError"], "<builtin>.TypeError": [], "tests.test_schema.test_serializing_generator": ["tests.base.User.__init__", "<builtin>.len"], "tests.test_schema.test_serializing_empty_list_returns_empty_list": ["marshmallow.Schema.__init__"], "tests.test_schema.test_serializing_dict": ["marshmallow.Schema.__init__"], "tests.test_schema.test_serializing_dict_with_meta_fields": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_exclude_in_init": [], "tests.test_schema.test_only_in_init": [], "tests.test_schema.test_invalid_only_param": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_schema.test_can_serialize_uuid": ["<builtin>.str"], "tests.test_schema.test_can_serialize_time": [], "tests.test_schema.test_json_module_is_deprecated": ["pytest.deprecated_call", "marshmallow.Schema.__init__", "marshmallow.Schema.dumps", "tests.base.User.__init__", "tests.base.mockjson.dumps"], "pytest.deprecated_call": [], "tests.test_schema.test_json_module_is_deprecated.UserJSONSchema": ["marshmallow.fields.String"], "marshmallow.Schema.dumps": [], "tests.test_schema.test_render_module": ["tests.base.User.__init__", "tests.base.mockjson.dumps", "marshmallow.Schema.__init__", "marshmallow.Schema.dumps"], "tests.test_schema.test_render_module.UserJSONSchema": ["marshmallow.fields.String"], "tests.test_schema.test_custom_error_message": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_custom_error_message.ErrorSchema": ["marshmallow.fields.Email", "marshmallow.fields.Decimal", "marshmallow.fields.Url"], "tests.test_schema.test_custom_unknown_error_message": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_custom_unknown_error_message.ErrorSchema": ["marshmallow.fields.String"], "tests.test_schema.test_custom_type_error_message": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_custom_type_error_message.ErrorSchema": ["marshmallow.fields.String"], "tests.test_schema.test_custom_type_error_message_with_many": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_custom_type_error_message_with_many.ErrorSchema": ["marshmallow.fields.String"], "tests.test_schema.test_custom_error_messages_with_inheritance": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_custom_error_messages_with_inheritance.ParentSchema": ["marshmallow.fields.String"], "tests.test_schema.test_load_errors_with_many": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_load_errors_with_many.ErrorSchema": ["marshmallow.fields.Email"], "tests.test_schema.test_error_raised_if_fields_option_is_not_list": ["pytest.raises"], "tests.test_schema.test_error_raised_if_fields_option_is_not_list.BadSchema": ["marshmallow.fields.String"], "tests.test_schema.test_error_raised_if_additional_option_is_not_list": ["pytest.raises"], "tests.test_schema.test_error_raised_if_additional_option_is_not_list.BadSchema": ["marshmallow.fields.String"], "tests.test_schema.test_nested_custom_set_in_exclude_reusing_schema": ["marshmallow.Schema.load", "marshmallow.Schema.dumps", "marshmallow.Schema.__init__", "<builtin>.dict"], "tests.test_schema.test_nested_custom_set_in_exclude_reusing_schema.CustomSet.__getitem__": [], "tests.test_schema.test_nested_custom_set_in_exclude_reusing_schema.ChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_custom_set_in_exclude_reusing_schema.ParentSchema": ["marshmallow.fields.Nested"], "tests.test_schema.test_nested_only": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_only.ChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_only.ParentSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_nested_only_inheritance": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_only_inheritance.ChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_only_inheritance.ParentSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_nested_only_empty_inheritance": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_only_empty_inheritance.ChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_only_empty_inheritance.ParentSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_nested_exclude": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_exclude.ChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_exclude.ParentSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_nested_exclude_inheritance": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_exclude_inheritance.ChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_exclude_inheritance.ParentSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_nested_only_and_exclude": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_only_and_exclude.ChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_only_and_exclude.ParentSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_nested_only_then_exclude_inheritance": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_only_then_exclude_inheritance.ChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_only_then_exclude_inheritance.ParentSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_nested_exclude_then_only_inheritance": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_exclude_then_only_inheritance.ChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_exclude_then_only_inheritance.ParentSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_nested_exclude_and_only_inheritance": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_exclude_and_only_inheritance.ChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_exclude_and_only_inheritance.ParentSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_nested_instance_many": ["marshmallow.Schema.load", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_instance_many.BookSchema": ["marshmallow.fields.Int", "marshmallow.fields.String"], "tests.test_schema.test_nested_instance_many.UserSchema": ["marshmallow.fields.Int", "marshmallow.fields.String", "marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.test_schema.test_nested_instance_only": ["marshmallow.Schema.load", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_instance_only.ArtistSchema": ["marshmallow.fields.Str"], "tests.test_schema.test_nested_instance_only.AlbumSchema": ["marshmallow.fields.Str", "marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.test_schema.test_nested_instance_exclude": ["marshmallow.Schema.load", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_instance_exclude.ArtistSchema": ["marshmallow.fields.Str"], "tests.test_schema.test_nested_instance_exclude.AlbumSchema": ["marshmallow.fields.Str", "marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.test_schema.test_meta_nested_exclude": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_meta_nested_exclude.ChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_meta_nested_exclude.ParentSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_nested_custom_set_not_implementing_getitem": ["tests.test_schema.test_nested_custom_set_not_implementing_getitem.Child.__init__", "tests.test_schema.test_nested_custom_set_not_implementing_getitem.ListLikeParent.__init__", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_custom_set_not_implementing_getitem.ListLikeParent.__init__": [], "tests.test_schema.test_nested_custom_set_not_implementing_getitem.Child.__init__": [], "tests.test_schema.test_nested_custom_set_not_implementing_getitem.ChildSchema": ["marshmallow.fields.Str"], "tests.test_schema.test_nested_custom_set_not_implementing_getitem.ParentSchema": ["marshmallow.fields.Nested"], "tests.test_schema.test_deeply_nested_only_and_exclude": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_deeply_nested_only_and_exclude.GrandChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_deeply_nested_only_and_exclude.ChildSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_deeply_nested_only_and_exclude.ParentSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_nested_lambda": ["marshmallow.Schema.load", "marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_lambda.ChildSchema": ["marshmallow.fields.Str", "marshmallow.fields.Nested", "marshmallow.fields.List"], "tests.test_schema.test_nested_lambda.ChildSchema.<lambda1>": ["marshmallow.Schema.__init__"], "tests.test_schema.test_nested_lambda.ChildSchema.<lambda2>": ["marshmallow.Schema.__init__"], "tests.test_schema.test_nested_lambda.ParentSchema": ["marshmallow.fields.Str", "marshmallow.fields.Nested", "marshmallow.fields.List"], "tests.test_schema.test_nested_lambda.ParentSchema.<lambda1>": ["marshmallow.Schema.__init__"], "tests.test_schema.test_nested_lambda.ParentSchema.<lambda2>": ["marshmallow.Schema.__init__"], "tests.test_schema.test_data_key_collision": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_schema.test_data_key_collision.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.test_attribute_collision": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_schema.test_attribute_collision.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.TestDeeplyNestedLoadOnly": ["pytest.fixture"], "tests.test_schema.TestDeeplyNestedLoadOnly.schema": ["marshmallow.Schema.__init__"], "tests.test_schema.TestDeeplyNestedLoadOnly.schema.GrandChildSchema": ["marshmallow.fields.String"], "tests.test_schema.TestDeeplyNestedLoadOnly.schema.ChildSchema": ["marshmallow.fields.String", "marshmallow.fields.Nested"], "tests.test_schema.TestDeeplyNestedLoadOnly.schema.ParentSchema": ["marshmallow.fields.String", "marshmallow.fields.Nested"], "tests.test_schema.TestDeeplyNestedLoadOnly.data": ["<builtin>.dict"], "tests.test_schema.TestDeeplyNestedLoadOnly.test_load_only": [], "tests.test_schema.TestDeeplyNestedLoadOnly.test_dump_only": [], "tests.test_schema.TestDeeplyNestedListLoadOnly": ["pytest.fixture"], "tests.test_schema.TestDeeplyNestedListLoadOnly.schema": ["marshmallow.Schema.__init__"], "tests.test_schema.TestDeeplyNestedListLoadOnly.schema.ChildSchema": ["marshmallow.fields.String"], "tests.test_schema.TestDeeplyNestedListLoadOnly.schema.ParentSchema": ["marshmallow.fields.String", "marshmallow.fields.List", "marshmallow.fields.Nested"], "tests.test_schema.TestDeeplyNestedListLoadOnly.data": ["<builtin>.dict"], "tests.test_schema.TestDeeplyNestedListLoadOnly.test_load_only": [], "tests.test_schema.TestDeeplyNestedListLoadOnly.test_dump_only": [], "tests.test_schema.test_nested_constructor_only_and_exclude": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_nested_constructor_only_and_exclude.GrandChildSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_constructor_only_and_exclude.ChildSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_nested_constructor_only_and_exclude.ParentSchema": ["marshmallow.fields.Field", "marshmallow.fields.Nested"], "tests.test_schema.test_only_and_exclude": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_only_and_exclude.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.test_only_and_exclude_with_fields": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_only_and_exclude_with_fields.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.test_invalid_only_and_exclude_with_fields": ["pytest.raises", "marshmallow.Schema.__init__", "<builtin>.str"], "tests.test_schema.test_invalid_only_and_exclude_with_fields.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.test_only_and_exclude_with_additional": ["marshmallow.Schema.__init__", "<builtin>.dict", "marshmallow.Schema.dump"], "tests.test_schema.test_only_and_exclude_with_additional.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.test_invalid_only_and_exclude_with_additional": ["pytest.raises", "marshmallow.Schema.__init__", "<builtin>.str"], "tests.test_schema.test_invalid_only_and_exclude_with_additional.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.test_exclude_invalid_attribute": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_schema.test_exclude_invalid_attribute.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.test_only_bounded_by_fields": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_schema.test_only_bounded_by_additional": ["pytest.raises", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_only_empty": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_only_empty.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.test_only_and_exclude_as_string": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_schema.test_only_and_exclude_as_string.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_with_sets": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump", "<builtin>.len", "collections.namedtuple", "<builtin>.dict"], "tests.test_schema.test_nested_with_sets.Inner": ["marshmallow.fields.Field"], "tests.test_schema.test_nested_with_sets.Outer": ["marshmallow.fields.Nested"], "tests.test_schema.test_meta_serializer_fields": ["decimal.Decimal", "marshmallow.Schema.__init__", "tests.base.User.__init__", "marshmallow.utils.isoformat", "<builtin>.dict"], "tests.test_schema.test_meta_fields_mapping": ["<builtin>.type", "marshmallow.Schema.__init__"], "tests.test_schema.test_meta_field_not_on_obj_raises_attribute_error": ["pytest.raises", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_exclude_fields": ["marshmallow.Schema.__init__"], "tests.test_schema.test_fields_option_must_be_list_or_tuple": ["pytest.raises"], "tests.test_schema.test_exclude_option_must_be_list_or_tuple": ["pytest.raises"], "tests.test_schema.test_datetimeformat_option": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_datetimeformat_option.DateTimeFormatSchema": ["marshmallow.fields.DateTime"], "tests.test_schema.test_dateformat_option": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_dateformat_option.DateFormatSchema": ["marshmallow.fields.Date"], "tests.test_schema.test_timeformat_option": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_timeformat_option.TimeFormatSchema": ["marshmallow.fields.Time"], "tests.test_schema.test_default_dateformat": ["marshmallow.Schema.__init__", "marshmallow.utils.isoformat", "marshmallow.Schema.dump"], "tests.test_schema.test_default_dateformat.DateFormatSchema": ["marshmallow.fields.DateTime"], "tests.test_schema.test_inherit_meta": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_inherit_meta_override": ["marshmallow.Schema.__init__"], "tests.test_schema.test_additional": ["marshmallow.Schema.__init__"], "tests.test_schema.test_cant_set_both_additional_and_fields": ["pytest.raises"], "tests.test_schema.test_cant_set_both_additional_and_fields.BadSchema": ["marshmallow.fields.String"], "tests.test_schema.test_serializing_none_meta": ["marshmallow.Schema.__init__"], "tests.test_schema.MySchema": ["marshmallow.fields.String", "marshmallow.fields.Email", "marshmallow.fields.Integer"], "tests.test_schema.MySchema.handle_error": [], "tests.test_schema.MySchema.test_load_with_custom_error_handler": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.MySchema.test_load_with_custom_error_handler.MySchema3": ["marshmallow.fields.Email"], "tests.test_schema.MySchema.test_load_with_custom_error_handler.MySchema3.handle_error": ["<builtin>.type", "<builtin>.list"], "tests.test_schema.MySchema.test_load_with_custom_error_handler_and_partially_valid_data": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.MySchema.test_load_with_custom_error_handler_and_partially_valid_data.MySchema": ["marshmallow.fields.Email", "marshmallow.fields.URL"], "marshmallow.fields.URL": [], "tests.test_schema.MySchema.test_load_with_custom_error_handler_and_partially_valid_data.MySchema.handle_error": ["<builtin>.type", "<builtin>.list"], "tests.test_schema.MySchema.test_custom_error_handler_with_validates_decorator": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.MySchema.test_custom_error_handler_with_validates_decorator.MySchema": ["marshmallow.fields.Int", "marshmallow.validates"], "marshmallow.validates": [], "tests.test_schema.MySchema.test_custom_error_handler_with_validates_decorator.MySchema.validate_num": ["marshmallow.exceptions.ValidationError"], "tests.test_schema.MySchema.test_custom_error_handler_with_validates_decorator.MySchema.handle_error": ["<builtin>.type", "<builtin>.list"], "tests.test_schema.MySchema.test_custom_error_handler_with_validates_schema_decorator": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.MySchema.test_custom_error_handler_with_validates_schema_decorator.MySchema": ["marshmallow.fields.Int", "tests.test_schema.MySchema.test_custom_error_handler_with_validates_schema_decorator.MySchema.validates_schema"], "tests.test_schema.MySchema.test_custom_error_handler_with_validates_schema_decorator.MySchema.validates_schema": ["marshmallow.exceptions.ValidationError"], "tests.test_schema.MySchema.test_custom_error_handler_with_validates_schema_decorator.MySchema.handle_error": ["<builtin>.type", "<builtin>.list"], "tests.test_schema.MySchema.test_validate_with_custom_error_handler": ["pytest.raises", "marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_schema.TestFieldValidation.test_errors_are_cleared_after_loading_collection": ["<builtin>.len", "pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.TestFieldValidation.test_errors_are_cleared_after_loading_collection.always_fail": ["marshmallow.exceptions.ValidationError"], "tests.test_schema.TestFieldValidation.test_errors_are_cleared_after_loading_collection.MySchema": ["marshmallow.fields.Str"], "tests.test_schema.TestFieldValidation.test_raises_error_with_list": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_schema.TestFieldValidation.test_raises_error_with_list.validator": ["marshmallow.exceptions.ValidationError"], "tests.test_schema.TestFieldValidation.test_raises_error_with_list.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.TestFieldValidation.test_raises_error_with_dict": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_schema.TestFieldValidation.test_raises_error_with_dict.validator": ["marshmallow.exceptions.ValidationError"], "tests.test_schema.TestFieldValidation.test_raises_error_with_dict.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.TestFieldValidation.test_ignored_if_not_in_only": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_schema.TestFieldValidation.test_ignored_if_not_in_only.MySchema": ["marshmallow.fields.Field", "marshmallow.validates"], "tests.test_schema.TestFieldValidation.test_ignored_if_not_in_only.MySchema.validate_a": ["marshmallow.exceptions.ValidationError"], "tests.test_schema.TestFieldValidation.test_ignored_if_not_in_only.MySchema.validate_b": ["marshmallow.exceptions.ValidationError"], "tests.test_schema.test_schema_repr": ["<builtin>.repr", "marshmallow.Schema.__init__"], "tests.test_schema.test_schema_repr.MySchema": ["marshmallow.fields.String"], "tests.test_schema.TestNestedSchema": ["pytest.fixture", "pytest.mark.parametrize"], "tests.test_schema.TestNestedSchema.user": ["tests.base.User.__init__"], "tests.test_schema.TestNestedSchema.blog": ["tests.base.User.__init__", "tests.base.Blog.__init__"], "tests.test_schema.TestNestedSchema.test_nested_many_with_missing_attribute": ["tests.base.Blog.__init__", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestNestedSchema.test_nested_many_with_missing_attribute.SimpleBlogSchema": ["marshmallow.fields.Str", "marshmallow.fields.Nested"], "tests.test_schema.TestNestedSchema.test_nested_with_attribute_none": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestNestedSchema.test_nested_with_attribute_none.InnerSchema": ["marshmallow.fields.Field"], "tests.test_schema.TestNestedSchema.test_nested_with_attribute_none.MySchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestNestedSchema.test_nested_with_attribute_none.MySchema2": ["marshmallow.fields.Nested"], "tests.test_schema.TestNestedSchema.test_nested_field_does_not_validate_required": ["tests.base.Blog.__init__", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestNestedSchema.test_nested_field_does_not_validate_required.BlogRequiredSchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestNestedSchema.test_nested_none": ["tests.base.Blog.__init__", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestNestedSchema.test_nested_none.BlogDefaultSchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestNestedSchema.test_nested": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_nested_many_fields": ["marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_nested_meta_many": ["<builtin>.len", "marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_nested_only": ["tests.base.User.__init__", "marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_exclude": ["marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_list_field": ["marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_nested_load_many": ["<builtin>.len", "<builtin>.type", "<builtin>.all", "marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_nested_errors": ["<builtin>.len", "pytest.raises", "marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_nested_method_field": ["marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_nested_function_field": ["marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_serializer_meta_with_nested_fields": ["marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_serializer_with_nested_meta_fields": ["marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_nested_fields_must_be_passed_a_serializer": ["pytest.raises", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestNestedSchema.test_nested_fields_must_be_passed_a_serializer.BadNestedFieldSchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestNestedSchema.test_invalid_type_passed_to_nested_field": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_invalid_type_passed_to_nested_field.InnerSchema": ["marshmallow.fields.Field"], "tests.test_schema.TestNestedSchema.test_invalid_type_passed_to_nested_field.MySchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestNestedSchema.test_invalid_type_passed_to_nested_field.OuterSchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestNestedSchema.test_all_errors_on_many_nested_field_with_validates_decorator": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_all_errors_on_many_nested_field_with_validates_decorator.Inner": ["marshmallow.fields.Field"], "tests.test_schema.TestNestedSchema.test_all_errors_on_many_nested_field_with_validates_decorator.Outer": ["marshmallow.validates", "marshmallow.fields.Nested"], "tests.test_schema.TestNestedSchema.test_all_errors_on_many_nested_field_with_validates_decorator.Outer.validates_inner": ["marshmallow.exceptions.ValidationError"], "tests.test_schema.TestNestedSchema.test_nested_unknown_validation": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.TestNestedSchema.test_nested_unknown_validation.ChildSchema": ["marshmallow.fields.Int"], "tests.test_schema.TestNestedSchema.test_nested_unknown_validation.ParentSchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestPluckSchema": ["pytest.mark.parametrize"], "tests.test_schema.TestPluckSchema.test_pluck": ["<builtin>.enumerate", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "marshmallow.fields.Pluck": [], "tests.test_schema.TestPluckSchema.test_pluck.FlatBlogSchema": ["marshmallow.fields.Pluck"], "<builtin>.enumerate": [], "tests.test_schema.TestPluckSchema.test_pluck_none": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump", "tests.base.User.__init__", "tests.base.Blog.__init__", "<builtin>.enumerate"], "tests.test_schema.TestPluckSchema.test_pluck_none.FlatBlogSchema": ["marshmallow.fields.Pluck"], "tests.test_schema.TestPluckSchema.test_pluck_with_data_key": ["<builtin>.enumerate", "marshmallow.Schema.__init__", "marshmallow.Schema.load", "marshmallow.Schema.dump"], "tests.test_schema.TestPluckSchema.test_pluck_with_data_key.UserSchema": ["marshmallow.fields.String", "marshmallow.fields.Int"], "tests.test_schema.TestPluckSchema.test_pluck_with_data_key.FlatBlogSchema": ["marshmallow.fields.Pluck"], "tests.test_schema.TestSelfReference": ["pytest.fixture"], "tests.test_schema.TestSelfReference.employer": ["tests.base.User.__init__"], "tests.test_schema.TestSelfReference.user": ["tests.base.User.__init__"], "tests.test_schema.TestSelfReference.test_nesting_schema_by_passing_lambda": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestSelfReference.test_nesting_schema_by_passing_lambda.SelfReferencingSchema": ["marshmallow.fields.Int", "marshmallow.fields.Str", "marshmallow.fields.Nested"], "tests.test_schema.TestSelfReference.test_nesting_schema_by_passing_lambda.SelfReferencingSchema.<lambda1>": ["marshmallow.Schema.__init__"], "tests.test_schema.TestSelfReference.test_nesting_schema_by_passing_class_name": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestSelfReference.test_nesting_schema_by_passing_class_name.SelfReferencingSchema": ["marshmallow.fields.Int", "marshmallow.fields.Str", "marshmallow.fields.Nested"], "tests.test_schema.TestSelfReference.test_nesting_schema_self_string": ["marshmallow.Schema.dump", "marshmallow.Schema.__init__", "pytest.warns"], "pytest.warns": [], "tests.test_schema.TestSelfReference.test_nesting_schema_self_string.SelfSchema": ["marshmallow.fields.String", "marshmallow.fields.Nested", "marshmallow.fields.Integer"], "tests.test_schema.TestSelfReference.test_nesting_within_itself_meta": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestSelfReference.test_nesting_within_itself_meta.SelfSchema.<lambda1>": ["marshmallow.Schema.__init__"], "tests.test_schema.TestSelfReference.test_nesting_within_itself_meta.SelfSchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestSelfReference.test_nested_self_with_only_param": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestSelfReference.test_nested_self_with_only_param.SelfSchema.<lambda1>": ["marshmallow.Schema.__init__"], "tests.test_schema.TestSelfReference.test_nested_self_with_only_param.SelfSchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestSelfReference.test_multiple_pluck_self_lambda": ["tests.base.User.__init__", "<builtin>.len", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestSelfReference.test_multiple_pluck_self_lambda.MultipleSelfSchema.<lambda1>": ["marshmallow.Schema.__init__"], "tests.test_schema.TestSelfReference.test_multiple_pluck_self_lambda.MultipleSelfSchema": ["marshmallow.fields.Pluck"], "tests.test_schema.TestSelfReference.test_multiple_pluck_self_lambda.MultipleSelfSchema.<lambda2>": ["marshmallow.Schema.__init__"], "tests.test_schema.TestSelfReference.test_multiple_pluck_self_string": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump", "tests.base.User.__init__", "<builtin>.len", "pytest.warns"], "tests.test_schema.TestSelfReference.test_multiple_pluck_self_string.MultipleSelfSchema": ["marshmallow.fields.Pluck"], "tests.test_schema.TestSelfReference.test_nested_self_many_lambda": ["tests.base.User.__init__", "<builtin>.len", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestSelfReference.test_nested_self_many_lambda.SelfManySchema.<lambda1>": ["marshmallow.Schema.__init__"], "tests.test_schema.TestSelfReference.test_nested_self_many_lambda.SelfManySchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestSelfReference.test_nested_self_many_string": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump", "tests.base.User.__init__", "<builtin>.len", "pytest.warns"], "tests.test_schema.TestSelfReference.test_nested_self_many_string.SelfManySchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestSelfReference.test_nested_self_list": ["tests.base.User.__init__", "<builtin>.len", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestSelfReference.test_nested_self_list.SelfListSchema.<lambda1>": ["marshmallow.Schema.__init__"], "tests.test_schema.TestSelfReference.test_nested_self_list.SelfListSchema": ["marshmallow.fields.List", "marshmallow.fields.Nested"], "tests.test_schema.TestSelfReference.test_nested_self_list_string": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump", "tests.base.User.__init__", "<builtin>.len", "pytest.warns"], "tests.test_schema.TestSelfReference.test_nested_self_list_string.SelfListSchema": ["marshmallow.fields.List", "marshmallow.fields.Nested"], "tests.test_schema.RequiredUserSchema": ["marshmallow.fields.Field"], "tests.test_schema.test_serialization_with_required_field": ["tests.base.User.__init__", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_deserialization_with_required_field": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_deserialization_with_required_field_and_custom_validator": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_deserialization_with_required_field_and_custom_validator.ValidatingSchema.<lambda1>": [], "tests.test_schema.test_deserialization_with_required_field_and_custom_validator.ValidatingSchema": ["marshmallow.fields.String"], "tests.test_schema.UserContextSchema": ["marshmallow.fields.Method", "marshmallow.fields.Function"], "tests.test_schema.UserContextSchema.<lambda1>": [], "tests.test_schema.UserContextSchema.get_is_owner": [], "tests.test_schema.TestContext.test_context_method": ["tests.base.User.__init__", "tests.base.Blog.__init__", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestContext.test_context_method_function": ["tests.base.User.__init__", "tests.base.Blog.__init__", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestContext.test_function_field_raises_error_when_context_not_available": ["tests.base.User.__init__", "pytest.raises", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestContext.test_function_field_raises_error_when_context_not_available.UserFunctionContextSchema.<lambda1>": [], "tests.test_schema.TestContext.test_function_field_raises_error_when_context_not_available.UserFunctionContextSchema": ["marshmallow.fields.Function"], "tests.test_schema.TestContext.test_function_field_handles_bound_serializer": ["tests.base.User.__init__", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestContext.test_function_field_handles_bound_serializer.SerializeA.__call__": [], "tests.test_schema.TestContext.test_function_field_handles_bound_serializer.UserFunctionContextSchema": ["marshmallow.fields.Function"], "tests.test_schema.TestContext.test_fields_context": ["marshmallow.Schema.__init__"], "tests.test_schema.TestContext.test_fields_context.CSchema": ["marshmallow.fields.String"], "tests.test_schema.TestContext.test_nested_fields_inherit_context": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestContext.test_nested_fields_inherit_context.InnerSchema.<lambda1>": [], "tests.test_schema.TestContext.test_nested_fields_inherit_context.InnerSchema": ["marshmallow.fields.Function"], "tests.test_schema.TestContext.test_nested_fields_inherit_context.CSchema": ["marshmallow.fields.Nested"], "tests.test_schema.TestContext.test_nested_list_fields_inherit_context": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.TestContext.test_nested_list_fields_inherit_context.InnerSchema": ["marshmallow.fields.Field", "marshmallow.validates"], "tests.test_schema.TestContext.test_nested_list_fields_inherit_context.InnerSchema.validate_foo": ["marshmallow.exceptions.ValidationError"], "tests.test_schema.TestContext.test_nested_list_fields_inherit_context.OuterSchema": ["marshmallow.fields.List", "marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.test_schema.TestContext.test_nested_dict_fields_inherit_context": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.TestContext.test_nested_dict_fields_inherit_context.InnerSchema": ["marshmallow.fields.Field", "marshmallow.validates"], "tests.test_schema.TestContext.test_nested_dict_fields_inherit_context.InnerSchema.validate_foo": ["marshmallow.exceptions.ValidationError"], "tests.test_schema.TestContext.test_nested_dict_fields_inherit_context.OuterSchema": ["marshmallow.fields.Nested", "marshmallow.Schema.__init__", "marshmallow.fields.Dict"], "tests.test_schema.TestContext.test_nested_field_with_unpicklable_object_in_context": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestContext.test_nested_field_with_unpicklable_object_in_context.Unpicklable.__deepcopy__": [], "tests.test_schema.TestContext.test_nested_field_with_unpicklable_object_in_context.InnerSchema": ["marshmallow.fields.Field"], "tests.test_schema.TestContext.test_nested_field_with_unpicklable_object_in_context.OuterSchema": ["marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.test_schema.test_serializer_can_specify_nested_object_as_attribute": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.test_serializer_can_specify_nested_object_as_attribute.BlogUsernameSchema": ["marshmallow.fields.String"], "tests.test_schema.TestFieldInheritance.test_inherit_fields_from_schema_subclass": ["marshmallow.fields.Number"], "tests.test_schema.TestFieldInheritance.test_inherit_fields_from_non_schema_subclass": ["marshmallow.fields.Number"], "tests.test_schema.TestFieldInheritance.test_inheritance_follows_mro": ["marshmallow.fields.String"], "tests.test_schema.get_from_dict": [], "tests.test_schema.TestGetAttribute.test_get_attribute_is_used": ["tests.base.User.__init__", "pytest.raises", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_schema.TestGetAttribute.test_get_attribute_is_used.UserDictSchema": ["marshmallow.fields.Email", "marshmallow.fields.Str"], "tests.test_schema.TestGetAttribute.test_get_attribute_is_used.UserDictSchema.get_attribute": ["tests.test_schema.get_from_dict"], "tests.test_schema.TestGetAttribute.test_get_attribute_with_many": ["marshmallow.Schema.__init__", "<builtin>.zip", "marshmallow.Schema.dump", "tests.base.User.__init__", "pytest.raises"], "tests.test_schema.TestGetAttribute.test_get_attribute_with_many.UserDictSchema": ["marshmallow.fields.Email", "marshmallow.fields.Str"], "tests.test_schema.TestGetAttribute.test_get_attribute_with_many.UserDictSchema.get_attribute": ["tests.test_schema.get_from_dict"], "<builtin>.zip": [], "tests.test_schema.TestRequiredFields.StringSchema": ["marshmallow.fields.Str"], "tests.test_schema.TestRequiredFields": ["pytest.fixture"], "tests.test_schema.TestRequiredFields.string_schema": ["marshmallow.Schema.__init__"], "tests.test_schema.TestRequiredFields.data": ["<builtin>.dict"], "tests.test_schema.TestRequiredFields.test_required_string_field_missing": [], "tests.test_schema.TestRequiredFields.test_required_string_field_failure": [], "tests.test_schema.TestRequiredFields.test_allow_none_param": [], "tests.test_schema.TestRequiredFields.test_allow_none_custom_message": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_schema.TestRequiredFields.test_allow_none_custom_message.MySchema": ["marshmallow.fields.Field"], "tests.test_schema.TestDefaults.MySchema": ["marshmallow.fields.Int", "marshmallow.fields.Str", "marshmallow.fields.Nested", "marshmallow.fields.List"], "tests.test_schema.TestDefaults": ["pytest.fixture"], "tests.test_schema.TestDefaults.schema": ["marshmallow.Schema.__init__"], "tests.test_schema.TestDefaults.data": ["<builtin>.dict"], "tests.test_schema.TestDefaults.test_missing_inputs_are_excluded_from_dump_output": ["<builtin>.all"], "tests.test_schema.TestDefaults.test_none_is_serialized_to_none": [], "tests.test_schema.TestDefaults.test_default_and_value_missing": [], "tests.test_schema.TestDefaults.test_loading_none": [], "tests.test_schema.TestDefaults.test_missing_inputs_are_excluded_from_load_output": ["<builtin>.all"], "tests.test_schema.TestLoadOnly.MySchema": ["marshmallow.fields.String"], "tests.test_schema.TestLoadOnly": ["pytest.fixture"], "tests.test_schema.TestLoadOnly.schema": ["marshmallow.Schema.__init__"], "tests.test_schema.TestLoadOnly.data": ["<builtin>.dict"], "tests.test_schema.TestLoadOnly.test_load_only": [], "tests.test_schema.TestLoadOnly.test_dump_only": [], "tests.test_schema.TestLoadOnly.test_url_field_requre_tld_false": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.TestLoadOnly.test_url_field_requre_tld_false.NoTldTestSchema": ["marshmallow.fields.Url"], "tests.test_schema.TestFromDict.test_generates_schema": ["marshmallow.Schema.from_dict", "marshmallow.fields.Str", "<builtin>.issubclass"], "marshmallow.Schema.from_dict": [], "<builtin>.issubclass": [], "tests.test_schema.TestFromDict.test_name": ["marshmallow.Schema.from_dict", "marshmallow.fields.Str", "marshmallow.fields.Int", "<builtin>.repr"], "tests.test_schema.TestFromDict.test_generated_schemas_are_not_registered": ["marshmallow.Schema.from_dict", "marshmallow.fields.Str", "<builtin>.len", "marshmallow.class_registry.get_class", "pytest.raises"], "marshmallow.class_registry.get_class": [], "tests.test_schema.TestFromDict.test_meta_options_are_applied": ["marshmallow.fields.Int", "marshmallow.Schema.from_dict", "<builtin>.isinstance"], "tests.test_schema.test_class_registry_returns_schema_type": ["marshmallow.class_registry.get_class"], "tests.test_schema.test_unknown_parameter_value_is_validated": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_schema.test_unknown_parameter_value_is_validated.MySchema": ["marshmallow.fields.String"], "tests.foo_serializer": [], "tests.foo_serializer.FooSerializer": ["marshmallow.fields.Integer"], "tests.test_registry": [], "tests.test_registry.test_serializer_has_class_registry": [], "tests.test_registry.test_register_class_meta_option": [], "tests.test_registry.test_serializer_class_registry_register_same_classname_different_module": ["<builtin>.len", "<builtin>.type", "marshmallow.class_registry._registry.get"], "marshmallow.class_registry._registry.get": [], "tests.test_registry.test_serializer_class_registry_override_if_same_classname_same_module": ["<builtin>.len", "<builtin>.type", "marshmallow.class_registry._registry.get"], "tests.test_registry.A.__init__": [], "tests.test_registry.B.__init__": [], "tests.test_registry.C.__init__": [], "tests.test_registry.ASchema": ["marshmallow.fields.Nested", "marshmallow.fields.Integer"], "tests.test_registry.BSchema": ["marshmallow.fields.Nested", "marshmallow.fields.Integer"], "tests.test_registry.CSchema": ["marshmallow.fields.Nested", "marshmallow.fields.Integer"], "tests.test_registry.test_two_way_nesting": ["tests.test_registry.B.__init__", "tests.test_registry.A.__init__", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_registry.test_nesting_with_class_name_many": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump", "<builtin>.len", "tests.test_registry.C.__init__", "tests.test_registry.B.__init__"], "tests.test_registry.test_invalid_class_name_in_nested_field_raises_error": ["pytest.raises", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_registry.test_invalid_class_name_in_nested_field_raises_error.MySchema": ["marshmallow.fields.Nested"], "tests.test_registry.FooSerializer": ["marshmallow.fields.Integer"], "tests.test_registry.test_multiple_classes_with_same_name_raises_error": ["pytest.raises", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_registry.test_multiple_classes_with_same_name_raises_error.MySchema": ["marshmallow.fields.Nested"], "tests.test_registry.test_multiple_classes_with_all": ["<builtin>.len", "marshmallow.class_registry.get_class"], "tests.test_registry.test_can_use_full_module_path_to_class": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_registry.test_can_use_full_module_path_to_class.Schema1": ["marshmallow.fields.Nested"], "tests.test_registry.test_can_use_full_module_path_to_class.Schema2": ["marshmallow.fields.Nested"], "tests.conftest": ["pytest.fixture"], "tests.conftest.user": ["tests.base.User.__init__"], "tests.conftest.blog": ["tests.base.User.__init__", "tests.base.Blog.__init__"], "tests.conftest.serialized_user": ["marshmallow.Schema.__init__"], "tests.test_deserialization": ["pytest.mark.parametrize"], "tests.test_deserialization.TestDeserializingNone": ["pytest.mark.parametrize"], "tests.test_deserialization.TestDeserializingNone.test_fields_allow_none_deserialize_to_none": [], "tests.test_deserialization.TestDeserializingNone.test_fields_dont_allow_none_by_default": ["pytest.raises"], "tests.test_deserialization.TestDeserializingNone.test_allow_none_is_true_if_missing_is_true": ["marshmallow.fields.Field"], "tests.test_deserialization.TestDeserializingNone.test_list_field_deserialize_none_to_none": ["marshmallow.fields.String", "marshmallow.fields.List"], "tests.test_deserialization.TestDeserializingNone.test_tuple_field_deserialize_none_to_none": ["marshmallow.fields.String", "marshmallow.fields.Tuple"], "tests.test_deserialization.TestDeserializingNone.test_list_of_nested_allow_none_deserialize_none_to_none": ["marshmallow.fields.List", "marshmallow.fields.Nested", "marshmallow.Schema"], "tests.test_deserialization.TestDeserializingNone.test_list_of_nested_non_allow_none_deserialize_none_to_validation_error": ["marshmallow.fields.List", "pytest.raises", "marshmallow.fields.Nested", "marshmallow.Schema"], "tests.test_deserialization.TestFieldDeserialization.test_float_field_deserialization": ["marshmallow.fields.Float", "math.isclose"], "tests.test_deserialization.TestFieldDeserialization": ["pytest.mark.parametrize"], "tests.test_deserialization.TestFieldDeserialization.test_invalid_float_field_deserialization": ["marshmallow.fields.Float", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_float_field_overflow": ["marshmallow.fields.Float", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_integer_field_deserialization": ["pytest.raises", "marshmallow.fields.Integer"], "tests.test_deserialization.TestFieldDeserialization.test_strict_integer_field_deserialization": ["decimal.Decimal", "pytest.raises", "marshmallow.fields.Integer"], "tests.test_deserialization.TestFieldDeserialization.test_decimal_field_deserialization": ["marshmallow.fields.Decimal", "decimal.Decimal", "<builtin>.isinstance", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_decimal_field_with_places": ["marshmallow.fields.Decimal", "decimal.Decimal", "<builtin>.isinstance", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_decimal_field_with_places_and_rounding": ["marshmallow.fields.Decimal", "decimal.Decimal", "<builtin>.isinstance", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_decimal_field_deserialization_string": ["marshmallow.fields.Decimal", "decimal.Decimal", "<builtin>.isinstance", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_decimal_field_special_values": ["marshmallow.fields.Decimal", "<builtin>.isinstance"], "tests.test_deserialization.TestFieldDeserialization.test_decimal_field_special_values_not_permitted": ["marshmallow.fields.Decimal", "pytest.raises", "<builtin>.isinstance", "<builtin>.str"], "tests.test_deserialization.TestFieldDeserialization.test_float_field_allow_nan": ["<builtin>.isinstance", "<builtin>.str", "math.isnan", "marshmallow.fields.Float", "pytest.raises", "<builtin>.float"], "math.isnan": [], "tests.test_deserialization.TestFieldDeserialization.test_string_field_deserialization": ["marshmallow.fields.String", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_boolean_field_deserialization": ["marshmallow.fields.Boolean", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_boolean_field_deserialization_with_custom_truthy_values": ["marshmallow.fields.Boolean", "marshmallow.fields.Boolean.deserialize", "marshmallow.fields.Boolean.__init__"], "marshmallow.fields.Boolean.__init__": [], "marshmallow.fields.Boolean.deserialize": [], "tests.test_deserialization.TestFieldDeserialization.test_boolean_field_deserialization_with_custom_truthy_values_invalid": ["<builtin>.str", "marshmallow.fields.Boolean", "marshmallow.fields.Boolean.deserialize", "pytest.raises", "marshmallow.fields.Boolean.__init__"], "tests.test_deserialization.TestFieldDeserialization.test_boolean_field_deserialization_with_empty_truthy": ["marshmallow.fields.Boolean"], "tests.test_deserialization.TestFieldDeserialization.test_boolean_field_deserialization_with_custom_falsy_values": ["marshmallow.fields.Boolean"], "tests.test_deserialization.TestFieldDeserialization.test_field_toggle_show_invalid_value_in_error_message": ["marshmallow.fields.DateTime", "<builtin>.str", "marshmallow.fields.Boolean", "marshmallow.fields.Integer", "pytest.raises", "marshmallow.fields.Number"], "tests.test_deserialization.TestFieldDeserialization.test_invalid_datetime_deserialization": ["marshmallow.fields.DateTime", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_custom_date_format_datetime_field_deserialization": ["marshmallow.fields.DateTime", "marshmallow.fields.AwareDateTime", "marshmallow.fields.NaiveDateTime", "datetime.datetime", "pytest.raises"], "marshmallow.fields.NaiveDateTime": [], "marshmallow.fields.AwareDateTime": [], "tests.test_deserialization.TestFieldDeserialization.test_rfc_datetime_field_deserialization": ["marshmallow.fields.DateTime", "pytest.raises", "marshmallow.fields.NaiveDateTime", "marshmallow.fields.AwareDateTime"], "tests.test_deserialization.TestFieldDeserialization.test_iso_datetime_field_deserialization": ["marshmallow.fields.DateTime", "pytest.raises", "marshmallow.fields.NaiveDateTime", "marshmallow.fields.AwareDateTime"], "tests.test_deserialization.TestFieldDeserialization.test_timestamp_field_deserialization": ["marshmallow.fields.DateTime", "pytest.raises", "marshmallow.fields.NaiveDateTime", "marshmallow.fields.AwareDateTime"], "tests.test_deserialization.TestFieldDeserialization.test_invalid_timestamp_field_deserialization": ["marshmallow.fields.DateTime", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_naive_datetime_with_timezone": ["marshmallow.fields.NaiveDateTime"], "tests.test_deserialization.TestFieldDeserialization.test_aware_datetime_default_timezone": ["marshmallow.fields.AwareDateTime", "datetime.datetime"], "tests.test_deserialization.TestFieldDeserialization.test_time_field_deserialization": ["tests.base.assert_time_equal", "<builtin>.isinstance", "datetime.time", "marshmallow.fields.Time"], "tests.test_deserialization.TestFieldDeserialization.test_invalid_time_field_deserialization": ["pytest.raises", "marshmallow.fields.Time"], "tests.test_deserialization.TestFieldDeserialization.test_custom_time_format_time_field_deserialization": ["pytest.raises", "datetime.time", "marshmallow.fields.Time"], "tests.test_deserialization.TestFieldDeserialization.test_iso_time_field_deserialization": ["marshmallow.fields.Time"], "tests.test_deserialization.TestFieldDeserialization.test_invalid_timedelta_precision": ["pytest.raises", "marshmallow.fields.TimeDelta"], "tests.test_deserialization.TestFieldDeserialization.test_timedelta_field_deserialization": ["<builtin>.isinstance", "math.isclose", "datetime.timedelta", "math.floor", "marshmallow.fields.TimeDelta"], "math.floor": [], "tests.test_deserialization.TestFieldDeserialization.test_invalid_timedelta_field_deserialization": ["pytest.raises", "marshmallow.fields.TimeDelta"], "tests.test_deserialization.TestFieldDeserialization.test_date_field_deserialization": ["marshmallow.fields.Date", "<builtin>.type", "tests.base.assert_date_equal", "datetime.date"], "tests.test_deserialization.TestFieldDeserialization.test_invalid_date_field_deserialization": ["marshmallow.fields.Date", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_dict_field_deserialization": ["pytest.raises", "marshmallow.fields.Dict"], "tests.test_deserialization.TestFieldDeserialization.test_structured_dict_value_deserialization": ["marshmallow.fields.List", "pytest.raises", "marshmallow.fields.Dict"], "tests.test_deserialization.TestFieldDeserialization.test_structured_dict_key_deserialization": ["pytest.raises", "marshmallow.fields.Dict"], "tests.test_deserialization.TestFieldDeserialization.test_structured_dict_key_value_deserialization": ["marshmallow.validate.Email", "decimal.Decimal", "marshmallow.fields.Str", "marshmallow.fields.Dict", "marshmallow.validate.Regexp", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_url_field_deserialization": ["pytest.raises", "marshmallow.fields.Url"], "tests.test_deserialization.TestFieldDeserialization.test_url_field_non_list_validators": ["pytest.raises", "marshmallow.fields.Url", "marshmallow.validate.Length"], "tests.test_deserialization.TestFieldDeserialization.test_relative_url_field_deserialization": ["marshmallow.fields.Url"], "tests.test_deserialization.TestFieldDeserialization.test_url_field_schemes_argument": ["marshmallow.fields.URL", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_email_field_deserialization": ["marshmallow.fields.Email", "pytest.raises", "marshmallow.validate.Length"], "tests.test_deserialization.TestFieldDeserialization.test_email_field_non_list_validators": ["marshmallow.fields.Email", "pytest.raises", "marshmallow.validate.Length"], "tests.test_deserialization.TestFieldDeserialization.test_function_field_deserialization_is_noop_by_default": ["marshmallow.fields.Function"], "tests.test_deserialization.TestFieldDeserialization.test_function_field_deserialization_is_noop_by_default.<lambda1>": [], "tests.test_deserialization.TestFieldDeserialization.test_function_field_deserialization_with_callable": ["marshmallow.fields.Function"], "tests.test_deserialization.TestFieldDeserialization.test_function_field_deserialization_with_callable.<lambda1>": [], "tests.test_deserialization.TestFieldDeserialization.test_function_field_deserialization_with_callable.<lambda2>": [], "tests.test_deserialization.TestFieldDeserialization.test_function_field_deserialization_with_context": ["marshmallow.fields.Function", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestFieldDeserialization.test_function_field_deserialization_with_context.<lambda1>": [], "tests.test_deserialization.TestFieldDeserialization.test_function_field_deserialization_with_context.<lambda2>": [], "tests.test_deserialization.TestFieldDeserialization.test_function_field_passed_deserialize_only_is_load_only": ["marshmallow.fields.Function"], "tests.test_deserialization.TestFieldDeserialization.test_function_field_passed_deserialize_only_is_load_only.<lambda1>": [], "tests.test_deserialization.TestFieldDeserialization.test_function_field_passed_deserialize_and_serialize_is_not_load_only": ["marshmallow.fields.Function"], "tests.test_deserialization.TestFieldDeserialization.test_function_field_passed_deserialize_and_serialize_is_not_load_only.<lambda1>": [], "tests.test_deserialization.TestFieldDeserialization.test_function_field_passed_deserialize_and_serialize_is_not_load_only.<lambda2>": [], "tests.test_deserialization.TestFieldDeserialization.test_uuid_field_deserialization": ["marshmallow.fields.UUID", "<builtin>.isinstance", "<builtin>.str", "uuid.uuid4"], "uuid.uuid4": [], "tests.test_deserialization.TestFieldDeserialization.test_invalid_uuid_deserialization": ["marshmallow.fields.UUID", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_ip_field_deserialization": ["<builtin>.isinstance", "marshmallow.fields.IP", "<builtin>.str"], "tests.test_deserialization.TestFieldDeserialization.test_invalid_ip_deserialization": ["pytest.raises", "marshmallow.fields.IP"], "tests.test_deserialization.TestFieldDeserialization.test_ipv4_field_deserialization": ["<builtin>.isinstance", "<builtin>.str", "marshmallow.fields.IPv4"], "tests.test_deserialization.TestFieldDeserialization.test_invalid_ipv4_deserialization": ["pytest.raises", "marshmallow.fields.IPv4"], "tests.test_deserialization.TestFieldDeserialization.test_ipv6_field_deserialization": ["<builtin>.isinstance", "marshmallow.fields.IPv6", "<builtin>.str"], "tests.test_deserialization.TestFieldDeserialization.test_ipinterface_field_deserialization": ["<builtin>.isinstance", "marshmallow.fields.IPInterface", "<builtin>.str"], "tests.test_deserialization.TestFieldDeserialization.test_invalid_ipinterface_deserialization": ["pytest.raises", "marshmallow.fields.IPInterface"], "tests.test_deserialization.TestFieldDeserialization.test_ipv4interface_field_deserialization": ["<builtin>.isinstance", "marshmallow.fields.IPv4Interface", "<builtin>.str"], "tests.test_deserialization.TestFieldDeserialization.test_invalid_ipv4interface_deserialization": ["pytest.raises", "marshmallow.fields.IPv4Interface"], "tests.test_deserialization.TestFieldDeserialization.test_ipv6interface_field_deserialization": ["<builtin>.isinstance", "marshmallow.fields.IPv6Interface", "<builtin>.str"], "tests.test_deserialization.TestFieldDeserialization.test_invalid_ipv6interface_deserialization": ["pytest.raises", "marshmallow.fields.IPv6Interface"], "tests.test_deserialization.TestFieldDeserialization.test_enum_field_by_symbol_deserialization": ["marshmallow.fields.Enum"], "tests.test_deserialization.TestFieldDeserialization.test_enum_field_by_symbol_invalid_value": ["pytest.raises", "marshmallow.fields.Enum"], "tests.test_deserialization.TestFieldDeserialization.test_enum_field_by_symbol_not_string": ["pytest.raises", "marshmallow.fields.Enum"], "tests.test_deserialization.TestFieldDeserialization.test_enum_field_by_value_true_deserialization": ["marshmallow.fields.Enum"], "tests.test_deserialization.TestFieldDeserialization.test_enum_field_by_value_field_deserialization": ["marshmallow.fields.Date", "marshmallow.fields.Enum"], "tests.test_deserialization.TestFieldDeserialization.test_enum_field_by_value_true_invalid_value": ["pytest.raises", "marshmallow.fields.Enum"], "tests.test_deserialization.TestFieldDeserialization.test_enum_field_by_value_field_invalid_value": ["marshmallow.fields.Date", "pytest.raises", "marshmallow.fields.Enum"], "tests.test_deserialization.TestFieldDeserialization.test_enum_field_by_value_true_wrong_type": ["pytest.raises", "marshmallow.fields.Enum"], "tests.test_deserialization.TestFieldDeserialization.test_enum_field_by_value_field_wrong_type": ["marshmallow.fields.Date", "pytest.raises", "marshmallow.fields.Enum"], "tests.test_deserialization.TestFieldDeserialization.test_deserialization_function_must_be_callable": ["pytest.raises", "marshmallow.fields.Function"], "tests.test_deserialization.TestFieldDeserialization.test_deserialization_function_must_be_callable.<lambda1>": [], "tests.test_deserialization.TestFieldDeserialization.test_method_field_deserialization_is_noop_by_default": ["marshmallow.Schema.__init__"], "tests.test_deserialization.TestFieldDeserialization.test_method_field_deserialization_is_noop_by_default.MiniUserSchema": ["marshmallow.fields.Method"], "tests.test_deserialization.TestFieldDeserialization.test_method_field_deserialization_is_noop_by_default.MiniUserSchema.uppercase_name": [], "tests.test_deserialization.TestFieldDeserialization.test_deserialization_method": ["marshmallow.Schema.__init__"], "tests.test_deserialization.TestFieldDeserialization.test_deserialization_method.MiniUserSchema": ["marshmallow.fields.Method"], "tests.test_deserialization.TestFieldDeserialization.test_deserialization_method.MiniUserSchema.uppercase_name": [], "tests.test_deserialization.TestFieldDeserialization.test_deserialization_method.MiniUserSchema.lowercase_name": [], "tests.test_deserialization.TestFieldDeserialization.test_deserialization_method_must_be_a_method": ["pytest.raises", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestFieldDeserialization.test_deserialization_method_must_be_a_method.BadSchema": ["marshmallow.fields.Method"], "tests.test_deserialization.TestFieldDeserialization.test_method_field_deserialize_only": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestFieldDeserialization.test_method_field_deserialize_only.MethodDeserializeOnly": ["marshmallow.fields.Method"], "tests.test_deserialization.TestFieldDeserialization.test_method_field_deserialize_only.MethodDeserializeOnly.lowercase_name": [], "tests.test_deserialization.TestFieldDeserialization.test_datetime_list_field_deserialization": ["marshmallow.fields.DateTime", "<builtin>.isinstance", "<builtin>.zip", "tests.base.assert_date_equal", "<builtin>.all", "marshmallow.fields.List", "datetime.datetime.now", "datetime.datetime.utcnow"], "tests.test_deserialization.TestFieldDeserialization.test_list_field_deserialize_invalid_item": ["marshmallow.fields.Str", "marshmallow.fields.List", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_list_field_deserialize_multiple_invalid_items": ["marshmallow.fields.Int", "marshmallow.fields.List", "marshmallow.validate.Range", "<builtin>.len", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_list_field_deserialize_value_that_is_not_a_list": ["marshmallow.fields.Str", "pytest.raises", "marshmallow.fields.List"], "tests.test_deserialization.TestFieldDeserialization.test_datetime_int_tuple_field_deserialization": ["marshmallow.fields.DateTime", "<builtin>.isinstance", "<builtin>.zip", "marshmallow.fields.Tuple", "marshmallow.fields.Integer", "<builtin>.len", "datetime.datetime.now"], "tests.test_deserialization.TestFieldDeserialization.test_tuple_field_deserialize_invalid_item": ["marshmallow.fields.Tuple", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_tuple_field_deserialize_multiple_invalid_items": ["marshmallow.fields.Tuple", "marshmallow.fields.Int", "<builtin>.len", "marshmallow.validate.Range", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_tuple_field_deserialize_value_that_is_not_a_collection": ["marshmallow.fields.Str", "marshmallow.fields.Tuple", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_tuple_field_deserialize_invalid_length": ["marshmallow.fields.Str", "marshmallow.fields.Tuple", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_constant_field_deserialization": ["marshmallow.fields.Constant"], "tests.test_deserialization.TestFieldDeserialization.test_constant_is_always_included_in_deserialized_data": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestFieldDeserialization.test_constant_is_always_included_in_deserialized_data.MySchema": ["marshmallow.fields.Constant"], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validator_function": ["marshmallow.fields.String", "pytest.raises", "<builtin>.type"], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validator_function.<lambda1>": [], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validator_class_that_returns_bool": ["marshmallow.fields.Field", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validator_class_that_returns_bool.MyValidator.__call__": [], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validator_that_raises_error_with_list": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validator_that_raises_error_with_list.validator": ["marshmallow.exceptions.ValidationError"], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validator_that_raises_error_with_list.MySchema": ["marshmallow.fields.Field"], "tests.test_deserialization.TestFieldDeserialization.test_validator_must_return_false_to_raise_error": ["marshmallow.fields.String", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_validator_must_return_false_to_raise_error.<lambda1>": [], "tests.test_deserialization.TestFieldDeserialization.test_validator_must_return_false_to_raise_error.<lambda2>": [], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_validator_with_nonascii_input": ["marshmallow.fields.String", "pytest.raises", "<builtin>.type"], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_validator_with_nonascii_input.<lambda1>": [], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validators": ["marshmallow.fields.String", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validators.<lambda1>": [], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validators.<lambda2>": [], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validators.<list1>.<list1>.<lambda1>": [], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validators.<list1>.<list1>.<lambda2>": [], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validators.<list1>.<lambda1>": [], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_user_validators.<list1>.<lambda2>": [], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_custom_error_message": ["marshmallow.fields.String", "pytest.raises"], "tests.test_deserialization.TestFieldDeserialization.test_field_deserialization_with_custom_error_message.<lambda1>": [], "tests.test_deserialization.SimpleUserSchema": ["marshmallow.fields.String", "marshmallow.fields.Float"], "tests.test_deserialization.Validator": ["marshmallow.fields.Email", "marshmallow.fields.Str", "marshmallow.validate.OneOf", "marshmallow.fields.Integer"], "tests.test_deserialization.Validator.<lambda1>": [], "tests.test_deserialization.Validators": ["marshmallow.fields.Email", "marshmallow.fields.Str", "marshmallow.validate.OneOf", "marshmallow.fields.Integer"], "tests.test_deserialization.Validators.<list2>.<lambda1>": [], "tests.test_deserialization.Validators.<list2>.<lambda2>": [], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_to_dict": ["marshmallow.Schema.load", "math.isclose", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_missing_values": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_many": ["<builtin>.isinstance", "marshmallow.Schema.load", "<builtin>.int", "marshmallow.Schema.__init__"], "<builtin>.int": [], "tests.test_deserialization.TestSchemaDeserialization.test_exclude": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_single_deserialization_to_dict": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_single_deserialization_to_dict.SimpleBlogSerializer": ["marshmallow.fields.String", "marshmallow.fields.Nested"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_list_deserialization_to_dict": ["<builtin>.isinstance", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_list_deserialization_to_dict.SimpleBlogSerializer": ["marshmallow.fields.String", "marshmallow.fields.Nested"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_single_none_not_allowed": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_single_none_not_allowed.PetSchema": ["marshmallow.fields.Str"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_single_none_not_allowed.OwnerSchema": ["marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_many_non_not_allowed": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_many_non_not_allowed.PetSchema": ["marshmallow.fields.Str"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_many_non_not_allowed.StoreSchema": ["marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_single_required_missing": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_single_required_missing.PetSchema": ["marshmallow.fields.Str"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_single_required_missing.OwnerSchema": ["marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_many_required_missing": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_many_required_missing.PetSchema": ["marshmallow.fields.Str"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_many_required_missing.StoreSchema": ["marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_only_basestring": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_only_basestring.ANestedSchema": ["marshmallow.fields.Str"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_only_basestring.MainSchema": ["marshmallow.fields.Str", "marshmallow.fields.Pluck"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_only_basestring_with_list_data": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_only_basestring_with_list_data.ANestedSchema": ["marshmallow.fields.Str"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_only_basestring_with_list_data.MainSchema": ["marshmallow.fields.Str", "marshmallow.fields.Pluck"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_none_deserialization": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_nested_none_deserialization.SimpleBlogSerializer": ["marshmallow.fields.String", "marshmallow.fields.Nested"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_attribute_param": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_attribute_param.AliasingUserSerializer": ["marshmallow.fields.Email", "marshmallow.fields.Integer"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_attribute_param_symmetry": ["marshmallow.Schema.load", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_attribute_param_symmetry.MySchema": ["marshmallow.fields.Field"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_attribute_param_error_returns_field_name_not_attribute_name": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_attribute_param_error_returns_field_name_not_attribute_name.AliasingUserSerializer": ["marshmallow.fields.Email", "marshmallow.fields.Integer"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_attribute_param_error_returns_data_key_not_attribute_name": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_attribute_param_error_returns_data_key_not_attribute_name.AliasingUserSerializer": ["marshmallow.fields.String", "marshmallow.fields.Email", "marshmallow.fields.Integer"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_data_key_param": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_data_key_param.AliasingUserSerializer": ["marshmallow.fields.String", "marshmallow.fields.Email", "marshmallow.fields.Integer"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_data_key_as_empty_string": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_data_key_as_empty_string.MySchema": ["marshmallow.fields.Field"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_dump_only_param": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_dump_only_param.AliasingUserSerializer": ["marshmallow.fields.String", "marshmallow.fields.Str", "marshmallow.fields.List", "marshmallow.fields.Integer"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_missing_param_value": ["marshmallow.Schema.__init__", "datetime.datetime", "marshmallow.Schema.load"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_missing_param_value.AliasingUserSerializer": ["marshmallow.fields.String", "marshmallow.fields.DateTime"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_missing_param_callable": ["marshmallow.Schema.__init__", "datetime.datetime", "marshmallow.Schema.load"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_missing_param_callable.AliasingUserSerializer": ["marshmallow.fields.String", "marshmallow.fields.DateTime"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_missing_param_callable.AliasingUserSerializer.<lambda1>": [], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_missing_param_none": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialize_with_missing_param_none.AliasingUserSerializer": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialization_raises_with_errors": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialization_raises_with_errors_with_multiple_validators": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_deserialization_many_raises_errors": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_validation_errors_are_stored": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_validation_errors_are_stored.validate_field": ["marshmallow.exceptions.ValidationError"], "tests.test_deserialization.TestSchemaDeserialization.test_validation_errors_are_stored.MySchema": ["marshmallow.fields.Field"], "tests.test_deserialization.TestSchemaDeserialization.test_multiple_errors_can_be_stored_for_a_field": ["<builtin>.type", "marshmallow.Schema.__init__", "<builtin>.len", "marshmallow.Schema.load", "pytest.raises"], "tests.test_deserialization.TestSchemaDeserialization.test_multiple_errors_can_be_stored_for_a_field.validate_with_bool": [], "tests.test_deserialization.TestSchemaDeserialization.test_multiple_errors_can_be_stored_for_a_field.validate_with_error": ["marshmallow.exceptions.ValidationError"], "tests.test_deserialization.TestSchemaDeserialization.test_multiple_errors_can_be_stored_for_a_field.MySchema": ["marshmallow.fields.Field"], "tests.test_deserialization.TestSchemaDeserialization.test_multiple_errors_can_be_stored_for_an_email_field": ["<builtin>.len", "pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_multiple_errors_can_be_stored_for_an_email_field.validate_with_bool": [], "tests.test_deserialization.TestSchemaDeserialization.test_multiple_errors_can_be_stored_for_an_email_field.MySchema": ["marshmallow.fields.Email"], "tests.test_deserialization.TestSchemaDeserialization.test_multiple_errors_can_be_stored_for_a_url_field": ["<builtin>.len", "pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_multiple_errors_can_be_stored_for_a_url_field.validate_with_bool": [], "tests.test_deserialization.TestSchemaDeserialization.test_multiple_errors_can_be_stored_for_a_url_field.MySchema": ["marshmallow.fields.Url"], "tests.test_deserialization.TestSchemaDeserialization.test_required_value_only_passed_to_validators_if_provided": ["<builtin>.len", "pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_required_value_only_passed_to_validators_if_provided.MySchema.<lambda1>": [], "tests.test_deserialization.TestSchemaDeserialization.test_required_value_only_passed_to_validators_if_provided.MySchema": ["marshmallow.fields.Field"], "tests.test_deserialization.TestSchemaDeserialization": ["pytest.mark.parametrize"], "tests.test_deserialization.TestSchemaDeserialization.test_partial_deserialization": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_partial_deserialization.MySchema": ["marshmallow.fields.Field"], "tests.test_deserialization.TestSchemaDeserialization.test_partial_fields_deserialization": ["<builtin>.tuple", "pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_partial_fields_deserialization.MySchema": ["marshmallow.fields.Field"], "tests.test_deserialization.TestSchemaDeserialization.test_partial_fields_validation": ["<builtin>.tuple", "marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_deserialization.TestSchemaDeserialization.test_partial_fields_validation.MySchema": ["marshmallow.fields.Field"], "tests.test_deserialization.TestSchemaDeserialization.test_unknown_fields_deserialization": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_unknown_fields_deserialization.MySchema": ["marshmallow.fields.Integer"], "tests.test_deserialization.TestSchemaDeserialization.test_unknown_fields_deserialization_precedence": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_unknown_fields_deserialization_precedence.MySchema": ["marshmallow.fields.Integer"], "tests.test_deserialization.TestSchemaDeserialization.test_unknown_fields_deserialization_with_data_key": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_unknown_fields_deserialization_with_data_key.MySchema": ["marshmallow.fields.Integer"], "tests.test_deserialization.TestSchemaDeserialization.test_unknown_fields_deserialization_with_index_errors_false": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_unknown_fields_deserialization_with_index_errors_false.MySchema": ["marshmallow.fields.Integer"], "tests.test_deserialization.TestSchemaDeserialization.test_dump_only_fields_considered_unknown": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_dump_only_fields_considered_unknown.MySchema": ["marshmallow.fields.Int"], "tests.test_deserialization.TestSchemaDeserialization.test_unknown_fields_do_not_unpack_dotted_names": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestSchemaDeserialization.test_unknown_fields_do_not_unpack_dotted_names.MySchema": ["marshmallow.fields.Str"], "tests.test_deserialization.<list1>.<lambda1>": [], "tests.test_deserialization.<list1>.<lambda2>": [], "tests.test_deserialization.<list2>.<lambda1>": [], "tests.test_deserialization.<list2>.<lambda2>": [], "tests.test_deserialization.<list3>.<lambda1>": [], "tests.test_deserialization.<lambda1>": ["<builtin>.len"], "tests.test_deserialization.<list3>.<lambda2>": [], "tests.test_deserialization.TestValidation.test_integer_with_validator": ["pytest.raises", "marshmallow.fields.Integer"], "tests.test_deserialization.TestValidation.test_integer_with_validator.<lambda1>": [], "tests.test_deserialization.TestValidation": ["pytest.mark.parametrize"], "tests.test_deserialization.TestValidation.test_integer_with_validators": ["pytest.raises"], "tests.test_deserialization.TestValidation.test_float_with_validators": ["pytest.raises"], "tests.test_deserialization.TestValidation.test_string_validator": ["marshmallow.fields.String", "pytest.raises"], "tests.test_deserialization.TestValidation.test_string_validator.<lambda1>": ["<builtin>.len"], "tests.test_deserialization.TestValidation.test_function_validator": ["pytest.raises", "marshmallow.fields.Function"], "tests.test_deserialization.TestValidation.test_function_validator.<lambda1>": [], "tests.test_deserialization.TestValidation.test_function_validator.<lambda2>": ["<builtin>.len"], "tests.test_deserialization.TestValidation.test_function_validators": ["pytest.raises"], "tests.test_deserialization.TestValidation.test_method_validator": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestValidation.test_method_validator.MethodSerializer.<lambda1>": ["<builtin>.len"], "tests.test_deserialization.TestValidation.test_method_validator.MethodSerializer": ["marshmallow.fields.Method"], "tests.test_deserialization.TestValidation.test_method_validator.MethodSerializer.get_name": [], "tests.test_deserialization.TestValidation.test_nested_data_is_stored_when_validation_fails": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestValidation.test_nested_data_is_stored_when_validation_fails.SchemaA": ["marshmallow.fields.Integer"], "tests.test_deserialization.TestValidation.test_nested_data_is_stored_when_validation_fails.SchemaA.<lambda1>": [], "tests.test_deserialization.TestValidation.test_nested_data_is_stored_when_validation_fails.SchemaB": ["marshmallow.fields.Nested", "marshmallow.fields.Integer"], "tests.test_deserialization.TestValidation.test_false_value_validation": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_deserialization.TestValidation.test_false_value_validation.Sch.<lambda1>": [], "marshmallow.fields.Raw": [], "tests.test_deserialization.TestValidation.test_false_value_validation.Sch": ["marshmallow.fields.Raw", "marshmallow.validate.Equal"], "tests.test_deserialization.TestValidation.test_nested_partial_load": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestValidation.test_nested_partial_load.SchemaA": ["marshmallow.fields.Integer"], "tests.test_deserialization.TestValidation.test_nested_partial_load.SchemaB": ["marshmallow.fields.Nested"], "tests.test_deserialization.TestValidation.test_deeply_nested_partial_load": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestValidation.test_deeply_nested_partial_load.SchemaC": ["marshmallow.fields.Integer"], "tests.test_deserialization.TestValidation.test_deeply_nested_partial_load.SchemaB": ["marshmallow.fields.Nested"], "tests.test_deserialization.TestValidation.test_deeply_nested_partial_load.SchemaA": ["marshmallow.fields.Nested"], "tests.test_deserialization.TestValidation.test_nested_partial_tuple": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.TestValidation.test_nested_partial_tuple.SchemaA": ["marshmallow.fields.Integer"], "tests.test_deserialization.TestValidation.test_nested_partial_tuple.SchemaB": ["marshmallow.fields.Nested"], "tests.test_deserialization.test_required_field_failure": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_deserialization.test_required_message_can_be_changed": ["pytest.raises", "marshmallow.Schema.load", "<builtin>.isinstance", "marshmallow.Schema.__init__"], "tests.test_deserialization.test_required_message_can_be_changed.RequireSchema": ["marshmallow.fields.Integer"], "tests.test_deserialization.test_deserialize_raises_exception_if_input_type_is_incorrect": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__", "<builtin>.list"], "tests.test_deserialization.test_deserialize_raises_exception_if_input_type_is_incorrect.MySchema": ["marshmallow.fields.Field"], "tests.test_exceptions": [], "tests.test_exceptions.TestValidationError.test_stores_message_in_list": ["marshmallow.exceptions.ValidationError"], "tests.test_exceptions.TestValidationError.test_can_pass_list_of_messages": ["marshmallow.exceptions.ValidationError"], "tests.test_exceptions.TestValidationError.test_stores_dictionaries": ["marshmallow.exceptions.ValidationError"], "tests.test_exceptions.TestValidationError.test_can_store_field_name": ["marshmallow.exceptions.ValidationError"], "tests.test_exceptions.TestValidationError.test_str": ["marshmallow.exceptions.ValidationError", "<builtin>.str"], "tests.test_exceptions.TestValidationError.test_stores_dictionaries_in_messages_dict": ["marshmallow.exceptions.ValidationError"], "tests.test_exceptions.TestValidationError.test_messages_dict_type_error_on_badval": ["marshmallow.exceptions.ValidationError", "pytest.raises", "<builtin>.str"], "tests.test_options": [], "tests.test_options.TestUnordered.UnorderedSchema": ["marshmallow.fields.Str"], "tests.test_options.TestUnordered.test_unordered_dump_returns_dict": ["<builtin>.type", "<builtin>.isinstance", "marshmallow.Schema.__init__", "marshmallow.Schema.dump", "tests.base.User.__init__"], "tests.test_options.TestUnordered.test_unordered_load_returns_dict": ["<builtin>.type", "<builtin>.isinstance", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_options.KeepOrder": ["marshmallow.fields.String", "marshmallow.fields.DateTime", "marshmallow.fields.Date", "marshmallow.fields.Integer", "marshmallow.fields.Email", "marshmallow.fields.Url"], "tests.test_options.OrderedMetaSchema": ["marshmallow.fields.Int", "marshmallow.fields.Email"], "tests.test_options.OrderedNestedOnly": ["marshmallow.fields.Nested"], "tests.test_options.TestFieldOrdering": ["pytest.mark.parametrize"], "tests.test_options.TestFieldOrdering.test_ordered_option_is_inherited": ["marshmallow.Schema.__init__", "<builtin>.list", "marshmallow.Schema.dump"], "tests.test_options.TestFieldOrdering.test_ordering_is_off_by_default": ["marshmallow.Schema.__init__"], "tests.test_options.TestFieldOrdering.test_declared_field_order_is_maintained_on_dump": ["marshmallow.Schema.__init__", "<builtin>.list", "marshmallow.Schema.dump"], "tests.test_options.TestFieldOrdering.test_declared_field_order_is_maintained_on_load": ["marshmallow.Schema.load", "marshmallow.Schema.__init__", "<builtin>.list"], "tests.test_options.TestFieldOrdering.test_nested_field_order_with_only_arg_is_maintained_on_dump": ["marshmallow.Schema.__init__", "<builtin>.list", "marshmallow.Schema.dump"], "tests.test_options.TestFieldOrdering.test_nested_field_order_with_only_arg_is_maintained_on_load": ["datetime.datetime.now", "marshmallow.Schema.load", "marshmallow.Schema.__init__", "<builtin>.list"], "tests.test_options.TestFieldOrdering.test_nested_field_order_with_exclude_arg_is_maintained": ["marshmallow.Schema.__init__", "<builtin>.list", "marshmallow.Schema.dump"], "tests.test_options.TestFieldOrdering.test_nested_field_order_with_exclude_arg_is_maintained.HasNestedExclude": ["marshmallow.fields.Nested"], "tests.test_options.TestFieldOrdering.test_meta_fields_order_is_maintained_on_dump": ["marshmallow.Schema.__init__", "<builtin>.list", "marshmallow.Schema.dump"], "tests.test_options.TestFieldOrdering.test_meta_fields_order_is_maintained_on_load": ["marshmallow.Schema.load", "marshmallow.Schema.__init__", "<builtin>.list"], "tests.test_options.TestIncludeOption.AddFieldsSchema": ["marshmallow.fields.Str"], "tests.test_options.TestIncludeOption.AddFieldsSchema.Meta": ["marshmallow.fields.Str"], "tests.test_options.TestIncludeOption.test_fields_are_added": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_options.TestIncludeOption.test_ordered_included": ["marshmallow.Schema.load", "marshmallow.Schema._declared_fields.keys", "marshmallow.Schema.__init__", "<builtin>.list"], "tests.test_options.TestIncludeOption.test_ordered_included.AddFieldsOrdered": ["marshmallow.fields.Str"], "tests.test_options.TestIncludeOption.test_ordered_included.AddFieldsOrdered.Meta": ["marshmallow.fields.Str"], "marshmallow.Schema._declared_fields.keys": [], "tests.test_options.TestIncludeOption.test_added_fields_are_inherited": ["<builtin>.isinstance", "marshmallow.Schema._declared_fields.keys", "marshmallow.Schema.__init__"], "tests.test_options.TestIncludeOption.test_added_fields_are_inherited.AddFieldsChild": ["marshmallow.fields.Str"], "tests.mypy_test_cases.test_validation_error": ["marshmallow.ValidationError"], "tests": [], "tests.test_fields": ["pytest.mark.parametrize"], "tests.test_fields.test_field_aliases": [], "tests.test_fields.TestField.test_repr": ["marshmallow.fields.Field", "marshmallow.fields.Integer", "<builtin>.repr"], "tests.test_fields.TestField.test_repr.<lambda1>": [], "tests.test_fields.TestField.test_error_raised_if_uncallable_validator_passed": ["marshmallow.fields.Field", "pytest.raises"], "tests.test_fields.TestField.test_error_raised_if_missing_is_set_on_required_field": ["marshmallow.fields.Field", "pytest.raises"], "tests.test_fields.TestField.test_custom_field_receives_attr_and_obj": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_fields.TestField.test_custom_field_receives_attr_and_obj.MyField._deserialize": [], "tests.test_fields.TestField.test_custom_field_receives_attr_and_obj.MySchema": ["marshmallow.fields.Field.__init__"], "tests.test_fields.TestField.test_custom_field_receives_data_key_if_set": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_fields.TestField.test_custom_field_receives_data_key_if_set.MyField._deserialize": [], "tests.test_fields.TestField.test_custom_field_receives_data_key_if_set.MySchema": ["marshmallow.fields.Field.__init__"], "tests.test_fields.TestField.test_custom_field_follows_data_key_if_set": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_fields.TestField.test_custom_field_follows_data_key_if_set.MyField._serialize": [], "tests.test_fields.TestField.test_custom_field_follows_data_key_if_set.MySchema": ["marshmallow.fields.Field.__init__"], "tests.test_fields.TestParentAndName.MySchema": ["marshmallow.fields.Str", "marshmallow.fields.Tuple", "marshmallow.fields.Mapping", "marshmallow.fields.Int", "marshmallow.fields.List", "marshmallow.fields.Field"], "marshmallow.fields.Mapping": [], "tests.test_fields.TestParentAndName": ["pytest.fixture"], "tests.test_fields.TestParentAndName.schema": ["marshmallow.Schema.__init__"], "tests.test_fields.TestParentAndName.test_simple_field_parent_and_name": [], "tests.test_fields.TestParentAndName.test_unbound_field_root_returns_none": ["marshmallow.fields.Str", "marshmallow.fields.Nested", "marshmallow.fields.List", "marshmallow.Schema.__init__"], "tests.test_fields.TestParentAndName.test_list_field_inner_parent_and_name": [], "tests.test_fields.TestParentAndName.test_tuple_field_inner_parent_and_name": [], "tests.test_fields.TestParentAndName.test_mapping_field_inner_parent_and_name": [], "tests.test_fields.TestParentAndName.test_simple_field_root": [], "tests.test_fields.TestParentAndName.test_list_field_inner_root": [], "tests.test_fields.TestParentAndName.test_tuple_field_inner_root": [], "tests.test_fields.TestParentAndName.test_list_root_inheritance": ["marshmallow.Schema.__init__"], "tests.test_fields.TestParentAndName.test_dict_root_inheritance": ["marshmallow.Schema.__init__"], "tests.test_fields.TestParentAndName.test_dict_root_inheritance.MySchema": ["marshmallow.fields.Int", "marshmallow.fields.Str", "marshmallow.fields.Dict"], "tests.test_fields.TestParentAndName.test_datetime_list_inner_format": ["marshmallow.Schema.__init__"], "tests.test_fields.TestParentAndName.test_datetime_list_inner_format.MySchema": ["marshmallow.fields.DateTime", "marshmallow.fields.List", "marshmallow.fields.Tuple", "marshmallow.fields.Date"], "tests.test_fields.TestParentAndName.test_field_named_parent_has_root": ["marshmallow.Schema.__init__"], "tests.test_fields.TestParentAndName.test_field_named_parent_has_root.MySchema": ["marshmallow.fields.Field"], "tests.test_fields.TestMetadata": ["pytest.mark.parametrize"], "tests.test_fields.TestMetadata.test_extra_metadata_may_be_added_to_field": ["pytest.warns"], "tests.test_fields.TestMetadata.test_extra_metadata_may_be_added_to_field.<lambda1>": [], "tests.test_fields.TestMetadata.test_field_metadata_added_in_deprecated_style_warns": ["pytest.warns"], "tests.test_fields.TestMetadata.test_field_metadata_added_in_deprecated_style_warns.<lambda1>": [], "tests.test_fields.TestDeprecatedDefaultAndMissing": ["pytest.mark.parametrize"], "tests.test_fields.TestDeprecatedDefaultAndMissing.test_load_default_in_deprecated_style_warns": ["pytest.warns"], "tests.test_fields.TestDeprecatedDefaultAndMissing.test_dump_default_in_deprecated_style_warns": ["pytest.warns"], "tests.test_fields.TestErrorMessages.test_default_error_messages_get_merged_with_parent_error_messages_cstm_msg": ["marshmallow.fields.Field.__init__"], "tests.test_fields.TestErrorMessages.test_default_error_messages_get_merged_with_parent_error_messages": ["marshmallow.fields.Field.__init__"], "tests.test_fields.TestErrorMessages": ["pytest.mark.parametrize"], "tests.test_fields.TestErrorMessages.test_make_error": ["marshmallow.fields.Field.make_error", "marshmallow.fields.Field.__init__"], "marshmallow.fields.Field.make_error": [], "tests.test_fields.TestErrorMessages.test_fail": ["marshmallow.fields.Field.__init__", "marshmallow.fields.Field.fail", "pytest.warns"], "marshmallow.fields.Field.fail": [], "tests.test_fields.TestErrorMessages.test_make_error_key_doesnt_exist": ["marshmallow.fields.Field.make_error", "marshmallow.fields.Field.__init__", "pytest.raises"], "tests.test_fields.TestNestedField": ["pytest.mark.parametrize"], "tests.test_fields.TestNestedField.test_nested_only_and_exclude_as_string": ["pytest.raises", "marshmallow.fields.Nested"], "tests.test_fields.TestNestedField.test_nested_instantiation_from_dict": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_fields.TestNestedField.test_nested_instantiation_from_dict.MySchema": ["marshmallow.fields.Nested"], "tests.test_fields.TestNestedField.test_nested_unknown_override": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_fields.TestNestedField.test_nested_unknown_override.MySchema": ["marshmallow.fields.Nested"], "tests.test_fields.TestNestedField.test_ordered_instanced_nested_schema_only_and_exclude": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_fields.TestNestedField.test_ordered_instanced_nested_schema_only_and_exclude.NestedSchema": ["marshmallow.fields.String"], "tests.test_fields.TestNestedField.test_ordered_instanced_nested_schema_only_and_exclude.MySchema": ["marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.test_fields.TestListNested": ["pytest.mark.parametrize"], "tests.test_fields.TestListNested.test_list_nested_only_exclude_dump_only_load_only_propagated_to_nested": ["<builtin>.getattr", "marshmallow.Schema.__init__"], "tests.test_fields.TestListNested.test_list_nested_only_exclude_dump_only_load_only_propagated_to_nested.Child": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_fields.TestListNested.test_list_nested_only_exclude_dump_only_load_only_propagated_to_nested.Family": ["marshmallow.fields.List", "marshmallow.fields.Nested"], "<builtin>.getattr": [], "tests.test_fields.TestListNested.test_list_nested_class_only_and_exclude_merged_with_nested": ["<builtin>.getattr", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_fields.TestListNested.test_list_nested_class_only_and_exclude_merged_with_nested.Child": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_fields.TestListNested.test_list_nested_class_only_and_exclude_merged_with_nested.Family": ["marshmallow.fields.List", "marshmallow.fields.Nested"], "tests.test_fields.TestListNested.test_list_nested_class_multiple_dumps": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_fields.TestListNested.test_list_nested_class_multiple_dumps.Child": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_fields.TestListNested.test_list_nested_class_multiple_dumps.Family": ["marshmallow.fields.List", "marshmallow.fields.Nested"], "tests.test_fields.TestListNested.test_list_nested_instance_only_and_exclude_merged_with_nested": ["<builtin>.getattr", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_fields.TestListNested.test_list_nested_instance_only_and_exclude_merged_with_nested.Child": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_fields.TestListNested.test_list_nested_instance_only_and_exclude_merged_with_nested.Family": ["marshmallow.fields.List", "marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.test_fields.TestListNested.test_list_nested_instance_multiple_dumps": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_fields.TestListNested.test_list_nested_instance_multiple_dumps.Child": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_fields.TestListNested.test_list_nested_instance_multiple_dumps.Family": ["marshmallow.fields.List", "marshmallow.fields.Nested", "marshmallow.Schema.__init__"], "tests.test_fields.TestListNested.test_list_nested_lambda_only_and_exclude_merged_with_nested": ["<builtin>.getattr", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_fields.TestListNested.test_list_nested_lambda_only_and_exclude_merged_with_nested.Child": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_fields.TestListNested.test_list_nested_lambda_only_and_exclude_merged_with_nested.Family.<lambda1>": ["marshmallow.Schema.__init__"], "tests.test_fields.TestListNested.test_list_nested_lambda_only_and_exclude_merged_with_nested.Family": ["marshmallow.fields.List", "marshmallow.fields.Nested"], "tests.test_fields.TestListNested.test_list_nested_partial_propagated_to_nested": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_fields.TestListNested.test_list_nested_partial_propagated_to_nested.Child": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_fields.TestListNested.test_list_nested_partial_propagated_to_nested.Family": ["marshmallow.fields.List", "marshmallow.fields.Nested"], "tests.test_fields.TestTupleNested": ["pytest.mark.parametrize"], "tests.test_fields.TestTupleNested.test_tuple_nested_only_exclude_dump_only_load_only_propagated_to_nested": ["<builtin>.getattr", "marshmallow.Schema.__init__"], "tests.test_fields.TestTupleNested.test_tuple_nested_only_exclude_dump_only_load_only_propagated_to_nested.Child": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_fields.TestTupleNested.test_tuple_nested_only_exclude_dump_only_load_only_propagated_to_nested.Family": ["marshmallow.fields.Tuple", "marshmallow.fields.Nested"], "tests.test_fields.TestTupleNested.test_tuple_nested_partial_propagated_to_nested": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_fields.TestTupleNested.test_tuple_nested_partial_propagated_to_nested.Child": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_fields.TestTupleNested.test_tuple_nested_partial_propagated_to_nested.Family": ["marshmallow.fields.Tuple", "marshmallow.fields.Nested"], "tests.test_fields.TestDictNested": ["pytest.mark.parametrize"], "tests.test_fields.TestDictNested.test_dict_nested_only_exclude_dump_only_load_only_propagated_to_nested": ["<builtin>.getattr", "marshmallow.Schema.__init__"], "tests.test_fields.TestDictNested.test_dict_nested_only_exclude_dump_only_load_only_propagated_to_nested.Child": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_fields.TestDictNested.test_dict_nested_only_exclude_dump_only_load_only_propagated_to_nested.Family": ["marshmallow.fields.Nested", "marshmallow.fields.Dict"], "tests.test_fields.TestDictNested.test_dict_nested_only_and_exclude_merged_with_nested": ["<builtin>.getattr", "marshmallow.Schema.__init__"], "tests.test_fields.TestDictNested.test_dict_nested_only_and_exclude_merged_with_nested.Child": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_fields.TestDictNested.test_dict_nested_only_and_exclude_merged_with_nested.Family": ["marshmallow.fields.Nested", "marshmallow.fields.Dict"], "tests.test_fields.TestDictNested.test_dict_nested_partial_propagated_to_nested": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_fields.TestDictNested.test_dict_nested_partial_propagated_to_nested.Child": ["marshmallow.fields.String", "marshmallow.fields.Integer"], "tests.test_fields.TestDictNested.test_dict_nested_partial_propagated_to_nested.Family": ["marshmallow.fields.Nested", "marshmallow.fields.Dict"], "tests.test_decorators": ["tests.test_decorators.Nested.__init__", "tests.test_decorators.Example.__init__", "<builtin>.range", "pytest.mark.parametrize"], "tests.test_decorators.test_decorated_processors": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump", "tests.test_decorators.test_decorated_processors.<lambda2>", "tests.test_decorators.test_decorated_processors.<lambda1>", "marshmallow.Schema.load"], "tests.test_decorators.test_decorated_processors.ExampleSchema": ["marshmallow.post_load", "marshmallow.pre_load", "marshmallow.fields.Integer", "marshmallow.pre_dump", "marshmallow.post_dump"], "marshmallow.pre_dump": [], "tests.test_decorators.test_decorated_processors.ExampleSchema.increment_value": [], "marshmallow.post_dump": [], "tests.test_decorators.test_decorated_processors.ExampleSchema.add_tag": [], "tests.test_decorators.test_decorated_processors.ExampleSchema.add_envelope": ["tests.test_decorators.test_decorated_processors.ExampleSchema.get_envelope_key"], "tests.test_decorators.test_decorated_processors.ExampleSchema.get_envelope_key": [], "marshmallow.pre_load": [], "tests.test_decorators.test_decorated_processors.ExampleSchema.remove_envelope": ["tests.test_decorators.test_decorated_processors.ExampleSchema.get_envelope_key"], "tests.test_decorators.test_decorated_processors.ExampleSchema.remove_tag": ["<builtin>.len"], "tests.test_decorators.test_decorated_processors.ExampleSchema.decrement_value": [], "tests.test_decorators.test_decorated_processors.<lambda1>": [], "tests.test_decorators.test_decorated_processors.<lambda2>": ["tests.test_decorators.test_decorated_processors.<lambda1>"], "tests.test_decorators.test_decorated_processor_returning_none": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_decorators.test_decorated_processor_returning_none.PostSchema": ["marshmallow.post_dump", "marshmallow.post_load", "marshmallow.fields.Integer"], "tests.test_decorators.test_decorated_processor_returning_none.PostSchema.load_none": [], "tests.test_decorators.test_decorated_processor_returning_none.PostSchema.dump_none": [], "tests.test_decorators.test_decorated_processor_returning_none.PreSchema": ["marshmallow.pre_load", "marshmallow.fields.Integer", "marshmallow.pre_dump"], "tests.test_decorators.test_decorated_processor_returning_none.PreSchema.load_none": [], "tests.test_decorators.test_decorated_processor_returning_none.PreSchema.dump_none": [], "tests.test_decorators.TestPassOriginal.test_pass_original_single": ["marshmallow.Schema.load", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_decorators.TestPassOriginal.test_pass_original_single.MySchema": ["tests.test_decorators.TestPassOriginal.test_pass_original_single.MySchema.post_dump.ret", "marshmallow.fields.Field", "tests.test_decorators.TestPassOriginal.test_pass_original_single.MySchema.post_load.ret", "tests.test_decorators.TestPassOriginal.test_pass_original_single.MySchema.post_load", "tests.test_decorators.TestPassOriginal.test_pass_original_single.MySchema.post_dump"], "tests.test_decorators.TestPassOriginal.test_pass_original_single.MySchema.post_load": [], "tests.test_decorators.TestPassOriginal.test_pass_original_single.MySchema.post_load.ret": [], "tests.test_decorators.TestPassOriginal.test_pass_original_single.MySchema.post_dump": [], "tests.test_decorators.TestPassOriginal.test_pass_original_single.MySchema.post_dump.ret": [], "tests.test_decorators.TestPassOriginal.test_pass_original_many": ["marshmallow.Schema.load", "marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_decorators.TestPassOriginal.test_pass_original_many.MySchema": ["tests.test_decorators.TestPassOriginal.test_pass_original_many.MySchema.post_load.<list1>", "tests.test_decorators.TestPassOriginal.test_pass_original_many.MySchema.post_dump.<list1>", "marshmallow.fields.Field", "tests.test_decorators.TestPassOriginal.test_pass_original_many.MySchema.post_load", "tests.test_decorators.TestPassOriginal.test_pass_original_many.MySchema.post_dump"], "tests.test_decorators.TestPassOriginal.test_pass_original_many.MySchema.post_load": ["<builtin>.zip"], "tests.test_decorators.TestPassOriginal.test_pass_original_many.MySchema.post_load.<list1>": [], "tests.test_decorators.TestPassOriginal.test_pass_original_many.MySchema.post_dump": ["<builtin>.zip"], "tests.test_decorators.TestPassOriginal.test_pass_original_many.MySchema.post_dump.<list1>": [], "tests.test_decorators.test_decorated_processor_inheritance": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_decorators.test_decorated_processor_inheritance.ParentSchema": ["marshmallow.post_dump"], "tests.test_decorators.test_decorated_processor_inheritance.ParentSchema.inherited": [], "tests.test_decorators.test_decorated_processor_inheritance.ParentSchema.overridden": [], "tests.test_decorators.test_decorated_processor_inheritance.ParentSchema.deleted": [], "tests.test_decorators.test_decorated_processor_inheritance.ChildSchema": ["marshmallow.post_dump"], "tests.test_decorators.test_decorated_processor_inheritance.ChildSchema.overridden": [], "tests.test_decorators.test_pre_dump_is_invoked_before_implicit_field_generation": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_decorators.test_pre_dump_is_invoked_before_implicit_field_generation.Foo": ["marshmallow.fields.Integer", "marshmallow.pre_dump"], "tests.test_decorators.test_pre_dump_is_invoked_before_implicit_field_generation.Foo.hook": [], "tests.test_decorators.ValidatesSchema": ["marshmallow.fields.Int", "marshmallow.validates"], "tests.test_decorators.ValidatesSchema.validate_foo": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesDecorator.test_validates": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_decorators.TestValidatesDecorator.test_validates.VSchema": ["marshmallow.fields.String", "marshmallow.validates"], "tests.test_decorators.TestValidatesDecorator.test_validates.VSchema.validate_string": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesDecorator.test_validates_with_attribute": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_decorators.TestValidatesDecorator.test_validates_with_attribute.S1": ["marshmallow.fields.String", "marshmallow.validates"], "tests.test_decorators.TestValidatesDecorator.test_validates_with_attribute.S1.validate_string": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesDecorator.test_validates_decorator": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate", "<builtin>.len", "marshmallow.Schema.load", "pytest.raises"], "tests.test_decorators.TestValidatesDecorator.test_field_not_present": ["pytest.raises", "marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesDecorator.test_field_not_present.BadSchema": ["marshmallow.validates"], "tests.test_decorators.TestValidatesDecorator.test_field_not_present.BadSchema.validate_bar": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesDecorator.test_precedence": ["<builtin>.len", "marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesDecorator.test_precedence.Schema2.<lambda1>": [], "tests.test_decorators.TestValidatesDecorator.test_precedence.Schema2": ["marshmallow.fields.Int", "marshmallow.validates"], "tests.test_decorators.TestValidatesDecorator.test_precedence.Schema2.<lambda2>": [], "tests.test_decorators.TestValidatesDecorator.test_precedence.Schema2.validate_bar": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesDecorator.test_validates_with_data_key": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesDecorator.test_validates_with_data_key.BadSchema": ["marshmallow.fields.String", "marshmallow.validates"], "tests.test_decorators.TestValidatesDecorator.test_validates_with_data_key.BadSchema.validate_string": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_invalid_data": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_invalid_data.NestedSchema": ["marshmallow.fields.Int"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_invalid_data.MySchema": ["marshmallow.fields.Nested"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_schema_error": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_schema_error.NestedSchema": ["marshmallow.fields.Int", "marshmallow.validates_schema"], "marshmallow.validates_schema": [], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_schema_error.NestedSchema.validate_schema": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_schema_error.MySchema": ["marshmallow.fields.Nested"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_field_error": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_field_error.NestedSchema": ["marshmallow.fields.Int", "marshmallow.validates_schema"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_field_error.NestedSchema.validate_schema": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_field_error.MySchema": ["marshmallow.fields.Nested"], "tests.test_decorators.TestValidatesSchemaDecorator": ["pytest.mark.parametrize"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_pass_original_and_pass_many": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_pass_original_and_pass_many.NestedSchema": ["marshmallow.fields.Int", "marshmallow.validates_schema"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_pass_original_and_pass_many.NestedSchema.validate_schema": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_validator_nested_many_pass_original_and_pass_many.MySchema": ["marshmallow.fields.Nested"], "tests.test_decorators.TestValidatesSchemaDecorator.test_decorated_validators": ["<builtin>.len", "marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesSchemaDecorator.test_decorated_validators.MySchema": ["marshmallow.fields.Int", "marshmallow.validates_schema"], "tests.test_decorators.TestValidatesSchemaDecorator.test_decorated_validators.MySchema.validate_schema": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_decorated_validators.MySchema.validate_raw": ["<builtin>.type", "<builtin>.len", "marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_decorated_validators.MySchema.validate_bar": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_multiple_validators": ["<builtin>.type", "<builtin>.len", "marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesSchemaDecorator.test_multiple_validators.MySchema": ["marshmallow.fields.Int", "marshmallow.validates_schema"], "tests.test_decorators.TestValidatesSchemaDecorator.test_multiple_validators.MySchema.validate_schema": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_multiple_validators.MySchema.validate_bar": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_multiple_validators_merge_dict_errors": ["pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_decorators.TestValidatesSchemaDecorator.test_multiple_validators_merge_dict_errors.NestedSchema": ["marshmallow.fields.Int"], "tests.test_decorators.TestValidatesSchemaDecorator.test_multiple_validators_merge_dict_errors.MySchema": ["marshmallow.validates_schema", "marshmallow.fields.Nested"], "tests.test_decorators.TestValidatesSchemaDecorator.test_multiple_validators_merge_dict_errors.MySchema.validate_nested_foo": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_multiple_validators_merge_dict_errors.MySchema.validate_nested_bar_1": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_multiple_validators_merge_dict_errors.MySchema.validate_nested_bar_2": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_passing_original_data": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesSchemaDecorator.test_passing_original_data.MySchema": ["marshmallow.fields.Int", "marshmallow.validates_schema"], "tests.test_decorators.TestValidatesSchemaDecorator.test_passing_original_data.MySchema.validate_original": ["<builtin>.isinstance", "marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_passing_original_data.MySchema.validate_original_bar": ["tests.test_decorators.TestValidatesSchemaDecorator.test_passing_original_data.MySchema.validate_original_bar.check"], "tests.test_decorators.TestValidatesSchemaDecorator.test_passing_original_data.MySchema.validate_original_bar.check": ["<builtin>.isinstance", "marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_allow_reporting_field_errors_in_schema_validator": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesSchemaDecorator.test_allow_reporting_field_errors_in_schema_validator.NestedSchema": ["marshmallow.fields.Int"], "tests.test_decorators.TestValidatesSchemaDecorator.test_allow_reporting_field_errors_in_schema_validator.MySchema": ["marshmallow.fields.Int", "marshmallow.fields.Nested", "marshmallow.validates_schema"], "tests.test_decorators.TestValidatesSchemaDecorator.test_allow_reporting_field_errors_in_schema_validator.MySchema.consistency_validation": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_allow_arbitrary_field_names_in_error": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesSchemaDecorator.test_allow_arbitrary_field_names_in_error.MySchema": ["marshmallow.validates_schema"], "tests.test_decorators.TestValidatesSchemaDecorator.test_allow_arbitrary_field_names_in_error.MySchema.validator": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_skip_on_field_errors": ["marshmallow.Schema.__init__", "marshmallow.Schema.validate"], "tests.test_decorators.TestValidatesSchemaDecorator.test_skip_on_field_errors.MySchema.<lambda1>": [], "tests.test_decorators.TestValidatesSchemaDecorator.test_skip_on_field_errors.MySchema": ["marshmallow.fields.Int", "marshmallow.validates_schema"], "tests.test_decorators.TestValidatesSchemaDecorator.test_skip_on_field_errors.MySchema.validate_schema": ["marshmallow.ValidationError"], "tests.test_decorators.TestValidatesSchemaDecorator.test_skip_on_field_errors.MySchema.validate_many": ["<builtin>.type", "<builtin>.len", "marshmallow.ValidationError"], "tests.test_decorators.test_decorator_error_handling": ["<builtin>.len", "pytest.raises", "marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_decorators.test_decorator_error_handling.ExampleSchema": ["marshmallow.fields.Int", "marshmallow.pre_load", "marshmallow.post_load"], "tests.test_decorators.test_decorator_error_handling.ExampleSchema.pre_load_error1": ["marshmallow.ValidationError"], "tests.test_decorators.test_decorator_error_handling.ExampleSchema.pre_load_error2": ["marshmallow.ValidationError"], "tests.test_decorators.test_decorator_error_handling.ExampleSchema.pre_load_error3": ["marshmallow.ValidationError"], "tests.test_decorators.test_decorator_error_handling.ExampleSchema.post_load_error1": ["marshmallow.ValidationError"], "tests.test_decorators.test_decorator_error_handling.ExampleSchema.post_load_error2": ["marshmallow.ValidationError"], "tests.test_decorators.test_decorator_error_handling.make_item": ["marshmallow.Schema.load"], "tests.test_decorators.test_decorator_error_handling_with_load": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump", "marshmallow.Schema.load", "pytest.raises", "<builtin>.object"], "tests.test_decorators.test_decorator_error_handling_with_load.ExampleSchema": ["tests.test_decorators.test_decorator_error_handling_with_load.decorator"], "tests.test_decorators.test_decorator_error_handling_with_load.decorator": [], "tests.test_decorators.test_decorator_error_handling_with_load.ExampleSchema.raise_value_error": ["marshmallow.ValidationError"], "tests.test_decorators.test_decorator_error_handling_with_load_dict_error": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump", "marshmallow.Schema.load", "pytest.raises", "<builtin>.object"], "tests.test_decorators.test_decorator_error_handling_with_load_dict_error.ExampleSchema": ["tests.test_decorators.test_decorator_error_handling_with_load_dict_error.decorator"], "tests.test_decorators.test_decorator_error_handling_with_load_dict_error.decorator": [], "tests.test_decorators.test_decorator_error_handling_with_load_dict_error.ExampleSchema.raise_value_error": ["marshmallow.ValidationError"], "tests.test_decorators.test_decorator_error_handling_with_dump": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump", "marshmallow.Schema.load", "pytest.raises", "<builtin>.object"], "tests.test_decorators.test_decorator_error_handling_with_dump.ExampleSchema": ["tests.test_decorators.test_decorator_error_handling_with_dump.decorator"], "tests.test_decorators.test_decorator_error_handling_with_dump.decorator": [], "tests.test_decorators.test_decorator_error_handling_with_dump.ExampleSchema.raise_value_error": ["marshmallow.ValidationError"], "tests.test_decorators.Nested.__init__": [], "tests.test_decorators.Example.__init__": [], "tests.test_decorators.test_decorator_post_dump_with_nested_original_and_pass_many": ["marshmallow.Schema.__init__", "marshmallow.Schema.dump"], "tests.test_decorators.test_decorator_post_dump_with_nested_original_and_pass_many.NestedSchema": ["marshmallow.fields.Int", "marshmallow.post_dump"], "tests.test_decorators.test_decorator_post_dump_with_nested_original_and_pass_many.NestedSchema.check_pass_original_when_pass_many_false": [], "tests.test_decorators.test_decorator_post_dump_with_nested_original_and_pass_many.NestedSchema.check_pass_original_when_pass_many_true": [], "tests.test_decorators.test_decorator_post_dump_with_nested_original_and_pass_many.ExampleSchema": ["marshmallow.fields.Nested"], "tests.test_decorators.test_decorator_post_load_with_nested_original_and_pass_many": ["marshmallow.Schema.load", "marshmallow.Schema.__init__"], "tests.test_decorators.test_decorator_post_load_with_nested_original_and_pass_many.NestedSchema": ["marshmallow.fields.Int", "marshmallow.post_load"], "tests.test_decorators.test_decorator_post_load_with_nested_original_and_pass_many.NestedSchema.check_pass_original_when_pass_many_false": [], "tests.test_decorators.test_decorator_post_load_with_nested_original_and_pass_many.NestedSchema.check_pass_original_when_pass_many_true": [], "tests.test_decorators.test_decorator_post_load_with_nested_original_and_pass_many.ExampleSchema": ["marshmallow.fields.Nested"]}
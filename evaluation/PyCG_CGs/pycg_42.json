{"tests.test_utils": [], "tests.test_utils.TestLRUCache.test_simple": ["jinja2.utils.LRUCache"], "jinja2.utils.LRUCache": [], "tests.test_utils.TestLRUCache.test_values": ["jinja2.utils.LRUCache"], "tests.test_utils.TestLRUCache.test_values_empty": ["jinja2.utils.LRUCache"], "tests.test_utils.TestLRUCache.test_pickleable": ["<builtin>.range", "pickle.dumps", "jinja2.utils.LRUCache", "pickle.loads"], "<builtin>.range": [], "pickle.dumps": [], "pickle.loads": [], "pytest.mark.parametrize": [], "tests.test_utils.TestLRUCache": ["pytest.mark.parametrize"], "tests.test_utils.TestLRUCache.test_copy": ["jinja2.utils.LRUCache"], "tests.test_utils.TestLRUCache.test_clear": ["collections.deque", "jinja2.utils.LRUCache"], "collections.deque": [], "tests.test_utils.TestLRUCache.test_repr": ["<builtin>.sorted", "<builtin>.repr", "jinja2.utils.LRUCache"], "<builtin>.repr": [], "<builtin>.sorted": [], "tests.test_utils.TestLRUCache.test_items": ["<builtin>.reversed", "jinja2.utils.LRUCache", "<builtin>.list"], "<builtin>.reversed": [], "<builtin>.list": [], "tests.test_utils.TestLRUCache.test_setdefault": ["<builtin>.len", "jinja2.utils.LRUCache"], "<builtin>.len": [], "tests.test_utils.TestHelpers.test_object_type_repr": ["jinja2.utils.object_type_repr"], "jinja2.utils.object_type_repr": [], "tests.test_utils.TestHelpers.test_autoescape_select": ["jinja2.utils.select_autoescape"], "jinja2.utils.select_autoescape": [], "tests.test_utils.TestEscapeUrlizeTarget.test_escape_urlize_target": ["jinja2.utils.urlize"], "jinja2.utils.urlize": [], "tests.test_utils.TestLoremIpsum.test_lorem_ipsum_markup": ["jinja2.utils.generate_lorem_ipsum", "<builtin>.isinstance"], "jinja2.utils.generate_lorem_ipsum": [], "<builtin>.isinstance": [], "tests.test_utils.TestLoremIpsum.test_lorem_ipsum_html": ["jinja2.utils.generate_lorem_ipsum", "<builtin>.isinstance"], "tests.test_utils.TestLoremIpsum.test_lorem_ipsum_n": ["<builtin>.range", "jinja2.utils.generate_lorem_ipsum"], "tests.test_utils.TestLoremIpsum.test_lorem_ipsum_min": ["<builtin>.range", "jinja2.utils.generate_lorem_ipsum", "random.randrange"], "random.randrange": [], "tests.test_utils.TestLoremIpsum.test_lorem_ipsum_max": ["<builtin>.range", "jinja2.utils.generate_lorem_ipsum", "random.randrange"], "tests.test_utils.test_missing": ["<builtin>.repr"], "tests.test_utils.test_consume": ["jinja2.utils.consume", "<builtin>.iter", "pytest.raises", "<builtin>.next"], "<builtin>.iter": [], "jinja2.utils.consume": [], "pytest.raises": [], "<builtin>.next": [], "tests.test_filters": [], "tests.test_filters.Magic.__init__": [], "tests.test_filters.Magic.__str__": ["<builtin>.str"], "<builtin>.str": [], "tests.test_filters.Magic2.__init__": [], "tests.test_filters.Magic2.__str__": [], "tests.test_filters.TestFilter.test_filter_calling": [], "tests.test_filters.TestFilter.test_capitalize": [], "tests.test_filters.TestFilter.test_center": [], "tests.test_filters.TestFilter.test_default": [], "tests.test_filters.TestFilter": ["pytest.mark.parametrize"], "tests.test_filters.TestFilter.test_dictsort": [], "tests.test_filters.TestFilter.test_batch": ["<builtin>.range", "<builtin>.list"], "tests.test_filters.TestFilter.test_slice": ["<builtin>.range", "<builtin>.list"], "tests.test_filters.TestFilter.test_escape": [], "tests.test_filters.TestFilter.test_trim": [], "tests.test_filters.TestFilter.test_striptags": [], "tests.test_filters.TestFilter.test_filesizeformat": [], "tests.test_filters.TestFilter.test_filesizeformat_issue59": [], "tests.test_filters.TestFilter.test_first": ["<builtin>.range", "<builtin>.list"], "tests.test_filters.TestFilter.test_float": [], "tests.test_filters.TestFilter.test_float_default": [], "tests.test_filters.TestFilter.test_format": [], "tests.test_filters.TestFilter._test_indent_multiline_template": ["markupsafe.Markup"], "markupsafe.Markup": [], "tests.test_filters.TestFilter.test_indent": ["tests.test_filters.TestFilter._test_indent_multiline_template"], "tests.test_filters.TestFilter.test_indent_markup_input": ["tests.test_filters.TestFilter._test_indent_multiline_template"], "tests.test_filters.TestFilter.test_indent_width_string": [], "tests.test_filters.TestFilter.test_int": [], "tests.test_filters.TestFilter.test_int_base": [], "tests.test_filters.TestFilter.test_int_default": [], "tests.test_filters.TestFilter.test_int_special_method": [], "tests.test_filters.TestFilter.test_int_special_method.IntIsh.__int__": [], "tests.test_filters.TestFilter.test_join": ["jinja2.Environment"], "jinja2.Environment": [], "tests.test_filters.TestFilter.test_join_attribute": ["<builtin>.map", "collections.namedtuple"], "collections.namedtuple": [], "<builtin>.map": [], "tests.test_filters.TestFilter.test_last": ["<builtin>.range", "<builtin>.list"], "tests.test_filters.TestFilter.test_length": [], "tests.test_filters.TestFilter.test_lower": [], "tests.test_filters.TestFilter.test_items": ["<builtin>.enumerate"], "<builtin>.enumerate": [], "tests.test_filters.TestFilter.test_items_undefined": [], "tests.test_filters.TestFilter.test_pprint": ["<builtin>.range", "pprint.pformat", "<builtin>.list"], "pprint.pformat": [], "tests.test_filters.TestFilter.test_random": ["<builtin>.range", "random.choice", "random.seed", "random.getstate"], "random.getstate": [], "tests.test_filters.TestFilter.test_random.<lambda1>": ["random.setstate"], "random.setstate": [], "random.seed": [], "random.choice": [], "tests.test_filters.TestFilter.test_reverse": [], "tests.test_filters.TestFilter.test_string": ["<builtin>.str"], "tests.test_filters.TestFilter.test_title": [], "tests.test_filters.TestFilter.test_title.Foo.__str__": [], "tests.test_filters.TestFilter.test_truncate": [], "tests.test_filters.TestFilter.test_truncate_very_short": [], "tests.test_filters.TestFilter.test_truncate_end_length": [], "tests.test_filters.TestFilter.test_upper": [], "tests.test_filters.TestFilter.test_urlize": [], "tests.test_filters.TestFilter.test_urlize_rel_policy": ["jinja2.Environment"], "tests.test_filters.TestFilter.test_urlize_target_parameter": [], "tests.test_filters.TestFilter.test_urlize_extra_schemes_parameter": [], "tests.test_filters.TestFilter.test_wordcount": ["jinja2.Environment", "pytest.raises"], "tests.test_filters.TestFilter.test_block": [], "tests.test_filters.TestFilter.test_chaining": [], "tests.test_filters.TestFilter.test_sum": [], "tests.test_filters.TestFilter.test_sum_attributes": [], "tests.test_filters.TestFilter.test_sum_attributes_nested": [], "tests.test_filters.TestFilter.test_sum_attributes_tuple": [], "tests.test_filters.TestFilter.test_abs": [], "tests.test_filters.TestFilter.test_round_positive": [], "tests.test_filters.TestFilter.test_round_negative": [], "tests.test_filters.TestFilter.test_xmlattr": ["<builtin>.len"], "tests.test_filters.TestFilter.test_sort1": [], "tests.test_filters.TestFilter.test_sort2": [], "tests.test_filters.TestFilter.test_sort3": [], "tests.test_filters.TestFilter.test_sort4": ["<builtin>.map"], "tests.test_filters.TestFilter.test_sort5": ["<builtin>.map"], "tests.test_filters.TestFilter.test_sort6": ["<builtin>.map"], "tests.test_filters.TestFilter.test_sort6.<lambda1>": ["tests.test_filters.Magic2.__init__"], "tests.test_filters.TestFilter.test_sort7": ["<builtin>.map"], "tests.test_filters.TestFilter.test_sort7.<lambda1>": ["tests.test_filters.Magic2.__init__"], "tests.test_filters.TestFilter.test_sort8": ["<builtin>.map"], "tests.test_filters.TestFilter.test_sort8.<lambda1>": ["tests.test_filters.Magic2.__init__"], "tests.test_filters.TestFilter.test_unique": [], "tests.test_filters.TestFilter.test_unique_case_sensitive": [], "tests.test_filters.TestFilter.test_unique_attribute": ["<builtin>.map"], "tests.test_filters.TestFilter.test_min_max": [], "tests.test_filters.TestFilter.test_min_max_attribute": ["<builtin>.map"], "tests.test_filters.TestFilter.test_groupby": [], "tests.test_filters.TestFilter.test_groupby_tuple_index": [], "tests.test_filters.TestFilter.test_groupby_multidot": ["collections.namedtuple"], "tests.test_filters.TestFilter.test_groupby_default": [], "tests.test_filters.TestFilter.test_groupby_case": [], "tests.test_filters.TestFilter.test_filtertag": [], "tests.test_filters.TestFilter.test_replace": ["jinja2.Environment", "markupsafe.Markup"], "tests.test_filters.TestFilter.test_forceescape": ["markupsafe.Markup"], "tests.test_filters.TestFilter.test_safe": ["jinja2.Environment"], "tests.test_filters.TestFilter.test_urlencode": ["jinja2.Environment"], "tests.test_filters.TestFilter.test_simple_map": ["jinja2.Environment"], "tests.test_filters.TestFilter.test_map_sum": [], "tests.test_filters.TestFilter.test_attribute_map": ["jinja2.Environment", "collections.namedtuple"], "tests.test_filters.TestFilter.test_empty_map": ["jinja2.Environment"], "tests.test_filters.TestFilter.test_map_default": ["jinja2.Environment", "collections.namedtuple"], "tests.test_filters.TestFilter.test_simple_select": ["jinja2.Environment"], "tests.test_filters.TestFilter.test_bool_select": ["jinja2.Environment"], "tests.test_filters.TestFilter.test_simple_reject": ["jinja2.Environment"], "tests.test_filters.TestFilter.test_bool_reject": ["jinja2.Environment"], "tests.test_filters.TestFilter.test_simple_select_attr": ["jinja2.Environment", "collections.namedtuple"], "tests.test_filters.TestFilter.test_simple_reject_attr": ["jinja2.Environment", "collections.namedtuple"], "tests.test_filters.TestFilter.test_func_select_attr": ["jinja2.Environment", "collections.namedtuple"], "tests.test_filters.TestFilter.test_func_reject_attr": ["jinja2.Environment", "collections.namedtuple"], "tests.test_filters.TestFilter.test_json_dump": ["jinja2.Environment"], "tests.test_filters.TestFilter.test_json_dump.my_dumps": [], "tests.test_filters.TestFilter.test_wordwrap": [], "tests.test_filters.TestFilter.test_filter_undefined": ["pytest.raises"], "tests.test_filters.TestFilter.test_filter_undefined_in_if": ["pytest.raises"], "tests.test_filters.TestFilter.test_filter_undefined_in_elif": ["pytest.raises"], "tests.test_filters.TestFilter.test_filter_undefined_in_else": ["pytest.raises"], "tests.test_filters.TestFilter.test_filter_undefined_in_nested_if": ["pytest.raises"], "tests.test_filters.TestFilter.test_filter_undefined_in_condexpr": ["pytest.raises"], "tests.test_security": [], "tests.test_security.PrivateStuff.bar": [], "tests.test_security.PrivateStuff": ["jinja2.sandbox.unsafe"], "jinja2.sandbox.unsafe": [], "tests.test_security.PrivateStuff.foo": [], "tests.test_security.PrivateStuff.__repr__": [], "tests.test_security.PublicStuff.bar": [], "tests.test_security.PublicStuff._foo": [], "tests.test_security.PublicStuff.__repr__": [], "tests.test_security.TestSandbox.test_unsafe": ["jinja2.sandbox.SandboxedEnvironment", "pytest.raises"], "jinja2.sandbox.SandboxedEnvironment": [], "tests.test_security.TestSandbox.test_unsafe.<lambda1>": [], "tests.test_security.TestSandbox.test_immutable_environment": ["pytest.raises", "jinja2.sandbox.ImmutableSandboxedEnvironment"], "jinja2.sandbox.ImmutableSandboxedEnvironment": [], "tests.test_security.TestSandbox.test_restricted": ["jinja2.sandbox.SandboxedEnvironment", "pytest.raises"], "tests.test_security.TestSandbox.test_template_data": ["jinja2.Environment", "jinja2.nodes.EvalContext", "<builtin>.str", "markupsafe.escape"], "markupsafe.escape": [], "jinja2.nodes.EvalContext": [], "tests.test_security.TestSandbox.test_attr_filter": ["jinja2.sandbox.SandboxedEnvironment", "pytest.raises"], "tests.test_security.TestSandbox.test_binary_operator_intercepting": ["<builtin>.frozenset", "jinja2.sandbox.SandboxedEnvironment", "pytest.raises"], "tests.test_security.TestSandbox.test_binary_operator_intercepting.disable_op": ["jinja2.exceptions.TemplateRuntimeError"], "jinja2.exceptions.TemplateRuntimeError": [], "<builtin>.frozenset": [], "tests.test_security.TestSandbox.test_unary_operator_intercepting": ["<builtin>.frozenset", "jinja2.sandbox.SandboxedEnvironment", "pytest.raises"], "tests.test_security.TestSandbox.test_unary_operator_intercepting.disable_op": ["jinja2.exceptions.TemplateRuntimeError"], "tests.test_security.TestStringFormat.test_basic_format_safety": ["jinja2.sandbox.SandboxedEnvironment"], "tests.test_security.TestStringFormat.test_basic_format_all_okay": ["jinja2.sandbox.SandboxedEnvironment"], "tests.test_security.TestStringFormat.test_safe_format_safety": ["jinja2.sandbox.SandboxedEnvironment"], "tests.test_security.TestStringFormat.test_safe_format_all_okay": ["jinja2.sandbox.SandboxedEnvironment"], "tests.test_security.TestStringFormat.test_empty_braces_format": ["jinja2.sandbox.SandboxedEnvironment"], "tests.test_security.TestStringFormatMap.test_basic_format_safety": ["jinja2.sandbox.SandboxedEnvironment"], "tests.test_security.TestStringFormatMap.test_basic_format_all_okay": ["jinja2.sandbox.SandboxedEnvironment"], "tests.test_security.TestStringFormatMap.test_safe_format_all_okay": ["jinja2.sandbox.SandboxedEnvironment"], "tests.test_ext": ["jinja2.DictLoader", "jinja2.Environment", "jinja2.pass_context", "re.compile"], "re.compile": [], "tests.test_ext._get_with_context": ["<builtin>.isinstance"], "jinja2.pass_context": [], "tests.test_ext.gettext": ["tests.test_ext._get_with_context"], "tests.test_ext.ngettext": ["tests.test_ext._get_with_context"], "tests.test_ext.pgettext": ["tests.test_ext._get_with_context"], "tests.test_ext.npgettext": ["tests.test_ext._get_with_context"], "jinja2.DictLoader": [], "tests.test_ext.ExampleExtension.parse": ["jinja2.nodes.EnvironmentAttribute", "<builtin>.next", "jinja2.nodes.Output", "jinja2.nodes.ContextReference", "jinja2.ext.Extension.attr", "jinja2.ext.Extension.call_method", "jinja2.nodes.ImportedName"], "jinja2.nodes.EnvironmentAttribute": [], "jinja2.ext.Extension.attr": [], "jinja2.nodes.ImportedName": [], "jinja2.nodes.ContextReference": [], "jinja2.ext.Extension.call_method": [], "jinja2.nodes.Output": [], "tests.test_ext.ExampleExtension._dump": [], "tests.test_ext.PreprocessorExtension.preprocess": [], "tests.test_ext.StreamFilterExtension.filter_stream": ["tests.test_ext.StreamFilterExtension.interpolate"], "tests.test_ext.StreamFilterExtension.interpolate": ["jinja2.lexer.count_newlines", "<builtin>.len", "jinja2.lexer.Token"], "jinja2.lexer.Token": [], "jinja2.lexer.count_newlines": [], "tests.test_ext.TestExtensions.test_extend_late": ["jinja2.Environment"], "tests.test_ext.TestExtensions.test_loop_controls": ["jinja2.Environment"], "tests.test_ext.TestExtensions.test_do": ["jinja2.Environment"], "tests.test_ext.TestExtensions.test_extension_nodes": ["jinja2.Environment"], "tests.test_ext.TestExtensions.test_contextreference_node_passes_context": ["jinja2.Environment"], "tests.test_ext.TestExtensions.test_contextreference_node_can_pass_locals": ["jinja2.Environment"], "tests.test_ext.TestExtensions.test_identifier": [], "tests.test_ext.TestExtensions.test_rebinding": ["jinja2.Environment"], "tests.test_ext.TestExtensions.test_preprocessor_extension": ["jinja2.Environment"], "tests.test_ext.TestExtensions.test_streamfilter_extension": ["jinja2.Environment"], "tests.test_ext.TestExtensions.test_streamfilter_extension.<lambda1>": [], "tests.test_ext.TestExtensions.test_extension_ordering": ["jinja2.Environment", "<builtin>.list"], "tests.test_ext.TestExtensions.test_debug": ["jinja2.Environment"], "tests.test_ext.TestInternationalization.test_trans": [], "tests.test_ext.TestInternationalization.test_trans_plural": [], "tests.test_ext.TestInternationalization.test_trans_plural_with_functions": [], "tests.test_ext.TestInternationalization.test_trans_plural_with_functions.get_user_count": [], "tests.test_ext.TestInternationalization.test_complex_plural": ["pytest.raises"], "tests.test_ext.TestInternationalization.test_trans_stringformatting": [], "tests.test_ext.TestInternationalization.test_trimmed": [], "tests.test_ext.TestInternationalization.test_trimmed_policy": [], "tests.test_ext.TestInternationalization.test_trimmed_policy_override": [], "tests.test_ext.TestInternationalization.test_trimmed_vars": [], "tests.test_ext.TestInternationalization.test_trimmed_varname_trimmed": [], "tests.test_ext.TestInternationalization.test_extract": ["io.BytesIO", "jinja2.ext.babel_extract", "<builtin>.list"], "io.BytesIO": [], "jinja2.ext.babel_extract": [], "tests.test_ext.TestInternationalization.test_extract_trimmed": ["io.BytesIO", "jinja2.ext.babel_extract", "<builtin>.list"], "tests.test_ext.TestInternationalization.test_extract_trimmed_option": ["io.BytesIO", "jinja2.ext.babel_extract", "<builtin>.list"], "tests.test_ext.TestInternationalization.test_comment_extract": ["io.BytesIO", "jinja2.ext.babel_extract", "<builtin>.list"], "tests.test_ext.TestInternationalization.test_extract_context": ["io.BytesIO", "jinja2.ext.babel_extract", "<builtin>.list"], "tests.test_ext.TestScope.test_basic_scope_behavior": ["jinja2.Environment"], "tests.test_ext.TestScope.test_basic_scope_behavior.ScopeExt.parse": ["jinja2.nodes.Assign", "jinja2.nodes.Scope", "<builtin>.next", "<builtin>.list"], "jinja2.nodes.Scope": [], "jinja2.nodes.Assign": [], "tests.test_ext.TestNewstyleInternationalization.test_trans": [], "tests.test_ext.TestNewstyleInternationalization.test_trans_plural": [], "tests.test_ext.TestNewstyleInternationalization.test_complex_plural": ["pytest.raises"], "tests.test_ext.TestNewstyleInternationalization.test_trans_stringformatting": [], "tests.test_ext.TestNewstyleInternationalization.test_newstyle_plural": [], "tests.test_ext.TestNewstyleInternationalization.test_autoescape_support": ["jinja2.Environment"], "tests.test_ext.TestNewstyleInternationalization.test_autoescape_support.<lambda1>": [], "tests.test_ext.TestNewstyleInternationalization.test_autoescape_support.<lambda2>": [], "tests.test_ext.TestNewstyleInternationalization.test_autoescape_macros": ["jinja2.Environment"], "tests.test_ext.TestNewstyleInternationalization.test_num_used_twice": [], "tests.test_ext.TestNewstyleInternationalization.test_num_called_num": ["re.search"], "re.search": [], "tests.test_ext.TestNewstyleInternationalization.test_trans_vars": [], "tests.test_ext.TestNewstyleInternationalization.test_novars_vars_escaping": [], "tests.test_ext.TestNewstyleInternationalization.test_context": [], "tests.test_ext.TestNewstyleInternationalization.test_context_plural": [], "tests.test_ext.TestNewstyleInternationalization.test_context_block": [], "tests.test_ext.TestNewstyleInternationalization.test_context_plural_block": [], "tests.test_ext.TestAutoEscape.test_scoped_setting": ["jinja2.Environment"], "tests.test_ext.TestAutoEscape.test_nonvolatile": ["jinja2.Environment"], "tests.test_ext.TestAutoEscape.test_volatile": ["jinja2.Environment"], "tests.test_ext.TestAutoEscape.test_scoping": ["jinja2.Environment"], "tests.test_ext.TestAutoEscape.test_volatile_scoping": ["jinja2.Environment"], "tests.test_ext.TestAutoEscape.test_overlay_scopes": ["jinja2.Environment"], "tests.test_ext.TestAutoEscape.test_overlay_scopes.MagicScopeExtension.parse": ["jinja2.ext.Extension.call_method", "jinja2.nodes.OverlayScope", "<builtin>.next", "<builtin>.list"], "jinja2.nodes.OverlayScope": [], "tests.test_ext.TestAutoEscape.test_overlay_scopes.MagicScopeExtension.get_scope": [], "tests.test_nodes": [], "tests.test_nodes.test_template_hash": ["<builtin>.hash"], "<builtin>.hash": [], "tests.conftest": ["pytest.fixture"], "pytest.fixture": [], "tests.conftest.env": ["jinja2.environment.Environment"], "jinja2.environment.Environment": [], "tests.conftest.dict_loader": ["jinja2.loaders.DictLoader"], "jinja2.loaders.DictLoader": [], "tests.conftest.package_loader": ["jinja2.loaders.PackageLoader"], "jinja2.loaders.PackageLoader": [], "tests.conftest.filesystem_loader": ["pathlib.Path", "jinja2.loaders.FileSystemLoader"], "pathlib.Path": [], "jinja2.loaders.FileSystemLoader": [], "tests.conftest.function_loader": ["jinja2.loaders.FunctionLoader"], "jinja2.loaders.FunctionLoader": [], "tests.conftest.choice_loader": ["jinja2.loaders.ChoiceLoader"], "jinja2.loaders.ChoiceLoader": [], "tests.conftest.prefix_loader": ["jinja2.loaders.PrefixLoader"], "jinja2.loaders.PrefixLoader": [], "tests.test_pickle": [], "tests.test_pickle.test_environment": ["pickle.dumps", "pickle.loads"], "tests.test_inheritance": ["pytest.fixture"], "tests.test_inheritance.env": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_inheritance.TestInheritance.test_layout": [], "tests.test_inheritance.TestInheritance.test_level1": [], "tests.test_inheritance.TestInheritance.test_level2": [], "tests.test_inheritance.TestInheritance.test_level3": [], "tests.test_inheritance.TestInheritance.test_level4": [], "tests.test_inheritance.TestInheritance.test_super": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_inheritance.TestInheritance.test_working": [], "tests.test_inheritance.TestInheritance.test_reuse_blocks": [], "tests.test_inheritance.TestInheritance.test_preserve_blocks": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_inheritance.TestInheritance.test_dynamic_inheritance": ["jinja2.DictLoader", "jinja2.Environment", "<builtin>.range"], "tests.test_inheritance.TestInheritance.test_multi_inheritance": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_inheritance.TestInheritance.test_scoped_block": ["jinja2.DictLoader", "jinja2.Environment", "<builtin>.range", "<builtin>.list"], "tests.test_inheritance.TestInheritance.test_super_in_scoped_block": ["jinja2.DictLoader", "jinja2.Environment", "<builtin>.range", "<builtin>.list"], "tests.test_inheritance.TestInheritance.test_scoped_block_after_inheritance": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_inheritance.TestInheritance.test_level1_required": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_inheritance.TestInheritance.test_level2_required": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_inheritance.TestInheritance.test_level3_required": ["jinja2.DictLoader", "jinja2.Environment", "pytest.raises"], "tests.test_inheritance.TestInheritance.test_invalid_required": ["jinja2.DictLoader", "jinja2.Environment", "pytest.raises"], "tests.test_inheritance.TestInheritance.test_required_with_scope": ["jinja2.Environment", "<builtin>.list", "<builtin>.range", "jinja2.DictLoader", "pytest.raises"], "tests.test_inheritance.TestInheritance.test_duplicate_required_or_scoped": ["jinja2.Environment", "<builtin>.list", "<builtin>.range", "jinja2.DictLoader", "pytest.raises"], "tests.test_inheritance.TestBugFix.test_fixed_macro_scoping_bug": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_inheritance.TestBugFix.test_double_extends": ["pytest.raises"], "tests.test_lexnparse": [], "tests.test_lexnparse.TestTokenStream": ["jinja2.lexer.Token"], "tests.test_lexnparse.TestTokenStream.test_simple": ["jinja2.lexer.TokenStream", "<builtin>.next", "<builtin>.bool"], "jinja2.lexer.TokenStream": [], "<builtin>.bool": [], "tests.test_lexnparse.TestTokenStream.test_iter": ["jinja2.lexer.TokenStream"], "tests.test_lexnparse.TestLexer.test_raw1": [], "tests.test_lexnparse.TestLexer.test_raw2": [], "tests.test_lexnparse.TestLexer.test_raw3": ["jinja2.Environment"], "tests.test_lexnparse.TestLexer.test_raw4": ["jinja2.Environment"], "tests.test_lexnparse.TestLexer.test_balancing": ["<builtin>.range", "jinja2.Environment", "<builtin>.list"], "tests.test_lexnparse.TestLexer.test_comments": ["<builtin>.range", "jinja2.Environment", "<builtin>.list"], "tests.test_lexnparse.TestLexer.test_string_escapes": [], "tests.test_lexnparse.TestLexer.test_bytefallback": ["pprint.pformat"], "tests.test_lexnparse.TestLexer.test_operators": ["jinja2.lexer.operators.items", "<builtin>.next"], "jinja2.lexer.operators.items": [], "tests.test_lexnparse.TestLexer.test_normalizing": ["jinja2.Environment"], "tests.test_lexnparse.TestLexer.test_trailing_newline": ["jinja2.Environment"], "tests.test_lexnparse.TestLexer": ["pytest.mark.parametrize"], "tests.test_lexnparse.TestLexer.test_name": ["pytest.raises"], "tests.test_lexnparse.TestLexer.test_lineno_with_strip": [], "tests.test_lexnparse.TestParser.test_php_syntax": ["<builtin>.range", "jinja2.Environment", "<builtin>.list"], "tests.test_lexnparse.TestParser.test_erb_syntax": ["<builtin>.range", "jinja2.Environment", "<builtin>.list"], "tests.test_lexnparse.TestParser.test_comment_syntax": ["<builtin>.range", "jinja2.Environment", "<builtin>.list"], "tests.test_lexnparse.TestParser.test_balancing": [], "tests.test_lexnparse.TestParser.test_start_comment": [], "tests.test_lexnparse.TestParser.test_line_syntax": ["<builtin>.range", "jinja2.Environment", "<builtin>.int", "<builtin>.list"], "<builtin>.int": [], "tests.test_lexnparse.TestParser.test_line_syntax_priority": ["jinja2.Environment"], "tests.test_lexnparse.TestParser.test_error_messages": ["tests.test_lexnparse.TestParser.test_error_messages.assert_error"], "tests.test_lexnparse.TestParser.test_error_messages.assert_error": ["pytest.raises", "jinja2.Template"], "jinja2.Template": [], "tests.test_lexnparse.TestSyntax.test_call": ["jinja2.Environment"], "tests.test_lexnparse.TestSyntax.test_call.<lambda1>": [], "tests.test_lexnparse.TestSyntax.test_slicing": [], "tests.test_lexnparse.TestSyntax.test_attr": [], "tests.test_lexnparse.TestSyntax.test_subscript": [], "tests.test_lexnparse.TestSyntax.test_tuple": [], "tests.test_lexnparse.TestSyntax.test_math": [], "tests.test_lexnparse.TestSyntax.test_div": [], "tests.test_lexnparse.TestSyntax.test_unary": [], "tests.test_lexnparse.TestSyntax.test_concat": [], "tests.test_lexnparse.TestSyntax": ["pytest.mark.parametrize"], "tests.test_lexnparse.TestSyntax.test_compare": [], "tests.test_lexnparse.TestSyntax.test_compare_parens": [], "tests.test_lexnparse.TestSyntax.test_compare_compound": [], "tests.test_lexnparse.TestSyntax.test_inop": [], "tests.test_lexnparse.TestSyntax.test_collection_literal": [], "tests.test_lexnparse.TestSyntax.test_numeric_literal": [], "tests.test_lexnparse.TestSyntax.test_bool": [], "tests.test_lexnparse.TestSyntax.test_grouping": [], "tests.test_lexnparse.TestSyntax.test_django_attr": [], "tests.test_lexnparse.TestSyntax.test_conditional_expression": [], "tests.test_lexnparse.TestSyntax.test_short_conditional_expression": ["pytest.raises"], "tests.test_lexnparse.TestSyntax.test_filter_priority": [], "tests.test_lexnparse.TestSyntax.test_function_calls": ["pytest.raises"], "tests.test_lexnparse.TestSyntax.test_tuple_expr": [], "tests.test_lexnparse.TestSyntax.test_trailing_comma": [], "tests.test_lexnparse.TestSyntax.test_block_end_name": ["pytest.raises"], "tests.test_lexnparse.TestSyntax.test_constant_casing": ["<builtin>.str"], "tests.test_lexnparse.TestSyntax.test_test_chaining": ["pytest.raises"], "tests.test_lexnparse.TestSyntax.test_string_concatenation": [], "tests.test_lexnparse.TestSyntax.test_notin": ["<builtin>.range"], "tests.test_lexnparse.TestSyntax.test_operator_precedence": [], "tests.test_lexnparse.TestSyntax.test_implicit_subscribed_tuple": [], "tests.test_lexnparse.TestSyntax.test_implicit_subscribed_tuple.Foo.__getitem__": [], "tests.test_lexnparse.TestSyntax.test_raw2": [], "tests.test_lexnparse.TestSyntax.test_const": [], "tests.test_lexnparse.TestSyntax.test_neg_filter_priority": ["<builtin>.isinstance"], "tests.test_lexnparse.TestSyntax.test_const_assign": ["pytest.raises"], "tests.test_lexnparse.TestSyntax.test_localset": [], "tests.test_lexnparse.TestSyntax.test_parse_unary": [], "tests.test_lexnparse.TestLstripBlocks.test_lstrip": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_trim": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_no_lstrip": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_blocks_false_with_no_lstrip": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_endline": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_inline": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_nested": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_left_chars": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_embeded_strings": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_preserve_leading_newlines": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_comment": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_angle_bracket_simple": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_angle_bracket_comment": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_angle_bracket": ["<builtin>.range", "jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_angle_bracket_compact": ["<builtin>.range", "jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_blocks_outside_with_new_line": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_trim_blocks_outside_with_new_line": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_blocks_inside_with_new_line": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_trim_blocks_inside_with_new_line": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_blocks_without_new_line": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_trim_blocks_without_new_line": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_blocks_consume_after_without_new_line": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_trim_blocks_consume_before_without_new_line": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_trim_blocks_comment": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_lstrip_trim_blocks_raw": ["jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_php_syntax_with_manual": ["<builtin>.range", "jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_php_syntax": ["<builtin>.range", "jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_php_syntax_compact": ["<builtin>.range", "jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_erb_syntax": ["<builtin>.range", "jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_erb_syntax_with_manual": ["<builtin>.range", "jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_erb_syntax_no_lstrip": ["<builtin>.range", "jinja2.Environment"], "tests.test_lexnparse.TestLstripBlocks.test_comment_syntax": ["<builtin>.range", "jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_trim": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_no_trim": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_no_trim_outer": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_lstrip_no_trim": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_trim_blocks_false_with_no_trim": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_trim_nested": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_no_trim_nested": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_comment_trim": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_comment_no_trim": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_multiple_comment_trim_lstrip": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_multiple_comment_no_trim_lstrip": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_raw_trim_lstrip": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_raw_no_trim_lstrip": ["jinja2.Environment", "pytest.raises"], "tests.test_lexnparse.TestTrimBlocks.test_no_trim_angle_bracket": ["jinja2.Environment"], "tests.test_lexnparse.TestTrimBlocks.test_no_trim_php_syntax": ["jinja2.Environment"], "tests.test_nativetypes": ["pytest.fixture", "pytest.mark.parametrize"], "tests.test_nativetypes.env": ["jinja2.nativetypes.NativeEnvironment"], "jinja2.nativetypes.NativeEnvironment": [], "tests.test_nativetypes.test_is_defined_native_return": [], "tests.test_nativetypes.test_undefined_native_return": ["<builtin>.isinstance"], "tests.test_nativetypes.test_adding_undefined_native_return": ["pytest.raises"], "tests.test_nativetypes.test_cast_int": ["<builtin>.isinstance"], "tests.test_nativetypes.test_list_add": ["<builtin>.isinstance"], "tests.test_nativetypes.test_multi_expression_add": ["<builtin>.isinstance"], "tests.test_nativetypes.test_loops": ["<builtin>.isinstance"], "tests.test_nativetypes.test_loops_with_ints": ["<builtin>.isinstance"], "tests.test_nativetypes.test_loop_look_alike": ["<builtin>.isinstance"], "tests.test_nativetypes.test_booleans": ["<builtin>.isinstance"], "tests.test_nativetypes.test_variable_dunder": ["<builtin>.isinstance"], "tests.test_nativetypes.test_constant_dunder": ["<builtin>.isinstance"], "tests.test_nativetypes.test_constant_dunder_to_string": ["<builtin>.isinstance"], "tests.test_nativetypes.test_string_literal_var": ["<builtin>.isinstance"], "tests.test_nativetypes.test_string_top_level": [], "tests.test_nativetypes.test_tuple_of_variable_strings": ["<builtin>.isinstance"], "tests.test_nativetypes.test_concat_strings_with_quotes": [], "tests.test_nativetypes.test_no_intermediate_eval": ["<builtin>.isinstance", "math.isclose"], "math.isclose": [], "tests.test_nativetypes.test_spontaneous_env": ["<builtin>.isinstance", "jinja2.nativetypes.NativeTemplate"], "jinja2.nativetypes.NativeTemplate": [], "tests.test_nativetypes.test_leading_spaces": [], "tests.test_nativetypes.test_macro": ["<builtin>.isinstance"], "tests.test_regression": ["pytest.mark.parametrize"], "tests.test_regression.TestCorner.test_assigned_scoping": [], "tests.test_regression.TestCorner.test_closure_scoping": [], "tests.test_regression.TestBug.test_keyword_folding": ["jinja2.Environment"], "tests.test_regression.TestBug.test_keyword_folding.<lambda1>": [], "tests.test_regression.TestBug.test_extends_output_bugs": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_regression.TestBug.test_urlize_filter_escaping": [], "tests.test_regression.TestBug.test_urlize_filter_closing_punctuation": [], "tests.test_regression.TestBug.test_loop_call_loop": ["<builtin>.range", "<builtin>.str"], "tests.test_regression.TestBug.test_weird_inline_comment": ["jinja2.Environment", "pytest.raises"], "tests.test_regression.TestBug.test_old_macro_loop_scoping_bug": [], "tests.test_regression.TestBug.test_partial_conditional_assignments": [], "tests.test_regression.TestBug.test_stacked_locals_scoping_bug": ["jinja2.Environment"], "tests.test_regression.TestBug.test_stacked_locals_scoping_bug_twoframe": ["jinja2.Template"], "tests.test_regression.TestBug.test_call_with_args": ["jinja2.Template"], "tests.test_regression.TestBug.test_empty_if_condition_fails": ["pytest.raises"], "tests.test_regression.TestBug.test_recursive_loop_compile": ["jinja2.Template"], "tests.test_regression.TestBug.test_else_loop_bug": ["jinja2.Template"], "tests.test_regression.TestBug.test_correct_prefix_loader_name": ["jinja2.DictLoader", "jinja2.Environment", "jinja2.PrefixLoader", "pytest.raises"], "jinja2.PrefixLoader": [], "tests.test_regression.TestBug.test_pass_context_callable_class": ["jinja2.Template"], "tests.test_regression.TestBug.test_pass_context_callable_class.CallableClass": ["jinja2.utils.pass_context"], "jinja2.utils.pass_context": [], "tests.test_regression.TestBug.test_pass_context_callable_class.CallableClass.__call__": [], "tests.test_regression.TestBug.test_block_set_with_extends": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_regression.TestBug.test_nested_for_else": [], "tests.test_regression.TestBug.test_macro_var_bug": [], "tests.test_regression.TestBug.test_macro_var_bug_advanced": [], "tests.test_regression.TestBug.test_callable_defaults": ["jinja2.Environment"], "tests.test_regression.TestBug.test_callable_defaults.<lambda1>": [], "tests.test_regression.TestBug.test_macro_escaping": ["jinja2.Environment"], "tests.test_regression.TestBug.test_macro_escaping.<lambda1>": [], "tests.test_regression.TestBug.test_macro_scoping": ["<builtin>.map", "<builtin>.list"], "tests.test_regression.TestBug.test_scopes_and_blocks": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_regression.TestBug.test_scopes_and_include": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_regression.TestBug.test_caller_scoping": [], "tests.test_regression.TestBug.test_variable_reuse": [], "tests.test_regression.TestBug.test_double_caller": [], "tests.test_regression.TestBug.test_double_caller_no_default": ["pytest.raises"], "tests.test_regression.TestBug.test_double_caller_no_default.<lambda1>": [], "tests.test_regression.TestBug.test_macro_blocks": [], "tests.test_regression.TestBug.test_scoped_block": [], "tests.test_regression.TestBug.test_recursive_loop_filter": [], "tests.test_regression.TestBug.test_empty_if": [], "tests.test_regression.TestBug.test_subproperty_if": [], "tests.test_regression.TestBug.test_set_and_include": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_regression.TestBug.test_loop_include": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_regression.TestBug.test_grouper_repr": ["jinja2.filters._GroupTuple", "<builtin>.repr", "<builtin>.str"], "jinja2.filters._GroupTuple": [], "tests.test_regression.TestBug.test_custom_context": ["jinja2.DictLoader", "jinja2.Environment.get_template", "jinja2.Environment.__init__"], "jinja2.Environment.__init__": [], "jinja2.Environment.get_template": [], "tests.test_regression.TestBug.test_recursive_loop_bug": [], "tests.test_regression.TestBug.test_markup_and_chainable_undefined": ["markupsafe.Markup", "jinja2.runtime.ChainableUndefined", "<builtin>.str"], "jinja2.runtime.ChainableUndefined": [], "tests.test_regression.TestBug.test_scoped_block_loop_vars": [], "tests.test_regression.TestBug.test_pass_context_loop_vars": ["jinja2.utils.pass_context"], "tests.test_regression.TestBug.test_pass_context_loop_vars.test": [], "tests.test_regression.TestBug.test_pass_context_scoped_loop_vars": ["jinja2.utils.pass_context"], "tests.test_regression.TestBug.test_pass_context_scoped_loop_vars.test": [], "tests.test_regression.TestBug.test_pass_context_in_blocks": ["jinja2.utils.pass_context"], "tests.test_regression.TestBug.test_pass_context_in_blocks.test": [], "tests.test_regression.TestBug.test_pass_context_block_and_loop": ["jinja2.utils.pass_context"], "tests.test_regression.TestBug.test_pass_context_block_and_loop.test": [], "tests.test_regression.TestBug": ["pytest.mark.parametrize"], "tests.test_regression.TestBug.test_cached_extends": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_regression.TestBug.test_nested_loop_scoping": [], "tests.test_regression.test_unicode_whitespace": [], "tests.test_async": ["pytest.fixture"], "tests.test_async.test_basic_async": ["tests.test_async.test_basic_async.func", "asyncio.run", "jinja2.Template"], "tests.test_async.test_basic_async.func": [], "asyncio.run": [], "tests.test_async.test_await_on_calls": ["asyncio.run", "tests.test_async.test_await_on_calls.func", "jinja2.Template"], "tests.test_async.test_await_on_calls.async_func": [], "tests.test_async.test_await_on_calls.normal_func": [], "tests.test_async.test_await_on_calls.func": [], "tests.test_async.test_await_on_calls_normal_render": ["jinja2.Template"], "tests.test_async.test_await_on_calls_normal_render.async_func": [], "tests.test_async.test_await_on_calls_normal_render.normal_func": [], "tests.test_async.test_await_and_macros": ["asyncio.run", "tests.test_async.test_await_and_macros.func", "jinja2.Template"], "tests.test_async.test_await_and_macros.async_func": [], "tests.test_async.test_await_and_macros.func": [], "tests.test_async.test_async_blocks": ["asyncio.run", "tests.test_async.test_async_blocks.func", "jinja2.Template"], "tests.test_async.test_async_blocks.func": [], "tests.test_async.test_async_generate": ["<builtin>.list", "jinja2.Template"], "tests.test_async.test_async_iteration_in_templates": ["<builtin>.list", "tests.test_async.test_async_iteration_in_templates.async_iterator", "jinja2.Template"], "tests.test_async.test_async_iteration_in_templates.async_iterator": [], "tests.test_async.test_async_iteration_in_templates_extended": ["<builtin>.range", "jinja2.async_utils.auto_aiter", "<builtin>.next", "jinja2.Template"], "jinja2.async_utils.auto_aiter": [], "tests.test_async.test_env_async": ["jinja2.DictLoader", "jinja2.Environment", "<builtin>.dict"], "<builtin>.dict": [], "tests.test_async.TestAsyncImports.test_context_imports": [], "tests.test_async.TestAsyncImports.test_trailing_comma": [], "tests.test_async.TestAsyncImports.test_exports": ["<builtin>.hasattr", "asyncio.run"], "<builtin>.hasattr": [], "tests.test_async.TestAsyncImports.test_import_with_globals": [], "tests.test_async.TestAsyncImports.test_import_with_globals_override": [], "tests.test_async.TestAsyncImports.test_from_import_with_globals": [], "tests.test_async.TestAsyncIncludes.test_context_include": [], "tests.test_async.TestAsyncIncludes.test_choice_includes": ["tests.test_async.TestAsyncIncludes.test_choice_includes.test_includes", "pytest.raises"], "tests.test_async.TestAsyncIncludes.test_choice_includes.test_includes": [], "tests.test_async.TestAsyncIncludes.test_include_ignoring_missing": ["pytest.raises"], "tests.test_async.TestAsyncIncludes.test_context_include_with_overrides": ["jinja2.DictLoader", "jinja2.Environment", "<builtin>.dict"], "tests.test_async.TestAsyncIncludes.test_unoptimized_scopes": [], "tests.test_async.TestAsyncIncludes.test_unoptimized_scopes_autoescape": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_async.TestAsyncForLoop.test_simple": ["<builtin>.range", "<builtin>.list"], "tests.test_async.TestAsyncForLoop.test_else": [], "tests.test_async.TestAsyncForLoop.test_empty_blocks": [], "tests.test_async.TestAsyncForLoop": ["pytest.mark.parametrize"], "tests.test_async.TestAsyncForLoop.test_context_vars": [], "tests.test_async.TestAsyncForLoop.test_cycling": ["<builtin>.range", "<builtin>.list"], "tests.test_async.TestAsyncForLoop.test_lookaround": ["<builtin>.range", "<builtin>.list"], "tests.test_async.TestAsyncForLoop.test_changed": [], "tests.test_async.TestAsyncForLoop.test_scope": ["<builtin>.range", "<builtin>.list"], "tests.test_async.TestAsyncForLoop.test_varlen": ["tests.test_async.TestAsyncForLoop.test_varlen.inner"], "tests.test_async.TestAsyncForLoop.test_varlen.inner": ["<builtin>.range"], "tests.test_async.TestAsyncForLoop.test_noniter": ["pytest.raises"], "tests.test_async.TestAsyncForLoop.test_recursive": [], "tests.test_async.TestAsyncForLoop.test_recursive_lookaround": [], "tests.test_async.TestAsyncForLoop.test_recursive_depth0": [], "tests.test_async.TestAsyncForLoop.test_recursive_depth": [], "tests.test_async.TestAsyncForLoop.test_looploop": [], "tests.test_async.TestAsyncForLoop.test_reversed_bug": ["<builtin>.reversed"], "tests.test_async.TestAsyncForLoop.test_loop_errors": ["pytest.raises"], "tests.test_async.TestAsyncForLoop.test_loop_filter": [], "tests.test_async.TestAsyncForLoop.test_scoped_special_var": [], "tests.test_async.TestAsyncForLoop.test_scoped_loop_var": [], "tests.test_async.TestAsyncForLoop.test_recursive_empty_loop_iter": ["<builtin>.dict"], "tests.test_async.TestAsyncForLoop.test_call_in_loop": [], "tests.test_async.TestAsyncForLoop.test_scoping_bug": [], "tests.test_async.TestAsyncForLoop.test_unpacking": [], "tests.test_async.TestAsyncForLoop.test_recursive_loop_filter": [], "tests.test_async.TestAsyncForLoop.test_nonrecursive_loop_filter": [], "tests.test_async.TestAsyncForLoop.test_bare_async": [], "tests.test_async.TestAsyncForLoop.test_awaitable_property_slicing": ["<builtin>.dict"], "tests.test_async.test_namespace_awaitable": ["asyncio.run", "tests.test_async.test_namespace_awaitable._test"], "tests.test_async.test_namespace_awaitable._test": [], "tests.test_async.test_chainable_undefined_aiter": ["asyncio.run", "tests.test_async.test_chainable_undefined_aiter._test"], "tests.test_async.test_chainable_undefined_aiter._test": ["jinja2.Template"], "tests.test_async.async_native_env": ["jinja2.nativetypes.NativeEnvironment"], "tests.test_async.test_native_async": ["tests.test_async.test_native_async._test", "asyncio.run"], "tests.test_async.test_native_async._test": [], "tests.test_async.test_native_list_async": ["tests.test_async.test_native_list_async._test", "asyncio.run"], "tests.test_async.test_native_list_async._test": ["<builtin>.range", "<builtin>.list"], "tests.test_async.test_getitem_after_filter": ["<builtin>.range", "jinja2.Environment"], "tests.test_async.test_getitem_after_filter.<lambda1>": [], "tests.test_async.test_getitem_after_call": ["<builtin>.range", "jinja2.Environment"], "tests.test_async.test_getitem_after_call.<lambda1>": [], "tests.res": [], "tests.test_imports": ["pytest.fixture"], "tests.test_imports.test_env": ["jinja2.loaders.DictLoader", "<builtin>.dict", "jinja2.environment.Environment"], "tests.test_imports.TestImports.test_context_imports": [], "tests.test_imports.TestImports.test_import_needs_name": ["pytest.raises"], "tests.test_imports.TestImports.test_no_trailing_comma": ["pytest.raises"], "tests.test_imports.TestImports.test_trailing_comma_with_context": ["pytest.raises"], "tests.test_imports.TestImports.test_exports": ["<builtin>.hasattr"], "tests.test_imports.TestImports.test_not_exported": ["pytest.raises"], "tests.test_imports.TestImports.test_import_with_globals": [], "tests.test_imports.TestImports.test_import_with_globals_override": [], "tests.test_imports.TestImports.test_from_import_with_globals": [], "tests.test_imports.TestIncludes.test_context_include": [], "tests.test_imports.TestIncludes.test_choice_includes": ["tests.test_imports.TestIncludes.test_choice_includes.test_includes", "pytest.raises"], "tests.test_imports.TestIncludes.test_choice_includes.test_includes": [], "tests.test_imports.TestIncludes.test_include_ignoring_missing": ["pytest.raises"], "tests.test_imports.TestIncludes.test_context_include_with_overrides": ["jinja2.loaders.DictLoader", "<builtin>.dict", "jinja2.environment.Environment"], "tests.test_imports.TestIncludes.test_unoptimized_scopes": [], "tests.test_imports.TestIncludes.test_import_from_with_context": ["jinja2.loaders.DictLoader", "jinja2.environment.Environment"], "tests.test_bytecode_cache": ["pytest.fixture"], "tests.test_bytecode_cache.env": ["jinja2.Environment", "jinja2.bccache.FileSystemBytecodeCache", "<builtin>.str"], "jinja2.bccache.FileSystemBytecodeCache": [], "tests.test_bytecode_cache.TestByteCodeCache.test_simple": ["pytest.raises"], "tests.test_bytecode_cache.MockMemcached.get": [], "tests.test_bytecode_cache.MockMemcached.set": [], "tests.test_bytecode_cache.MockMemcached.get_side_effect": [], "tests.test_bytecode_cache.MockMemcached.set_side_effect": [], "tests.test_bytecode_cache.TestMemcachedBytecodeCache.test_dump_load": ["jinja2.bccache.Bucket", "jinja2.bccache.MemcachedBytecodeCache"], "jinja2.bccache.MemcachedBytecodeCache": [], "jinja2.bccache.Bucket": [], "tests.test_bytecode_cache.TestMemcachedBytecodeCache.test_exception": ["jinja2.bccache.Bucket", "pytest.raises", "jinja2.bccache.MemcachedBytecodeCache"], "tests.test_debug": ["pytest.fixture"], "tests.test_debug.fs_env": ["jinja2.Environment"], "tests.test_debug.TestDebug.assert_traceback_matches": ["traceback.format_exception", "tests.test_debug.TestDebug.test_runtime_error.test", "re.search", "tests.test_debug.TestDebug.test_regular_syntax_error.test", "pytest.raises"], "tests.test_debug.TestDebug.test_runtime_error.test": [], "tests.test_debug.TestDebug.test_regular_syntax_error.test": ["jinja2.TemplateSyntaxError"], "traceback.format_exception": [], "tests.test_debug.TestDebug.test_runtime_error": ["tests.test_debug.TestDebug.assert_traceback_matches"], "tests.test_debug.TestDebug.test_runtime_error.test.<lambda1>": [], "tests.test_debug.TestDebug.test_syntax_error": ["tests.test_debug.TestDebug.assert_traceback_matches"], "tests.test_debug.TestDebug.test_syntax_error.<lambda1>": [], "tests.test_debug.TestDebug.test_regular_syntax_error": ["tests.test_debug.TestDebug.assert_traceback_matches"], "jinja2.TemplateSyntaxError": [], "tests.test_debug.TestDebug.test_pickleable_syntax_error": ["jinja2.TemplateSyntaxError", "pickle.dumps", "<builtin>.str", "pickle.loads"], "tests.test_debug.TestDebug.test_include_syntax_error_source": ["jinja2.DictLoader", "jinja2.ChoiceLoader", "pytest.raises", "jinja2.Environment"], "jinja2.ChoiceLoader": [], "tests.test_debug.TestDebug.test_local_extraction": ["jinja2.debug.get_template_locals"], "jinja2.debug.get_template_locals": [], "tests.test_debug.TestDebug.test_get_corresponding_lineno_traceback": [], "tests.test_loader": ["pytest.fixture", "pytest.mark.parametrize", "platform.python_implementation", "pytest.mark.xfail"], "tests.test_loader.TestLoaders.test_dict_loader": ["jinja2.Environment", "pytest.raises"], "tests.test_loader.TestLoaders.test_package_loader": ["jinja2.Environment", "pytest.raises"], "tests.test_loader.TestLoaders.test_filesystem_loader_overlapping_names": ["pathlib.Path", "jinja2.Environment"], "tests.test_loader.TestLoaders.test_choice_loader": ["jinja2.Environment", "pytest.raises"], "tests.test_loader.TestLoaders.test_function_loader": ["jinja2.Environment", "pytest.raises"], "tests.test_loader.TestLoaders.test_prefix_loader": ["jinja2.Environment", "pytest.raises"], "tests.test_loader.TestLoaders.test_caching": ["jinja2.Environment"], "tests.test_loader.TestLoaders.test_caching.TestLoader.get_source": [], "tests.test_loader.TestLoaders.test_caching.TestLoader.get_source.<lambda1>": [], "tests.test_loader.TestLoaders.test_no_cache": ["jinja2.Environment", "jinja2.loaders.DictLoader"], "tests.test_loader.TestLoaders.test_limited_size_cache": ["jinja2.Environment", "jinja2.loaders.DictLoader", "weakref.ref"], "weakref.ref": [], "tests.test_loader.TestLoaders.test_cache_loader_change": ["jinja2.Environment", "jinja2.loaders.DictLoader"], "tests.test_loader.TestLoaders.test_dict_loader_cache_invalidates": ["jinja2.Environment", "jinja2.loaders.DictLoader"], "tests.test_loader.TestLoaders.test_split_template_path": ["jinja2.loaders.split_template_path", "pytest.raises"], "jinja2.loaders.split_template_path": [], "tests.test_loader.TestFileSystemLoader": ["pathlib.Path", "pytest.mark.parametrize"], "tests.test_loader.TestFileSystemLoader._test_common": ["pytest.raises"], "tests.test_loader.TestFileSystemLoader.test_searchpath_as_str": ["jinja2.Environment", "jinja2.loaders.FileSystemLoader", "tests.test_loader.TestFileSystemLoader._test_common", "<builtin>.str"], "tests.test_loader.TestFileSystemLoader.test_searchpath_as_pathlib": ["jinja2.Environment", "jinja2.loaders.FileSystemLoader", "tests.test_loader.TestFileSystemLoader._test_common"], "tests.test_loader.TestFileSystemLoader.test_searchpath_as_list_including_pathlib": ["jinja2.Environment", "jinja2.loaders.FileSystemLoader", "tests.test_loader.TestFileSystemLoader._test_common"], "tests.test_loader.TestFileSystemLoader.test_caches_template_based_on_mtime": ["jinja2.Environment", "time.time", "jinja2.loaders.FileSystemLoader", "os.utime"], "time.time": [], "os.utime": [], "tests.test_loader.TestFileSystemLoader.test_uses_specified_encoding": ["jinja2.Environment", "jinja2.loaders.FileSystemLoader"], "tests.test_loader.TestFileSystemLoader.test_filename_normpath": ["jinja2.Environment", "jinja2.loaders.FileSystemLoader", "<builtin>.str"], "tests.test_loader.TestModuleLoader.compile_down": ["jinja2.Environment", "os.close", "tempfile.mkdtemp", "jinja2.loaders.ModuleLoader", "tempfile.mkstemp"], "tempfile.mkstemp": [], "os.close": [], "tempfile.mkdtemp": [], "jinja2.loaders.ModuleLoader": [], "tests.test_loader.TestModuleLoader.teardown_method": ["os.remove", "shutil.rmtree", "os.path.isfile"], "os.path.isfile": [], "os.remove": [], "shutil.rmtree": [], "tests.test_loader.TestModuleLoader.test_log": ["tests.test_loader.TestModuleLoader.compile_down"], "tests.test_loader.TestModuleLoader._test_common": [], "tests.test_loader.TestModuleLoader.test_deflated_zip_compile": ["tests.test_loader.TestModuleLoader._test_common", "tests.test_loader.TestModuleLoader.compile_down"], "tests.test_loader.TestModuleLoader.test_stored_zip_compile": ["tests.test_loader.TestModuleLoader._test_common", "tests.test_loader.TestModuleLoader.compile_down"], "tests.test_loader.TestModuleLoader.test_filesystem_compile": ["tests.test_loader.TestModuleLoader._test_common", "tests.test_loader.TestModuleLoader.compile_down"], "tests.test_loader.TestModuleLoader.test_weak_references": ["<builtin>.hasattr", "jinja2.loaders.ModuleLoader.get_template_key", "gc.collect", "tests.test_loader.TestModuleLoader.compile_down"], "jinja2.loaders.ModuleLoader.get_template_key": [], "gc.collect": [], "tests.test_loader.TestModuleLoader.test_choice_loader": ["jinja2.loaders.DictLoader", "tests.test_loader.TestModuleLoader.compile_down", "jinja2.loaders.ChoiceLoader"], "tests.test_loader.TestModuleLoader.test_prefix_loader": ["jinja2.loaders.PrefixLoader", "jinja2.loaders.DictLoader", "tests.test_loader.TestModuleLoader.compile_down"], "tests.test_loader.TestModuleLoader.test_path_as_pathlib": ["pathlib.Path", "jinja2.Environment", "tests.test_loader.TestModuleLoader.compile_down", "jinja2.loaders.ModuleLoader", "tests.test_loader.TestModuleLoader._test_common"], "tests.test_loader.TestModuleLoader.test_supports_pathlib_in_list_of_paths": ["pathlib.Path", "jinja2.Environment", "tests.test_loader.TestModuleLoader.compile_down", "jinja2.loaders.ModuleLoader", "tests.test_loader.TestModuleLoader._test_common"], "tests.test_loader.package_dir_loader": ["pathlib.Path", "jinja2.PackageLoader"], "jinja2.PackageLoader": [], "tests.test_loader.test_package_dir_source": ["jinja2.loaders.split_template_path", "os.path.join"], "os.path.join": [], "tests.test_loader.test_package_dir_list": [], "tests.test_loader.package_file_loader": ["pathlib.Path", "jinja2.PackageLoader"], "tests.test_loader.test_package_file_source": ["jinja2.loaders.split_template_path", "os.path.join"], "tests.test_loader.test_package_file_list": [], "tests.test_loader.package_zip_loader": ["pathlib.Path", "jinja2.PackageLoader"], "tests.test_loader.test_package_zip_source": ["jinja2.loaders.split_template_path", "os.path.join"], "platform.python_implementation": [], "pytest.mark.xfail": [], "tests.test_loader.test_package_zip_list": [], "tests.test_loader.test_package_zip_omit_curdir": ["jinja2.PackageLoader"], "tests.test_loader.test_pep_451_import_hook": ["jinja2.PackageLoader", "sys.meta_path.insert"], "tests.test_loader.test_pep_451_import_hook.ImportHook.find_spec": [], "tests.test_loader.test_pep_451_import_hook.ImportHook.create_module": [], "tests.test_loader.test_pep_451_import_hook.ImportHook.exec_module": [], "sys.meta_path.insert": [], "tests.test_idtracking": [], "tests.test_idtracking.test_basics": ["jinja2.nodes.For", "jinja2.nodes.Assign", "jinja2.idtracking.symbols_for_node", "jinja2.nodes.Name", "jinja2.nodes.Output", "jinja2.nodes.Template"], "jinja2.nodes.Name": [], "jinja2.nodes.For": [], "jinja2.nodes.Template": [], "jinja2.idtracking.symbols_for_node": [], "tests.test_idtracking.test_complex": ["jinja2.nodes.Call", "jinja2.nodes.For", "jinja2.nodes.Assign", "jinja2.nodes.Filter", "jinja2.nodes.Name", "jinja2.idtracking.symbols_for_node", "jinja2.nodes.Macro", "jinja2.nodes.Output", "jinja2.nodes.Template", "jinja2.nodes.Include", "jinja2.nodes.Extends", "jinja2.nodes.TemplateData", "<builtin>.set", "jinja2.nodes.Block", "jinja2.nodes.Const", "jinja2.nodes.If"], "jinja2.nodes.TemplateData": [], "jinja2.nodes.Block": [], "jinja2.nodes.Const": [], "jinja2.nodes.Filter": [], "jinja2.nodes.Call": [], "jinja2.nodes.If": [], "jinja2.nodes.Macro": [], "jinja2.nodes.Include": [], "jinja2.nodes.Extends": [], "<builtin>.set": [], "tests.test_idtracking.test_if_branching_stores": ["jinja2.nodes.Assign", "jinja2.idtracking.symbols_for_node", "jinja2.nodes.Name", "jinja2.nodes.Template", "jinja2.nodes.Const", "jinja2.nodes.If"], "tests.test_idtracking.test_if_branching_stores_undefined": ["jinja2.nodes.Assign", "jinja2.idtracking.symbols_for_node", "jinja2.nodes.Name", "jinja2.nodes.Template", "jinja2.nodes.Const", "jinja2.nodes.If"], "tests.test_idtracking.test_if_branching_multi_scope": ["jinja2.nodes.For", "jinja2.nodes.Assign", "jinja2.idtracking.symbols_for_node", "jinja2.nodes.Name", "jinja2.nodes.Template", "jinja2.nodes.Include", "jinja2.nodes.Const", "jinja2.nodes.If"], "tests.test_api": [], "tests.test_api.TestExtendedAPI.test_item_and_attribute": ["jinja2.Environment", "jinja2.sandbox.SandboxedEnvironment"], "tests.test_api.TestExtendedAPI.test_finalize": ["jinja2.Environment"], "tests.test_api.TestExtendedAPI.test_finalize.<lambda1>": [], "tests.test_api.TestExtendedAPI.test_finalize_constant_expression": ["jinja2.Environment"], "tests.test_api.TestExtendedAPI.test_finalize_constant_expression.<lambda1>": [], "tests.test_api.TestExtendedAPI.test_no_finalize_template_data": ["jinja2.Environment"], "tests.test_api.TestExtendedAPI.test_no_finalize_template_data.<lambda1>": ["<builtin>.type"], "<builtin>.type": [], "tests.test_api.TestExtendedAPI.test_context_finalize": ["jinja2.Environment", "jinja2.utils.pass_context"], "tests.test_api.TestExtendedAPI.test_context_finalize.finalize": [], "tests.test_api.TestExtendedAPI.test_eval_finalize": ["jinja2.Environment", "jinja2.utils.pass_eval_context"], "jinja2.utils.pass_eval_context": [], "tests.test_api.TestExtendedAPI.test_eval_finalize.finalize": ["<builtin>.str"], "tests.test_api.TestExtendedAPI.test_env_autoescape": ["jinja2.Environment", "jinja2.utils.pass_environment"], "jinja2.utils.pass_environment": [], "tests.test_api.TestExtendedAPI.test_env_autoescape.finalize": ["<builtin>.repr"], "tests.test_api.TestExtendedAPI.test_cycler": ["jinja2.utils.Cycler", "<builtin>.next"], "jinja2.utils.Cycler": [], "tests.test_api.TestExtendedAPI.test_expressions": ["jinja2.is_undefined"], "jinja2.is_undefined": [], "tests.test_api.TestExtendedAPI.test_template_passthrough": ["jinja2.Template"], "tests.test_api.TestExtendedAPI.test_get_template_undefined": ["jinja2.ChainableUndefined", "jinja2.Undefined", "<builtin>.str", "jinja2.DictLoader", "pytest.raises"], "jinja2.Undefined": [], "jinja2.ChainableUndefined": [], "tests.test_api.TestExtendedAPI.test_autoescape_autoselect": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_api.TestExtendedAPI.test_autoescape_autoselect.select_autoescape": [], "tests.test_api.TestExtendedAPI.test_sandbox_max_range": ["jinja2.sandbox.SandboxedEnvironment", "pytest.raises"], "tests.test_api.TestMeta.test_find_undeclared_variables": ["jinja2.meta.find_undeclared_variables"], "jinja2.meta.find_undeclared_variables": [], "tests.test_api.TestMeta.test_find_refererenced_templates": ["jinja2.meta.find_referenced_templates", "<builtin>.next", "<builtin>.list"], "jinja2.meta.find_referenced_templates": [], "tests.test_api.TestMeta.test_find_included_templates": ["jinja2.meta.find_referenced_templates", "<builtin>.list"], "tests.test_api.TestStreaming.test_basic_streaming": ["<builtin>.range", "<builtin>.next", "<builtin>.list"], "tests.test_api.TestStreaming.test_buffered_streaming": ["<builtin>.range", "<builtin>.next", "<builtin>.list"], "tests.test_api.TestStreaming.test_streaming_behavior": [], "tests.test_api.TestStreaming.test_dump_stream": ["pathlib.Path", "tempfile.mkdtemp", "shutil.rmtree", "<builtin>.str"], "tests.test_api.TestUndefined.test_stopiteration_is_undefined": ["pytest.raises", "jinja2.Template"], "tests.test_api.TestUndefined.test_stopiteration_is_undefined.test": ["<builtin>.StopIteration"], "<builtin>.StopIteration": [], "tests.test_api.TestUndefined.test_undefined_and_special_attributes": ["jinja2.Undefined", "jinja2.ChainableUndefined", "pytest.raises"], "tests.test_api.TestUndefined.test_undefined_attribute_error": ["jinja2.Undefined", "<builtin>.getattr", "jinja2.ChainableUndefined", "pytest.raises"], "tests.test_api.TestUndefined.test_undefined_attribute_error.Error.__class__": ["<builtin>.AttributeError"], "<builtin>.AttributeError": [], "<builtin>.getattr": [], "tests.test_api.TestUndefined.test_logging_undefined": ["jinja2.Environment", "jinja2.make_logging_undefined", "pytest.raises"], "tests.test_api.TestUndefined.test_logging_undefined.DebugLogger.warning": [], "tests.test_api.TestUndefined.test_logging_undefined.DebugLogger.error": [], "jinja2.make_logging_undefined": [], "tests.test_api.TestUndefined.test_default_undefined": ["jinja2.Environment", "jinja2.ChainableUndefined", "jinja2.Undefined", "<builtin>.getattr", "<builtin>.hash", "pytest.raises"], "tests.test_api.TestUndefined.test_chainable_undefined": ["jinja2.Environment", "<builtin>.getattr", "pytest.raises"], "tests.test_api.TestUndefined.test_debug_undefined": ["jinja2.Environment", "jinja2.ChainableUndefined", "jinja2.DebugUndefined", "jinja2.Undefined", "<builtin>.getattr", "<builtin>.str", "pytest.raises", "jinja2.StrictUndefined"], "jinja2.DebugUndefined": [], "jinja2.StrictUndefined": [], "tests.test_api.TestUndefined.test_strict_undefined": ["jinja2.Environment", "<builtin>.getattr", "pytest.raises"], "tests.test_api.TestUndefined.test_indexing_gives_undefined": ["pytest.raises", "jinja2.Template"], "tests.test_api.TestUndefined.test_none_gives_proper_error": ["jinja2.Environment", "pytest.raises"], "tests.test_api.TestUndefined.test_object_repr": ["jinja2.Undefined", "jinja2.ChainableUndefined", "pytest.raises"], "tests.test_api.TestLowLevel.test_custom_code_generator": ["jinja2.Environment.from_string", "jinja2.Environment.__init__"], "tests.test_api.TestLowLevel.test_custom_code_generator.CustomCodeGenerator.visit_Const": ["jinja2.compiler.CodeGenerator.write", "<builtin>.repr", "<builtin>.super"], "jinja2.compiler.CodeGenerator.write": [], "<builtin>.super": [], "jinja2.Environment.from_string": [], "tests.test_api.TestLowLevel.test_custom_context": ["jinja2.Environment.from_string", "jinja2.Environment.__init__"], "tests.test_api.TestLowLevel.test_custom_context.CustomContext.resolve_or_missing": [], "tests.test_async_filters": ["pytest.mark.parametrize", "pytest.fixture", "tests.test_async_filters.mark_dualiter", "tests.test_async_filters.mark_dualiter.decorator"], "tests.test_async_filters.make_aiter": [], "tests.test_async_filters.mark_dualiter": [], "tests.test_async_filters.mark_dualiter.decorator": ["pytest.mark.parametrize"], "tests.test_async_filters.mark_dualiter.decorator.<list1>.<lambda1>": [], "tests.test_async_filters.mark_dualiter.decorator.<list1>.<lambda2>": [], "tests.test_async_filters.mark_dualiter.decorator.<lambda2>": ["tests.test_async_filters.make_aiter"], "tests.test_async_filters.env_async": ["jinja2.Environment"], "tests.test_async_filters.<lambda1>": ["<builtin>.range"], "tests.test_async_filters.test_first": [], "tests.test_async_filters.<lambda2>": [], "tests.test_async_filters.test_groupby": [], "tests.test_async_filters.test_groupby_case": [], "tests.test_async_filters.<lambda3>": [], "tests.test_async_filters.test_groupby_tuple_index": [], "tests.test_async_filters.make_articles": ["collections.namedtuple"], "tests.test_async_filters.test_groupby_multidot": [], "tests.test_async_filters.<lambda4>": [], "tests.test_async_filters.test_join_env_int": [], "tests.test_async_filters.<lambda5>": [], "tests.test_async_filters.test_join_string_list": ["jinja2.Environment"], "tests.test_async_filters.make_users": ["<builtin>.map", "collections.namedtuple"], "tests.test_async_filters.test_join_attribute": [], "tests.test_async_filters.<lambda6>": [], "tests.test_async_filters.test_simple_reject": [], "tests.test_async_filters.<lambda7>": [], "tests.test_async_filters.test_bool_reject": [], "tests.test_async_filters.<lambda8>": [], "tests.test_async_filters.test_simple_select": [], "tests.test_async_filters.<lambda9>": [], "tests.test_async_filters.test_bool_select": [], "tests.test_async_filters.test_simple_select_attr": [], "tests.test_async_filters.<lambda10>": ["<builtin>.list"], "tests.test_async_filters.test_simple_map": [], "tests.test_async_filters.test_map_sum": [], "tests.test_async_filters.test_attribute_map": [], "tests.test_async_filters.test_empty_map": [], "tests.test_async_filters.<lambda11>": [], "tests.test_async_filters.test_sum": [], "tests.test_async_filters.<lambda12>": [], "tests.test_async_filters.test_sum_attributes": [], "tests.test_async_filters.test_sum_attributes_nested": [], "tests.test_async_filters.test_sum_attributes_tuple": [], "tests.test_async_filters.<lambda13>": ["<builtin>.range"], "tests.test_async_filters.test_slice": [], "tests.test_async_filters.test_custom_async_filter": [], "tests.test_async_filters.test_custom_async_filter.customfilter": ["<builtin>.str"], "tests.test_async_filters.<lambda14>": ["<builtin>.range"], "tests.test_async_filters.test_custom_async_iteratable_filter": [], "tests.test_async_filters.test_custom_async_iteratable_filter.customfilter": ["<builtin>.len", "jinja2.async_utils.auto_aiter", "<builtin>.str"], "tests.test_runtime": [], "tests.test_runtime.test_loop_idx": ["jinja2.Template"], "tests.test_runtime.test_loop_idx0": ["jinja2.Template"], "tests.test_runtime.test_loopcontext0": ["<builtin>.len", "jinja2.runtime.LoopContext", "<builtin>.reversed"], "jinja2.runtime.LoopContext": [], "tests.test_runtime.test_loopcontext1": ["<builtin>.len", "jinja2.runtime.LoopContext", "<builtin>.reversed"], "tests.test_runtime.test_loopcontext2": ["<builtin>.len", "jinja2.runtime.LoopContext", "<builtin>.reversed"], "tests.test_runtime.test_iterator_not_advanced_early": ["itertools.groupby", "jinja2.Template"], "tests.test_runtime.test_iterator_not_advanced_early.<lambda1>": [], "itertools.groupby": [], "tests.test_runtime.test_mock_not_pass_arg_marker": ["jinja2.Template"], "tests.test_runtime.test_mock_not_pass_arg_marker.Calc.__getattr__": ["<builtin>.object"], "<builtin>.object": [], "tests.test_runtime.test_mock_not_pass_arg_marker.Calc.__call__": ["<builtin>.len"], "tests.test_core_tags": ["pytest.fixture"], "tests.test_core_tags.env_trim": ["jinja2.Environment"], "tests.test_core_tags.TestForLoop.test_simple": ["<builtin>.range", "<builtin>.list"], "tests.test_core_tags.TestForLoop.test_else": [], "tests.test_core_tags.TestForLoop.test_else_scoping_item": [], "tests.test_core_tags.TestForLoop.test_empty_blocks": [], "tests.test_core_tags.TestForLoop.test_context_vars": ["<builtin>.int"], "tests.test_core_tags.TestForLoop.test_cycling": ["<builtin>.range", "<builtin>.list"], "tests.test_core_tags.TestForLoop.test_lookaround": ["<builtin>.range", "<builtin>.list"], "tests.test_core_tags.TestForLoop.test_changed": [], "tests.test_core_tags.TestForLoop.test_scope": ["<builtin>.range", "<builtin>.list"], "tests.test_core_tags.TestForLoop.test_varlen": ["<builtin>.range"], "tests.test_core_tags.TestForLoop.test_noniter": ["pytest.raises"], "tests.test_core_tags.TestForLoop.test_recursive": [], "tests.test_core_tags.TestForLoop.test_recursive_lookaround": [], "tests.test_core_tags.TestForLoop.test_recursive_depth0": [], "tests.test_core_tags.TestForLoop.test_recursive_depth": [], "tests.test_core_tags.TestForLoop.test_looploop": [], "tests.test_core_tags.TestForLoop.test_reversed_bug": ["<builtin>.reversed"], "tests.test_core_tags.TestForLoop.test_loop_errors": ["pytest.raises"], "tests.test_core_tags.TestForLoop.test_loop_filter": [], "tests.test_core_tags.TestForLoop.test_loop_unassignable": ["pytest.raises"], "tests.test_core_tags.TestForLoop.test_scoped_special_var": [], "tests.test_core_tags.TestForLoop.test_scoped_loop_var": [], "tests.test_core_tags.TestForLoop.test_recursive_empty_loop_iter": ["<builtin>.dict"], "tests.test_core_tags.TestForLoop.test_call_in_loop": [], "tests.test_core_tags.TestForLoop.test_scoping_bug": [], "tests.test_core_tags.TestForLoop.test_unpacking": [], "tests.test_core_tags.TestForLoop.test_intended_scoping_with_set": [], "tests.test_core_tags.TestIfCondition.test_simple": [], "tests.test_core_tags.TestIfCondition.test_elif": [], "tests.test_core_tags.TestIfCondition.test_elif_deep": ["<builtin>.range", "<builtin>.str"], "tests.test_core_tags.TestIfCondition.test_else": [], "tests.test_core_tags.TestIfCondition.test_empty": [], "tests.test_core_tags.TestIfCondition.test_complete": [], "tests.test_core_tags.TestIfCondition.test_no_scope": [], "tests.test_core_tags.TestMacros.test_simple": [], "tests.test_core_tags.TestMacros.test_scoping": [], "tests.test_core_tags.TestMacros.test_arguments": [], "tests.test_core_tags.TestMacros.test_arguments_defaults_nonsense": ["pytest.raises"], "tests.test_core_tags.TestMacros.test_caller_defaults_nonsense": ["pytest.raises"], "tests.test_core_tags.TestMacros.test_varargs": [], "tests.test_core_tags.TestMacros.test_simple_call": [], "tests.test_core_tags.TestMacros.test_complex_call": [], "tests.test_core_tags.TestMacros.test_caller_undefined": [], "tests.test_core_tags.TestMacros.test_include": ["jinja2.DictLoader", "jinja2.Environment"], "tests.test_core_tags.TestMacros.test_macro_api": [], "tests.test_core_tags.TestMacros.test_callself": [], "tests.test_core_tags.TestMacros.test_macro_defaults_self_ref": [], "tests.test_core_tags.TestSet.test_normal": [], "tests.test_core_tags.TestSet.test_block": [], "tests.test_core_tags.TestSet.test_block_escaping": ["jinja2.Environment"], "tests.test_core_tags.TestSet.test_set_invalid": ["pytest.raises"], "tests.test_core_tags.TestSet.test_namespace_redefined": ["pytest.raises"], "tests.test_core_tags.TestSet.test_namespace": [], "tests.test_core_tags.TestSet.test_namespace_block": [], "tests.test_core_tags.TestSet.test_init_namespace": [], "tests.test_core_tags.TestSet.test_namespace_loop": [], "tests.test_core_tags.TestSet.test_namespace_macro": [], "tests.test_core_tags.TestSet.test_block_escaping_filtered": ["jinja2.Environment"], "tests.test_core_tags.TestSet.test_block_filtered": [], "tests.test_core_tags.TestSet.test_block_filtered_set": [], "tests.test_core_tags.TestSet.test_block_filtered_set._myfilter": [], "tests.test_core_tags.TestWith.test_with": [], "tests.test_core_tags.TestWith.test_with_argument_scoping": [], "tests.test_tests": [], "tests.test_tests.TestTestsCase.test_defined": [], "tests.test_tests.TestTestsCase.test_even": [], "tests.test_tests.TestTestsCase.test_odd": [], "tests.test_tests.TestTestsCase.test_lower": [], "tests.test_tests.TestTestsCase": ["pytest.mark.parametrize"], "tests.test_tests.TestTestsCase.test_types": ["<builtin>.complex", "<builtin>.str"], "<builtin>.complex": [], "tests.test_tests.TestTestsCase.test_upper": [], "tests.test_tests.TestTestsCase.test_equalto": [], "tests.test_tests.TestTestsCase.test_compare_aliases": ["<builtin>.str"], "tests.test_tests.TestTestsCase.test_sameas": [], "tests.test_tests.TestTestsCase.test_no_paren_for_arg1": [], "tests.test_tests.TestTestsCase.test_escaped": ["jinja2.Environment", "markupsafe.Markup"], "tests.test_tests.TestTestsCase.test_greaterthan": [], "tests.test_tests.TestTestsCase.test_lessthan": [], "tests.test_tests.TestTestsCase.test_multiple_tests": ["jinja2.Environment"], "tests.test_tests.TestTestsCase.test_multiple_tests.matching": [], "tests.test_tests.TestTestsCase.test_in": [], "tests.test_tests.test_name_undefined": ["pytest.raises"], "tests.test_tests.test_name_undefined_in_if": ["pytest.raises"], "tests.test_tests.test_is_filter": [], "tests.test_tests.test_is_test": [], "tests.test_compile": [], "tests.test_compile.test_filters_deterministic": ["jinja2.loaders.DictLoader", "re.findall", "os.listdir", "<builtin>.range", "jinja2.environment.Environment"], "tests.test_compile.test_filters_deterministic.<lambda1>": [], "os.listdir": [], "re.findall": [], "tests.test_compile.test_import_as_with_context_deterministic": ["jinja2.loaders.DictLoader", "re.findall", "os.listdir", "<builtin>.range", "jinja2.environment.Environment"]}
{"jwt.utils": ["bytes.join", "re.compile"], "jwt.api_jws": ["jwt.api_jws.PyJWS"], "jwt.api_jws.PyJWS.__init__": ["jwt.algorithms.get_default_algorithms", "builtins.set", "dict.keys", "builtins.list", "jwt.api_jws.PyJWS._get_default_options"], "jwt.algorithms.get_default_algorithms": ["jwt.algorithms.NoneAlgorithm", "jwt.algorithms.HMACAlgorithm"], "jwt.api_jwt": ["jwt.api_jwt.PyJWT"], "jwt.api_jwt.PyJWT.__init__": ["jwt.api_jwt.PyJWT._get_default_options"], "tests.utils.crypto_required": ["MarkDecorator(mark=Mark(name='skipif', args=(), kwargs={}))", "MarkDecorator(mark=Mark(name='skipif', args=(True,), kwargs={'reason': 'Requires cryptography library installed'}))"], "tests.keys.__init__": ["posixpath.abspath", "posixpath.dirname"], "tests.utils.no_crypto_required": ["MarkDecorator(mark=Mark(name='skipif', args=(), kwargs={}))", "MarkDecorator(mark=Mark(name='skipif', args=(False,), kwargs={'reason': 'Requires cryptography library not installed'}))"], "tests.test_algorithms.TestAlgorithms.test_algorithm_should_throw_exception_if_prepare_key_not_impl": ["jwt.algorithms.Algorithm", "_pytest.python_api.raises", "jwt.algorithms.Algorithm.prepare_key"], "tests.test_algorithms.TestAlgorithms.test_algorithm_should_throw_exception_if_sign_not_impl": ["jwt.algorithms.Algorithm", "_pytest.python_api.raises", "jwt.algorithms.Algorithm.sign"], "tests.test_algorithms.TestAlgorithms.test_algorithm_should_throw_exception_if_verify_not_impl": ["jwt.algorithms.Algorithm", "_pytest.python_api.raises", "jwt.algorithms.Algorithm.verify"], "tests.test_algorithms.TestAlgorithms.test_algorithm_should_throw_exception_if_to_jwk_not_impl": ["jwt.algorithms.Algorithm", "_pytest.python_api.raises", "jwt.algorithms.Algorithm.from_jwk"], "tests.test_algorithms.TestAlgorithms.test_algorithm_should_throw_exception_if_from_jwk_not_impl": ["jwt.algorithms.Algorithm", "_pytest.python_api.raises", "jwt.algorithms.Algorithm.to_jwk"], "tests.test_algorithms.TestAlgorithms.test_algorithm_should_throw_exception_if_compute_hash_digest_not_impl": ["jwt.algorithms.Algorithm", "_pytest.python_api.raises", "jwt.algorithms.Algorithm.compute_hash_digest"], "jwt.algorithms.Algorithm.compute_hash_digest": ["builtins.getattr"], "tests.test_algorithms.TestAlgorithms.test_none_algorithm_should_throw_exception_if_key_is_not_none": ["jwt.algorithms.NoneAlgorithm", "_pytest.python_api.raises", "jwt.algorithms.NoneAlgorithm.prepare_key"], "jwt.algorithms.NoneAlgorithm.prepare_key": ["jwt.exceptions.InvalidKeyError"], "tests.test_algorithms.TestAlgorithms.test_hmac_should_reject_nonstring_key": ["jwt.algorithms.HMACAlgorithm", "_pytest.python_api.raises", "builtins.object", "jwt.algorithms.HMACAlgorithm.prepare_key", "builtins.str"], "jwt.algorithms.HMACAlgorithm.prepare_key": ["jwt.utils.force_bytes", "jwt.utils.is_pem_format", "jwt.utils.is_ssh_key", "jwt.exceptions.InvalidKeyError"], "jwt.utils.force_bytes": ["builtins.isinstance", "builtins.TypeError", "str.encode"], "tests.test_algorithms.TestAlgorithms.test_hmac_should_accept_unicode_key": ["jwt.algorithms.HMACAlgorithm", "jwt.algorithms.HMACAlgorithm.prepare_key"], "jwt.utils.is_pem_format": ["Pattern.search", "builtins.bool"], "jwt.utils.is_ssh_key": ["Pattern.match"], "tests.test_algorithms.TestAlgorithms.test_hmac_should_throw_exception": ["jwt.algorithms.HMACAlgorithm", "_pytest.python_api.raises", "tests.utils.key_path", "io.open", "TextIOWrapper.read", "jwt.algorithms.HMACAlgorithm.prepare_key"], "tests.utils.key_path": ["posixpath.realpath", "posixpath.dirname", "posixpath.join"], "tests.test_algorithms.TestAlgorithms.test_hmac_jwk_should_parse_and_verify": ["jwt.algorithms.HMACAlgorithm", "tests.utils.key_path", "io.open", "TextIOWrapper.read", "jwt.algorithms.HMACAlgorithm.from_jwk", "jwt.algorithms.HMACAlgorithm.sign", "jwt.algorithms.HMACAlgorithm.verify"], "jwt.algorithms.HMACAlgorithm.from_jwk": ["builtins.isinstance", "json.loads", "dict.get", "jwt.utils.base64url_decode", "jwt.exceptions.InvalidKeyError"], "jwt.utils.base64url_decode": ["jwt.utils.force_bytes", "builtins.len", "base64.urlsafe_b64decode"], "jwt.algorithms.HMACAlgorithm.sign": ["hmac.new", "hmac.HMAC.digest"], "jwt.algorithms.HMACAlgorithm.verify": ["jwt.algorithms.HMACAlgorithm.sign", "_hashlib.compare_digest"], "tests.test_algorithms.TestAlgorithms.test_hmac_to_jwk_returns_correct_values": ["jwt.algorithms.HMACAlgorithm", "jwt.algorithms.HMACAlgorithm.to_jwk", "json.loads"], "jwt.algorithms.HMACAlgorithm.to_jwk": ["jwt.utils.force_bytes", "jwt.utils.base64url_encode", "bytes.decode", "json.dumps"], "jwt.utils.base64url_encode": ["base64.urlsafe_b64encode", "bytes.replace"], "tests.test_algorithms.TestAlgorithms.test_hmac_from_jwk_should_raise_exception_if_not_hmac_key": ["jwt.algorithms.HMACAlgorithm", "tests.utils.key_path", "io.open", "_pytest.python_api.raises", "TextIOWrapper.read", "jwt.algorithms.HMACAlgorithm.from_jwk"], "tests.test_algorithms.TestAlgorithmsRFC7520.test_hmac_verify_should_return_true_for_test_vector": ["jwt.utils.base64url_decode", "jwt.algorithms.HMACAlgorithm", "tests.keys.load_hmac_key", "jwt.algorithms.HMACAlgorithm.prepare_key", "jwt.algorithms.HMACAlgorithm.verify"], "tests.keys.__init__.load_hmac_key": ["posixpath.join", "io.open", "json.load", "jwt.utils.base64url_decode"], "tests.test_api_jws.jws": ["jwt.api_jws.PyJWS"], "tests.test_api_jws.TestJWS.test_register_algo_does_not_allow_duplicate_registration": ["jwt.algorithms.Algorithm", "jwt.api_jws.PyJWS.register_algorithm", "_pytest.python_api.raises"], "jwt.api_jws.PyJWS.register_algorithm": ["builtins.isinstance", "set.add", "builtins.ValueError", "builtins.TypeError"], "tests.test_api_jws.TestJWS.test_register_algo_rejects_non_algorithm_obj": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.register_algorithm"], "tests.test_api_jws.TestJWS.test_unregister_algo_removes_algorithm": ["jwt.api_jws.PyJWS.get_algorithms", "jwt.api_jws.PyJWS.unregister_algorithm"], "jwt.api_jws.PyJWS.get_algorithms": ["builtins.list"], "jwt.api_jws.PyJWS.unregister_algorithm": ["set.remove", "builtins.KeyError"], "tests.test_api_jws.TestJWS.test_unregister_algo_throws_error_if_not_registered": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.unregister_algorithm"], "tests.test_api_jws.TestJWS.test_algo_parameter_removes_alg_from_algorithms_list": ["jwt.api_jws.PyJWS.get_algorithms", "jwt.api_jws.PyJWS"], "tests.test_api_jws.TestJWS.test_override_options": ["jwt.api_jws.PyJWS"], "tests.test_api_jws.TestJWS.test_non_object_options_dont_persist": ["jwt.api_jws.PyJWS.encode", "jwt.api_jws.PyJWS.decode"], "jwt.api_jws.PyJWS.encode": ["json.dumps", "str.encode", "jwt.utils.base64url_encode", "list.append", "bytes.join", "jwt.api_jws.PyJWS.get_algorithm_by_name", "jwt.algorithms.HMACAlgorithm.prepare_key", "jwt.algorithms.HMACAlgorithm.sign", "bytes.decode", "dict.get", "jwt.api_jws.PyJWS._validate_headers", "dict.update", "jwt.algorithms.NoneAlgorithm.prepare_key", "jwt.algorithms.NoneAlgorithm.sign"], "jwt.api_jws.PyJWS.decode": ["jwt.api_jws.PyJWS.decode_complete", "_warnings.warn"], "jwt.api_jws.PyJWS.decode_complete": ["jwt.api_jws.PyJWS._load", "dict.get", "jwt.api_jws.PyJWS._verify_signature", "jwt.exceptions.DecodeError", "bytes.rsplit", "bytes.join", "_warnings.warn"], "jwt.api_jws.PyJWS._load": ["builtins.isinstance", "str.encode", "bytes.rsplit", "bytes.split", "jwt.utils.base64url_decode", "json.loads", "jwt.exceptions.DecodeError"], "tests.test_api_jws.TestJWS.test_options_must_be_dict": ["builtins.object", "_pytest.python_api.raises"], "tests.test_api_jws.TestJWS.test_encode_decode": ["jwt.api_jws.PyJWS.encode", "jwt.api_jws.PyJWS.decode"], "jwt.api_jws.PyJWS._verify_signature": ["jwt.api_jws.PyJWS.get_algorithm_by_name", "jwt.algorithms.HMACAlgorithm.prepare_key", "jwt.algorithms.HMACAlgorithm.verify", "jwt.exceptions.InvalidAlgorithmError", "jwt.algorithms.NoneAlgorithm.prepare_key", "jwt.algorithms.NoneAlgorithm.verify", "jwt.exceptions.InvalidSignatureError"], "tests.test_api_jws.TestJWS.test_decode_fails_when_alg_is_not_on_method_algorithms_param": ["jwt.api_jws.PyJWS.encode", "jwt.api_jws.PyJWS.decode", "_pytest.python_api.raises"], "tests.test_api_jws.TestJWS.test_decode_works_with_unicode_token": ["jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_decode_missing_segments_throws_exception": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_decode_invalid_token_type_is_none": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_decode_invalid_token_type_is_int": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_decode_with_non_mapping_header_throws_exception": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_encode_algorithm_param_should_be_case_sensitive": ["jwt.api_jws.PyJWS.encode", "_pytest.python_api.raises", "builtins.str"], "jwt.api_jws.PyJWS.get_algorithm_by_name": ["builtins.NotImplementedError"], "tests.test_api_jws.TestJWS.test_encode_with_headers_alg_none": ["jwt.api_jws.PyJWS.encode", "_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_decode_algorithm_param_should_be_case_sensitive": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_bad_secret": ["jwt.api_jws.PyJWS.encode", "_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_decodes_valid_jws": ["jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_decodes_complete_valid_jws": ["jwt.api_jws.PyJWS.decode_complete"], "tests.test_api_jws.TestJWS.test_load_verify_valid_jws": ["jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_allow_skip_verification": ["jwt.api_jws.PyJWS.encode", "jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_decode_with_optional_algorithms": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_decode_no_algorithms_verify_signature_false": ["jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_load_no_verification": ["jwt.api_jws.PyJWS.encode", "jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_no_secret": ["jwt.api_jws.PyJWS.encode", "_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_verify_signature_with_no_secret": ["jwt.api_jws.PyJWS.encode", "_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_verify_signature_with_no_algo_header_throws_exception": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_invalid_crypto_alg": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.encode"], "tests.test_api_jws.TestJWS.test_missing_crypto_library_better_error_messages": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.encode"], "tests.test_api_jws.TestJWS.test_unicode_secret": ["jwt.api_jws.PyJWS.encode", "jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_nonascii_secret": ["jwt.api_jws.PyJWS.encode", "jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_bytes_secret": ["jwt.api_jws.PyJWS.encode", "jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_sorting_of_headers": ["jwt.api_jws.PyJWS.encode", "str.split", "jwt.utils.base64url_decode", "bytes.index"], "tests.test_api_jws.TestJWS.test_decode_invalid_header_padding": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_decode_invalid_header_string": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_decode_invalid_payload_padding": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_decode_invalid_crypto_padding": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_decode_with_algo_none_should_fail": ["jwt.api_jws.PyJWS.encode", "_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_decode_with_algo_none_and_verify_false_should_pass": ["jwt.api_jws.PyJWS.encode", "jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_get_unverified_header_returns_header_values": ["jwt.api_jws.PyJWS.encode", "jwt.api_jws.PyJWS.get_unverified_header"], "jwt.api_jws.PyJWS._validate_headers": ["jwt.api_jws.PyJWS._validate_kid"], "jwt.api_jws.PyJWS._validate_kid": ["builtins.isinstance", "jwt.exceptions.InvalidTokenError"], "jwt.api_jws.PyJWS.get_unverified_header": ["jwt.api_jws.PyJWS._load", "jwt.api_jws.PyJWS._validate_headers"], "tests.test_api_jws.TestJWS.test_get_unverified_header_fails_on_bad_header_types": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.get_unverified_header", "builtins.str"], "tests.test_api_jws.TestJWS.test_rsa_related_algorithms": ["jwt.api_jws.PyJWS", "jwt.api_jws.PyJWS.get_algorithms"], "tests.test_api_jws.TestJWS.test_ecdsa_related_algorithms": ["jwt.api_jws.PyJWS", "jwt.api_jws.PyJWS.get_algorithms"], "tests.test_api_jws.TestJWS.test_skip_check_signature": ["jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_decode_options_must_be_dict": ["jwt.api_jws.PyJWS.encode", "_pytest.python_api.raises", "builtins.object", "jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_custom_json_encoder": ["decimal.Decimal", "_pytest.python_api.raises", "jwt.api_jws.PyJWS.encode", "str.split", "jwt.utils.base64url_decode", "json.loads"], "tests.test_api_jws.CustomJSONEncoder.default": ["builtins.isinstance"], "tests.test_api_jws.TestJWS.test_encode_headers_parameter_adds_headers": ["jwt.api_jws.PyJWS.encode", "builtins.isinstance", "str.index", "str.encode", "jwt.utils.base64url_decode", "bytes.decode", "json.loads"], "tests.test_api_jws.TestJWS.test_encode_with_typ": ["str.encode", "jwt.api_jws.PyJWS.encode", "str.index", "jwt.utils.base64url_decode", "json.loads"], "tests.test_api_jws.TestJWS.test_encode_with_typ_empty_string": ["jwt.api_jws.PyJWS.encode", "str.index", "str.encode", "jwt.utils.base64url_decode", "json.loads"], "tests.test_api_jws.TestJWS.test_encode_with_typ_none": ["jwt.api_jws.PyJWS.encode", "str.index", "str.encode", "jwt.utils.base64url_decode", "json.loads"], "tests.test_api_jws.TestJWS.test_encode_with_typ_without_keywords": ["jwt.api_jws.PyJWS.encode", "str.index", "str.encode", "jwt.utils.base64url_decode", "json.loads"], "tests.test_api_jws.TestJWS.test_encode_fails_on_invalid_kid_types": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.encode", "builtins.str"], "tests.test_api_jws.TestJWS.test_encode_decode_with_detached_content": ["jwt.api_jws.PyJWS.encode", "jwt.api_jws.PyJWS.decode"], "tests.test_api_jws.TestJWS.test_encode_detached_content_with_b64_header": ["jwt.api_jws.PyJWS.encode", "str.split", "str.encode", "jwt.utils.base64url_decode", "json.loads"], "tests.test_api_jws.TestJWS.test_decode_detached_content_without_proper_argument": ["_pytest.python_api.raises", "jwt.api_jws.PyJWS.decode", "builtins.str"], "tests.test_api_jws.TestJWS.test_decode_warns_on_unsupported_kwarg": ["jwt.api_jws.PyJWS.encode", "_pytest.recwarn.warns", "jwt.api_jws.PyJWS.decode", "builtins.len", "builtins.str"], "tests.test_api_jws.TestJWS.test_decode_complete_warns_on_unuspported_kwarg": ["jwt.api_jws.PyJWS.encode", "_pytest.recwarn.warns", "jwt.api_jws.PyJWS.decode_complete", "builtins.len", "builtins.str"], "tests.test_api_jwt.jwt": ["jwt.api_jwt.PyJWT"], "tests.test_api_jwt.TestJWT.test_decodes_valid_jwt": ["jwt.api_jwt.PyJWT.decode"], "jwt.api_jwt.PyJWT.decode": ["jwt.api_jwt.PyJWT.decode_complete", "_warnings.warn"], "jwt.api_jwt.PyJWT.decode_complete": ["builtins.dict", "dict.setdefault", "jwt.api_jws.PyJWS.decode_complete", "jwt.api_jwt.PyJWT._decode_payload", "jwt.api_jwt.PyJWT._validate_claims", "jwt.exceptions.DecodeError", "_warnings.warn", "tests.test_compressed_jwt.CompressedPyJWT._decode_payload"], "jwt.api_jwt.PyJWT._decode_payload": ["json.loads", "builtins.isinstance", "jwt.exceptions.DecodeError"], "jwt.api_jwt.PyJWT._validate_claims": ["builtins.isinstance", "jwt.api_jwt.PyJWT._validate_required_claims", "datetime.now", "datetime.timestamp", "jwt.api_jwt.PyJWT._validate_iss", "jwt.api_jwt.PyJWT._validate_aud", "builtins.TypeError", "jwt.api_jwt.PyJWT._validate_exp", "jwt.api_jwt.PyJWT._validate_iat", "jwt.api_jwt.PyJWT._validate_nbf"], "tests.test_api_jwt.TestJWT.test_decodes_complete_valid_jwt": ["jwt.api_jwt.PyJWT.decode_complete"], "tests.test_api_jwt.TestJWT.test_load_verify_valid_jwt": ["jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_invalid_payload_string": ["_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode", "builtins.str"], "tests.test_api_jwt.TestJWT.test_decode_with_non_mapping_payload_throws_exception": ["_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode", "builtins.str"], "tests.test_api_jwt.TestJWT.test_decode_with_invalid_audience_param_throws_exception": ["_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode", "builtins.str"], "tests.test_api_jwt.TestJWT.test_decode_with_nonlist_aud_claim_throws_exception": ["_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode", "builtins.str"], "jwt.api_jwt.PyJWT._validate_aud": ["builtins.isinstance", "jwt.exceptions.InvalidAudienceError", "jwt.exceptions.MissingRequiredClaimError"], "tests.test_api_jwt.TestJWT.test_decode_with_invalid_aud_list_member_throws_exception": ["_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode", "builtins.str"], "tests.test_api_jwt.TestJWT.test_encode_bad_type": ["builtins.tuple", "builtins.list", "builtins.set", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.encode"], "tests.test_api_jwt.TestJWT.test_encode_with_typ": ["jwt.api_jwt.PyJWT.encode", "str.index", "str.encode", "jwt.utils.base64url_decode", "json.loads"], "jwt.api_jwt.PyJWT.encode": ["builtins.isinstance", "dict.copy", "dict.get", "jwt.api_jwt.PyJWT._encode_payload", "jwt.api_jws.PyJWS.encode", "datetime.utctimetuple", "calendar.timegm"], "jwt.api_jwt.PyJWT._encode_payload": ["json.dumps", "str.encode"], "tests.test_api_jwt.TestJWT.test_decode_raises_exception_if_exp_is_not_int": ["_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode", "builtins.str"], "jwt.api_jwt.PyJWT._validate_exp": ["builtins.int", "jwt.exceptions.DecodeError", "jwt.exceptions.ExpiredSignatureError"], "tests.test_api_jwt.TestJWT.test_decode_raises_exception_if_iat_is_not_int": ["_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "jwt.api_jwt.PyJWT._validate_iat": ["builtins.int", "jwt.exceptions.InvalidIssuedAtError"], "tests.test_api_jwt.payload": ["tests.utils.utc_timestamp"], "tests.utils.utc_timestamp": ["datetime.now", "datetime.utctimetuple", "calendar.timegm"], "tests.test_api_jwt.TestJWT.test_decode_raises_exception_if_iat_is_greater_than_now": ["tests.utils.utc_timestamp", "jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_works_if_iat_is_str_of_a_number": ["jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_raises_exception_if_nbf_is_not_int": ["_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "jwt.api_jwt.PyJWT._validate_nbf": ["builtins.int", "jwt.exceptions.DecodeError"], "tests.test_api_jwt.TestJWT.test_decode_raises_exception_if_aud_is_none": ["jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_encode_datetime": ["datetime.now", "jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_with_expiration": ["tests.utils.utc_timestamp", "jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_with_notbefore": ["tests.utils.utc_timestamp", "jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_skip_expiration_verification": ["time.time", "jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_skip_notbefore_verification": ["time.time", "jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_with_expiration_with_leeway": ["tests.utils.utc_timestamp", "jwt.api_jwt.PyJWT.encode", "datetime.timedelta", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_with_notbefore_with_leeway": ["tests.utils.utc_timestamp", "jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_check_audience_when_valid": ["jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_check_audience_list_when_valid": ["jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_check_audience_none_specified": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_raise_exception_invalid_audience_list": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_check_audience_in_array_when_valid": ["jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_raise_exception_invalid_audience": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_raise_exception_audience_as_bytes": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "str.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_raise_exception_invalid_audience_in_array": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_raise_exception_token_without_issuer": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "jwt.api_jwt.PyJWT._validate_iss": ["jwt.exceptions.MissingRequiredClaimError", "jwt.exceptions.InvalidIssuerError"], "tests.test_api_jwt.TestJWT.test_raise_exception_token_without_audience": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_raise_exception_token_with_aud_none_and_without_audience": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_check_issuer_when_valid": ["jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_raise_exception_invalid_issuer": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_skip_check_audience": ["jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_skip_check_exp": ["datetime.now", "datetime.timedelta", "jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_should_raise_error_if_exp_required_but_not_present": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "jwt.api_jwt.PyJWT._validate_required_claims": ["dict.get", "jwt.exceptions.MissingRequiredClaimError"], "tests.test_api_jwt.TestJWT.test_decode_should_raise_error_if_iat_required_but_not_present": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_should_raise_error_if_nbf_required_but_not_present": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_skip_check_signature": ["jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_skip_check_iat": ["datetime.now", "datetime.timedelta", "jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_skip_check_nbf": ["datetime.now", "datetime.timedelta", "jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_custom_json_encoder": ["decimal.Decimal", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.CustomJSONEncoder.default": ["builtins.isinstance"], "tests.test_api_jwt.TestJWT.test_decode_with_verify_exp_option": ["tests.utils.utc_timestamp", "jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode", "_pytest.python_api.raises"], "tests.test_api_jwt.TestJWT.test_decode_with_verify_exp_option_and_signature_off": ["tests.utils.utc_timestamp", "jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode", "_pytest.python_api.raises"], "tests.test_api_jwt.TestJWT.test_decode_with_optional_algorithms": ["jwt.api_jwt.PyJWT.encode", "_pytest.python_api.raises", "jwt.api_jwt.PyJWT.decode", "builtins.str"], "tests.test_api_jwt.TestJWT.test_decode_no_algorithms_verify_signature_false": ["jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_legacy_verify_warning": ["jwt.api_jwt.PyJWT.encode", "_pytest.recwarn.deprecated_call", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_no_options_mutation": ["dict.copy", "jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_warns_on_unsupported_kwarg": ["jwt.api_jwt.PyJWT.encode", "_pytest.recwarn.warns", "jwt.api_jwt.PyJWT.decode"], "tests.test_api_jwt.TestJWT.test_decode_complete_warns_on_unsupported_kwarg": ["jwt.api_jwt.PyJWT.encode", "_pytest.recwarn.warns", "jwt.api_jwt.PyJWT.decode_complete"], "tests.test_compressed_jwt.test_decodes_complete_valid_jwt_with_compressed_payload": ["tests.test_compressed_jwt.CompressedPyJWT", "jwt.api_jwt.PyJWT.decode_complete"], "tests.test_compressed_jwt.CompressedPyJWT._decode_payload": ["zlib.decompress", "bytes.decode", "json.loads"], "tests.test_exceptions.test_missing_required_claim_error_has_proper_str": ["jwt.exceptions.MissingRequiredClaimError", "builtins.str"], "tests.test_jwt.test_encode_decode": ["tests.utils.utc_timestamp", "jwt.api_jwt.PyJWT.encode", "jwt.api_jwt.PyJWT.decode"], "tests.test_utils.test_to_base64url_uint": ["jwt.utils.to_base64url_uint"], "jwt.utils.to_base64url_uint": ["jwt.utils.bytes_from_int", "builtins.len", "jwt.utils.base64url_encode", "builtins.ValueError"], "jwt.utils.bytes_from_int": ["int.to_bytes"], "tests.test_utils.test_from_base64url_uint": ["jwt.utils.from_base64url_uint"], "jwt.utils.from_base64url_uint": ["jwt.utils.force_bytes", "jwt.utils.base64url_decode", "int.from_bytes"], "tests.test_utils.test_force_bytes_raises_error_on_invalid_object": ["_pytest.python_api.raises", "jwt.utils.force_bytes"]}

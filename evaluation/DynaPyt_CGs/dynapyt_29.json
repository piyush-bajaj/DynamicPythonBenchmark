{
    "funcy.calc" : ["funcy.calc._make_lookuper"], 
    "funcy.primitives" : ["funcy.primitives.EmptyType"], 
    "funcy._inspect" : ["str.split", "dict.fromkeys", "dict.update", "dict.items", "str.strip", "builtins.set", "builtins.hasattr", "collections.namedtuple"], 
    "funcy.strings" : ["re.compile", "builtins.type"], 
    "funcy.types" : ["funcy.types.isa"], 
    "funcy.colls" : ["builtins.type", "dict.keys", "dict.values", "dict.items"], 
    "funcy.decorators.decorator" : ["funcy.decorators.has_single_arg", "funcy.decorators.has_1pos_and_kwonly", "funcy.decorators.wraps", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function retry at 0x7fb4af946830>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function post_processing at 0x7fb4af860820>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function joining at 0x7fb4af860af0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function wrap_with at 0x7fb4af6e1f30>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function log_calls at 0x7fb4af862ef0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function log_enters at 0x7fb4af6e0e50>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function log_exits at 0x7fb4af862dd0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "funcy.decorators.make_decorator", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_decorator_with_args.<locals>.add at 0x7fb4af30a9e0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_decorator_kw_only_args.<locals>.add at 0x7fb4af30ad40>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_decorator_introspection.<locals>.decor at 0x7fb4af309990>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))"], 
    "funcy.decorators.has_single_arg" : ["inspect.signature", "builtins.len", "mappingproxy.values", "builtins.iter", "builtins.next"], 
    "funcy.decorators.has_1pos_and_kwonly" : ["inspect.signature", "mappingproxy.values"], 
    "funcy.decorators.wraps" : ["functools.partial"], 
    "funcy.decorators.update_wrapper" : ["builtins.getattr", "builtins.setattr", "dict.update", "inspect.unwrap"], 
    "funcy.flow" : ["funcy.flow.post_processing", "funcy.flow.once_per"], 
    "funcy.decorators.decorator_fab" : ["funcy.decorators.make_decorator", "tests.test_decorators.test_decorator_kw_only_args.<locals>.add"], 
    "funcy.debug" : ["funcy.debug.log_errors", "funcy.debug.log_durations"], 
    "funcy.debug.log_errors.__init__" : ["funcy.debug.LabeledContextDecorator.__init__"], 
    "funcy.debug.log_durations.__init__" : ["funcy.debug.LabeledContextDecorator.__init__"], 
    "funcy.seqs.lcat" : ["chain.from_iterable", "builtins.list"], 
    "funcy.py2" : ["dict.get", "dict.items", "builtins.getattr", "builtins.setattr"], 
    "tests.test_interface" : ["pkgutil.iter_modules", "builtins.getattr"], 
    "funcy.calc.memoize" : ["builtins.len", "funcy.calc.memoize", "dict.pop", "funcy.calc._memory_decorator", "funcy.calc._memory_decorator.<locals>.decorator"], 
    "tests.test_calc.test_memoize" : ["tests.test_calc.test_memoize.<locals>.inc"], 
    "funcy.calc.wrapper" : ["tests.test_calc.test_memoize.<locals>.inc", "dict.items", "builtins.sorted", "builtins.tuple", "tests.test_calc.test_memoize_args_kwargs.<locals>.mul", "tests.test_calc.test_memoize_memory.<locals>.inc", "builtins.len", "tests.test_calc.test_memoize_key_func.<locals>.inc", "builtins.object", "tests.test_calc.test_make_lookuper.<locals>.letter_index", "dict.update", "builtins.LookupError", "funcy.calc._make_lookuper.<locals>.make_lookuper.<locals>.wrapper", "builtins.map", "str.join", "funcy.calc._make_lookuper.<locals>.make_lookuper", "funcy.calc._make_lookuper.<locals>.make_lookuper.<locals>.wrapper.<locals>.<lambda>", "tests.test_calc.test_make_lookuper_nested.<locals>.function_table", "tests.test_calc.test_silent_lookuper.<locals>.letter_index", "dict.get", "tests.test_calc.test_silnent_lookuper_nested.<locals>.function_table", "tests.test_calc.test_cache.<locals>.inc", "tests.test_calc.test_cache_mixed_args.<locals>.add", "tests.test_calc.test_cache_timedout.<locals>.inc", "tests.test_calc.test_cache_invalidate.<locals>.inc"], 
    "tests.test_calc.inc" : ["list.append"], 
    "tests.test_calc.test_memoize_args_kwargs" : ["tests.test_calc.test_memoize_args_kwargs.<locals>.mul"], 
    "tests.test_calc.mul" : ["list.append"], 
    "tests.test_calc.test_memoize_memory" : ["tests.test_calc.test_memoize_memory.<locals>.inc", "dict.clear"], 
    "tests.test_calc.test_memoize_key_func" : ["tests.test_calc.test_memoize_key_func.<locals>.inc"], 
    "funcy.calc.make_lookuper" : ["funcy.calc.has_arg_types", "funcy.decorators.wraps", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_make_lookuper.<locals>.letter_index at 0x7fb4af4bfac0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_make_lookuper_nested.<locals>.function_table at 0x7fb4af30ac20>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function _make_lookuper.<locals>.make_lookuper.<locals>.wrapper.<locals>.<lambda> at 0x7fb4af347010>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function _make_lookuper.<locals>.make_lookuper.<locals>.wrapper.<locals>.<lambda> at 0x7fb4af3479a0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_silent_lookuper.<locals>.letter_index at 0x7fb4af30ac20>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_silnent_lookuper_nested.<locals>.function_table at 0x7fb4af346950>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function _make_lookuper.<locals>.make_lookuper.<locals>.wrapper.<locals>.<lambda> at 0x7fb4af37a9e0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))"], 
    "funcy.calc.has_arg_types" : ["inspect.signature", "mappingproxy.values"], 
    "tests.test_calc.test_make_lookuper" : ["tests.test_calc.test_make_lookuper.<locals>.letter_index", "_pytest.python_api.raises"], 
    "tests.test_calc.letter_index" : ["builtins.enumerate"], 
    "tests.test_calc.test_make_lookuper_nested" : ["tests.test_calc.test_make_lookuper_nested.<locals>.function_table", "funcy.calc._make_lookuper.<locals>.make_lookuper.<locals>.wrapper.<locals>.<lambda>", "math.sin", "math.cos", "_pytest.python_api.raises"], 
    "tests.test_calc.function_table" : ["builtins.range", "math.sin", "math.cos"], 
    "tests.test_calc.test_silent_lookuper" : ["tests.test_calc.test_silent_lookuper.<locals>.letter_index"], 
    "tests.test_calc.test_silnent_lookuper_nested" : ["tests.test_calc.test_silnent_lookuper_nested.<locals>.function_table", "funcy.calc._make_lookuper.<locals>.make_lookuper.<locals>.wrapper.<locals>.<lambda>", "math.sin"], 
    "funcy.calc.cache" : ["builtins.isinstance", "funcy.calc.CacheMemory", "funcy.calc._memory_decorator", "timedelta.total_seconds"], 
    "funcy.calc.CacheMemory.__init__" : ["funcy.calc.CacheMemory.clear"], 
    "funcy.calc.CacheMemory.clear" : ["dict.clear", "collections.deque"], 
    "tests.test_calc.test_cache" : ["tests.test_calc.test_cache.<locals>.inc"], 
    "funcy.calc.CacheMemory.__getitem__" : ["dict.__getitem__", "time.time", "funcy.calc.CacheMemory.expire", "builtins.KeyError"], 
    "funcy.calc.CacheMemory.__setitem__" : ["time.time", "dict.__setitem__", "deque.append"], 
    "tests.test_calc.test_cache_mixed_args" : ["tests.test_calc.test_cache_mixed_args.<locals>.add"], 
    "tests.test_calc.test_cache_timedout" : ["tests.test_calc.test_cache_timedout.<locals>.inc", "builtins.len"], 
    "funcy.calc.CacheMemory.expire" : ["time.time", "_bisect.bisect_right", "builtins.range", "deque.popleft", "CacheMemory.pop"], 
    "tests.test_calc.test_cache_invalidate" : ["tests.test_calc.test_cache_invalidate.<locals>.inc", "funcy.calc._memory_decorator.<locals>.decorator.<locals>.invalidate_all", "funcy.calc._memory_decorator.<locals>.decorator.<locals>.invalidate"], 
    "funcy.calc.invalidate_all" : ["funcy.calc.CacheMemory.clear"], 
    "funcy.calc.invalidate" : ["CacheMemory.pop"], 
    "tests.test_colls.test_empty" : ["funcy.colls.empty", "tests.test_colls.eq", "collections.defaultdict"], 
    "funcy.colls.empty" : ["builtins.isinstance", "funcy.colls._factory", "builtins.dict", "functools.partial('collections.defaultdict'>, 'int'>)", "builtins.iter", "builtins.list"], 
    "funcy.colls._factory" : ["builtins.type", "builtins.isinstance", "functools.partial", "builtins.str", "funcy.funcs.compose"], 
    "tests.test_colls.eq" : ["builtins.type", "builtins.isinstance"], 
    "tests.test_colls.test_empty_iter" : ["builtins.iter", "funcy.colls.empty", "builtins.isinstance", "builtins.list"], 
    "tests.test_colls.test_empty_quirks" : ["funcy.colls.empty", "dict.keys", "dict.values", "dict.items"], 
    "tests.test_colls.test_iteritems" : ["funcy.colls.iteritems", "builtins.list"], 
    "funcy.colls.iteritems" : ["builtins.hasattr", "dict.items", "defaultdict.items"], 
    "tests.test_colls.test_itervalues" : ["funcy.colls.itervalues", "builtins.list"], 
    "funcy.colls.itervalues" : ["builtins.hasattr", "dict.values"], 
    "tests.test_colls.test_merge" : ["funcy.colls.merge", "tests.test_colls.eq"], 
    "funcy.colls.merge" : ["funcy.colls.join"], 
    "funcy.colls.join" : ["itertools.tee", "builtins.iter", "builtins.next", "builtins.isinstance", "dict.copy", "dict.update", "builtins.TypeError", "str.join", "chain.from_iterable", "builtins.list", "builtins.tuple", "set.union", "defaultdict.copy", "defaultdict.update"], 
    "tests.test_colls.test_join" : ["funcy.colls.join", "_pytest.python_api.raises", "tests.test_colls.eq", "builtins.list", "builtins.tuple", "builtins.range", "builtins.isinstance", "collections.defaultdict"], 
    "tests.test_colls.test_join_iter" : ["builtins.iter", "funcy.colls.join", "tests.test_colls.eq", "builtins.range", "builtins.isinstance", "builtins.list"], 
    "tests.test_colls.test_merge_with" : ["funcy.colls.merge_with", "dict.items"], 
    "funcy.colls.merge_with" : ["funcy.colls.join_with"], 
    "funcy.colls.join_with" : ["builtins.list", "builtins.len", "funcy.colls.iteritems", "list.append", "builtins.sum"], 
    "tests.test_colls.test_join_with" : ["builtins.range", "funcy.colls.join_with"], 
    "tests.test_colls.test_walk" : ["funcy.colls.walk", "tests.test_colls.eq"], 
    "funcy.colls.walk" : ["funcy.colls._factory", "funcy.colls.iteritems", "funcy.seqs.map", "builtins.list", "builtins.tuple", "builtins.set", "builtins.dict", "builtins.iter", "str.join"], 
    "funcy.seqs.map" : ["funcy.funcmakers.make_func", "builtins.map"], 
    "funcy.funcmakers.make_func" : ["builtins.callable", "builtins.isinstance", "funcy.strings.re_finder", "funcy.strings.re_tester", "operator.itemgetter"], 
    "tests.test_colls.hinc" : ["builtins.map"], 
    "tests.test_colls.test_walk_iter" : ["itertools.chain", "funcy.colls.walk", "builtins.isinstance", "builtins.list"], 
    "tests.test_colls.test_walk_extended" : ["funcy.colls.walk"], 
    "funcy.strings.re_finder" : ["funcy.strings._prepare", "Pattern.search", "funcy.strings.re_finder.<locals>.<lambda>", "operator.methodcaller('group')", "operator.methodcaller('group', 1)", "operator.methodcaller('groups')", "operator.methodcaller('groupdict')"], 
    "funcy.strings._prepare" : ["builtins.isinstance", "re.compile", "funcy.strings._make_getter"], 
    "funcy.strings._make_getter" : ["operator.methodcaller", "builtins.len"], 
    "tests.test_colls.test_walk_keys" : ["funcy.colls.walk_keys"], 
    "funcy.colls.walk_keys" : ["funcy.funcmakers.make_func", "funcy.colls.walk"], 
    "funcy.colls.pair_f" : ["str.upper", "funcy.strings.re_finder.<locals>.<lambda>", "builtins.len"], 
    "tests.test_colls.test_walk_values" : ["funcy.colls.walk_values"], 
    "funcy.colls.walk_values" : ["funcy.funcmakers.make_func", "funcy.colls._factory", "funcy.colls.iteritems", "funcy.seqs.map", "builtins.dict", "functools.partial('collections.defaultdict'>, <function compose.<locals>.<lambda>.<locals>.<lambda> at 0x7fb4af30af80>)"], 
    "tests.test_colls.test_walk_values_defaultdict" : ["collections.defaultdict", "funcy.colls.walk_values"], 
    "funcy.funcs.compose" : ["builtins.map", "_functools.reduce", "tests.test_colls.test_walk_values_defaultdict.<locals>.<lambda>", "builtins.len", "funcy.funcs.juxt.<locals>.<lambda>", "builtins.all", "builtins.any", "funcy.colls.none", "funcy.colls.one", "funcy.colls.some", "funcy.funcs.compose.<locals>.<lambda>.<locals>.<lambda>", "builtins.str", "funcy.strings.re_finder.<locals>.<lambda>", "builtins.int", "funcy.funcs.identity", "_operator.not_"], 
    "tests.test_colls.test_select" : ["funcy.colls.select", "tests.test_colls.eq", "collections.defaultdict"], 
    "funcy.colls.select" : ["funcy.colls._factory", "funcy.colls.iteritems", "funcy.seqs.filter", "builtins.list", "builtins.tuple", "builtins.set", "builtins.dict", "functools.partial('collections.defaultdict'>, 'int'>)", "str.join"], 
    "funcy.seqs.filter" : ["funcy.funcmakers.make_pred", "builtins.filter"], 
    "funcy.funcmakers.make_pred" : ["funcy.funcmakers.make_func"], 
    "tests.test_colls.test_select_extended" : ["funcy.colls.select"], 
    "funcy.strings.re_tester" : ["builtins.isinstance", "re.compile", "Pattern.search", "builtins.bool"], 
    "tests.test_colls.test_select_keys" : ["funcy.colls.select_keys"], 
    "funcy.colls.select_keys" : ["funcy.funcmakers.make_pred", "funcy.colls.select", "funcy.strings.re_tester.<locals>.<lambda>"], 
    "tests.test_colls.test_select_values" : ["funcy.colls.select_values"], 
    "funcy.colls.select_values" : ["funcy.funcmakers.make_pred", "funcy.colls.select", "funcy.strings.re_tester.<locals>.<lambda>", "builtins.bool"], 
    "tests.test_colls.test_compact" : ["funcy.colls.compact", "tests.test_colls.eq"], 
    "funcy.colls.compact" : ["builtins.isinstance", "funcy.colls.select", "funcy.colls.select_values"], 
    "tests.test_colls.test_is_distinct" : ["funcy.colls.is_distinct"], 
    "funcy.colls.is_distinct" : ["builtins.len", "builtins.set", "funcy.seqs.map"], 
    "tests.test_colls.test_all" : ["funcy.colls.all"], 
    "funcy.colls.all" : ["builtins.all", "funcy.seqs.map"], 
    "tests.test_colls.test_all_extended" : ["funcy.colls.all"], 
    "tests.test_colls.test_any" : ["funcy.colls.any"], 
    "funcy.colls.any" : ["builtins.any", "funcy.seqs.map"], 
    "tests.test_colls.test_one" : ["funcy.colls.one"], 
    "funcy.colls.one" : ["funcy.colls.one", "funcy.seqs.filter", "funcy.seqs.take", "builtins.len"], 
    "funcy.seqs.take" : ["itertools.islice", "builtins.list"], 
    "tests.test_colls.test_none" : ["funcy.colls.none"], 
    "funcy.colls.none" : ["funcy.colls.any"], 
    "tests.test_colls.test_some" : ["funcy.colls.some", "builtins.range"], 
    "funcy.colls.some" : ["funcy.colls.some", "funcy.seqs.filter", "builtins.next"], 
    "tests.test_colls.test_zipdict" : ["funcy.colls.zipdict", "itertools.count"], 
    "funcy.colls.zipdict" : ["builtins.zip", "builtins.dict"], 
    "tests.test_colls.test_flip" : ["funcy.colls.flip"], 
    "funcy.colls.flip" : ["funcy.colls.walk"], 
    "tests.test_colls.test_project" : ["funcy.colls.project", "collections.defaultdict", "tests.test_colls.eq"], 
    "funcy.colls.project" : ["funcy.colls._factory"], 
    "tests.test_colls.test_omit" : ["funcy.colls.omit", "collections.defaultdict", "tests.test_colls.eq"], 
    "funcy.colls.omit" : ["funcy.colls._factory", "funcy.colls.iteritems"], 
    "tests.test_colls.test_zip_values" : ["funcy.colls.zip_values", "builtins.list", "_pytest.python_api.raises"], 
    "funcy.colls.zip_values" : ["builtins.len", "builtins.map", "set.intersection", "builtins.TypeError"], 
    "tests.test_colls.test_zip_dicts" : ["funcy.colls.zip_dicts", "builtins.list", "_pytest.python_api.raises"], 
    "funcy.colls.zip_dicts" : ["builtins.len", "builtins.map", "set.intersection", "builtins.TypeError"], 
    "tests.test_colls.test_get_in" : ["funcy.colls.get_in"], 
    "tests.test_colls.test_get_in_list" : ["funcy.colls.get_in"], 
    "tests.test_colls.test_set_in" : ["funcy.colls.set_in"], 
    "funcy.colls.set_in" : ["funcy.colls.update_in"], 
    "funcy.colls.update_in" : ["builtins.isinstance", "dict.copy", "builtins.len", "dict.get", "funcy.colls.update_in", "funcy.colls.set_in.<locals>.<lambda>", "tests.test_colls.inc"], 
    "tests.test_colls.test_set_in_list" : ["funcy.colls.set_in"], 
    "tests.test_colls.test_update_in" : ["funcy.colls.update_in"], 
    "tests.test_colls.test_del_in" : ["funcy.colls.del_in", "_pytest.python_api.raises"], 
    "funcy.colls.del_in" : ["copy.copy", "builtins.len", "funcy.colls.del_in"], 
    "tests.test_colls.test_has_path" : ["funcy.colls.has_path"], 
    "tests.test_colls.test_has_path_list" : ["funcy.colls.has_path"], 
    "tests.test_colls.test_where" : ["funcy.colls.where", "builtins.isinstance", "builtins.list"], 
    "funcy.colls.where" : ["dict.items", "builtins.filter"], 
    "tests.test_colls.test_lwhere" : ["funcy.colls.lwhere"], 
    "funcy.colls.lwhere" : ["funcy.colls.where", "builtins.list"], 
    "tests.test_colls.test_pluck" : ["funcy.colls.lpluck"], 
    "funcy.colls.lpluck" : ["funcy.colls.pluck", "builtins.list"], 
    "funcy.colls.pluck" : ["operator.itemgetter", "builtins.map"], 
    "tests.test_colls.test_pluck_attr" : ["collections.namedtuple", "dynapyt.runtime.TestObj", "funcy.colls.lpluck_attr"], 
    "funcy.colls.lpluck_attr" : ["funcy.colls.pluck_attr", "builtins.list"], 
    "funcy.colls.pluck_attr" : ["operator.attrgetter", "builtins.map"], 
    "tests.test_colls.test_invoke" : ["funcy.colls.linvoke"], 
    "funcy.colls.linvoke" : ["funcy.colls.invoke", "builtins.list"], 
    "funcy.colls.invoke" : ["operator.methodcaller", "builtins.map"], 
    "tests.test_debug.test_tap" : ["tests.test_debug.capture"], 
    "tests.test_debug.capture" : ["_io.StringIO", "funcy.debug.tap", "StringIO.seek", "StringIO.read", "tests.test_debug.test_print_calls.<locals>.f", "tests.test_debug.test_print_errors.<locals>.error", "tests.test_debug.test_print_errors_manager.<locals>.f", "tests.test_debug.test_print_errors_recursion.<locals>.f"], 
    "funcy.debug.tap" : ["builtins.print"], 
    "funcy.decorators._decorator" : ["funcy.decorators.wraps", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_log_calls.<locals>.f at 0x7fb4af3445e0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_print_calls.<locals>.f at 0x7fb4af37b490>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_log_calls_raise.<locals>.f at 0x7fb4af28db40>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_decorator_no_args.<locals>.ten at 0x7fb4af4bfac0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_decorator_with_args.<locals>.ten at 0x7fb4af345750>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_decorator_kw_only_args.<locals>.ten at 0x7fb4af347520>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_decorator_access_arg.<locals>.square at 0x7fb4af30ab00>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_decorator_access_nonexistent_arg.<locals>.f at 0x7fb4af3475b0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_decorator_required_arg.<locals>.f at 0x7fb4af28f7f0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_double_decorator_defaults.<locals>.f at 0x7fb4af345090>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_double_decorator_defaults.<locals>.f at 0x7fb4af346f80>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_decorator_defaults.<locals>.f at 0x7fb4af347a30>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<bound method test_decorator_with_method.<locals>.A.ten of <tests.test_decorators.test_decorator_with_method.<locals>.A object at 0x7fb4af641930>>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<bound method test_decorator_with_method.<locals>.A.ten_cls of 'tests.test_decorators.test_decorator_with_method.<locals>.A'>>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_decorator_with_method.<locals>.A.ten_static at 0x7fb4af28f400>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<method 'upper' of 'str' objects>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_chain_arg_access.<locals>.func at 0x7fb4af347d90>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_chain_arg_access.<locals>.func at 0x7fb4af3467a0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_meta_attribtes.<locals>.func at 0x7fb4af28e320>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_meta_attribtes.<locals>.func at 0x7fb4af600af0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function _make_failing.<locals>.failing at 0x7fb4af28d900>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function _make_failing.<locals>.failing at 0x7fb4af28ec20>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_retry_timeout.<locals>.failing at 0x7fb4af347be0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function _make_failing.<locals>.failing at 0x7fb4af30ac20>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function _make_failing.<locals>.failing at 0x7fb4af3470a0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function _make_failing.<locals>.failing at 0x7fb4af30b0a0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function _make_failing.<locals>.failing at 0x7fb4af37a7a0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_post_processing.<locals>.my_max at 0x7fb4af30b1c0>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_collecting.<locals>.doubles at 0x7fb4af37af80>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))", "functools.partial(<function update_wrapper at 0x7fb4b0157250>, wrapped=<function test_wrap_with.<locals>.calc at 0x7fb4af28d870>, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))"], 
    "tests.test_debug.test_log_calls" : ["tests.test_debug.test_log_calls.<locals>.f"], 
    "funcy.decorators.wrapper" : ["funcy.decorators.Call", "funcy.debug.log_calls", "tests.test_decorators.test_decorator_no_args.<locals>.inc", "tests.test_decorators.test_decorator_with_args.<locals>.add", "tests.test_decorators.test_decorator_kw_only_args.<locals>.add", "tests.test_decorators.test_decorator_access_arg.<locals>.multiply", "tests.test_decorators.test_decorator_access_nonexistent_arg.<locals>.return_x", "tests.test_decorators.test_decorator_required_arg.<locals>.deco", "tests.test_decorators.test_double_decorator_defaults.<locals>.deco", "tests.test_decorators.test_decorator_defaults.<locals>.deco", "tests.test_decorators.test_decorator_with_method.<locals>.inc", "tests.test_decorators.test_decorator_with_method_descriptor.<locals>.exclaim", "tests.test_decorators.test_chain_arg_access.<locals>.decor", "funcy.flow.retry", "funcy.flow.post_processing", "funcy.flow.wrap_with"], 
    "funcy.debug.log_calls" : ["funcy.debug.signature_repr", "list.append", "test_log_calls.<locals>.f(1, 2)", "funcy.debug.smart_repr", "test_log_calls.<locals>.f(a, b)", "builtins.print", "test_print_calls.<locals>.f(1, 2)", "test_log_calls_raise.<locals>.f()", "funcy.debug._format_error"], 
    "funcy.debug.signature_repr" : ["builtins.isinstance", "builtins.getattr", "dict.items", "itertools.chain", "str.join", "funcy.debug.smart_repr"], 
    "funcy.debug.smart_repr" : ["builtins.isinstance", "builtins.str", "re.sub", "builtins.len", "builtins.repr"], 
    "funcy.decorators.Call.__getattr__" : ["funcy.decorators.arggetter", "funcy.decorators.arggetter.<locals>.get_arg", "builtins.AttributeError"], 
    "funcy.decorators.arggetter" : ["builtins.getattr", "inspect.unwrap", "funcy.decorators.get_argnames", "builtins.enumerate", "builtins.len", "builtins.zip", "builtins.dict"], 
    "funcy.decorators.get_argnames" : ["builtins.getattr", "inspect.unwrap"], 
    "funcy.decorators.get_arg" : ["builtins.TypeError", "builtins.len"], 
    "funcy.decorators.Call.__str__" : ["builtins.str", "builtins.getattr", "builtins.map", "builtins.list", "dict.items", "str.join"], 
    "funcy.decorators.Call.__call__" : ["tests.test_debug.test_log_calls.<locals>.f", "tests.test_debug.test_print_calls.<locals>.f", "tests.test_debug.test_log_calls_raise.<locals>.f", "tests.test_decorators.test_decorator_no_args.<locals>.ten", "tests.test_decorators.test_decorator_with_args.<locals>.ten", "tests.test_decorators.test_decorator_kw_only_args.<locals>.ten", "tests.test_decorators.test_decorator_access_arg.<locals>.square", "tests.test_decorators.test_decorator_with_method.<locals>.A.ten", "tests.test_decorators.test_decorator_with_method.<locals>.A.ten_cls", "tests.test_decorators.test_decorator_with_method.<locals>.A.ten_static", "str.upper", "tests.test_decorators.test_chain_arg_access.<locals>.func", "tests.test_flow._make_failing.<locals>.failing", "tests.test_flow.test_retry_timeout.<locals>.failing", "tests.test_flow.test_post_processing.<locals>.my_max", "tests.test_flow.test_collecting.<locals>.doubles", "tests.test_flow.test_wrap_with.<locals>.calc"], 
    "tests.test_debug.test_print_calls" : ["funcy.debug.print_calls", "tests.test_debug.capture", "funcy.debug.log_calls"], 
    "funcy.debug.print_calls" : ["builtins.callable", "funcy.debug.log_calls"], 
    "tests.test_debug.test_log_calls_raise" : ["funcy.flow.silent", "tests.test_debug.test_log_calls_raise.<locals>.f"], 
    "funcy.flow.silent" : ["funcy.flow.ignore", "funcy.flow.ignore.<locals>.decorator"], 
    "funcy.flow.ignore" : ["funcy.flow._ensure_exceptable"], 
    "funcy.flow._ensure_exceptable" : ["funcy.flow._is_exception_type", "builtins.tuple"], 
    "funcy.flow._is_exception_type" : ["builtins.isinstance", "builtins.issubclass"], 
    "funcy.flow.wrapper" : ["tests.test_debug.test_log_calls_raise.<locals>.f", "tests.test_debug.test_log_errors.<locals>.f", "tests.test_debug.test_print_errors.<locals>.error", "tests.test_debug.test_print_errors_manager.<locals>.f", "tests.test_debug.test_print_errors_recursion.<locals>.f", "builtins.int", "str.upper", "funcy.flow.raiser.<locals>._raiser", "tests.test_flow.test_limit_error_rate.<locals>.limited", "datetime.now", "tests.test_flow.test_throttle.<locals>.<lambda>", "tests.test_flow.test_throttle.<locals>.throttled", "time.time", "tests.test_flow.test_throttle_class.<locals>.A.foo", "builtins.isinstance", "set.add", "tests.test_flow.test_once.<locals>.call", "funcy.decorators.arggetter.<locals>.get_arg", "tests.test_flow.test_once_per.<locals>.call", "tests.test_flow.test_once_per_args.<locals>.call"], 
    "tests.test_debug.f" : ["builtins.Exception", "tests.test_debug.test_print_errors_recursion.<locals>.f"], 
    "funcy.debug._format_error" : ["builtins.isinstance"], 
    "funcy.debug.LabeledContextDecorator.__call__" : ["builtins.callable", "funcy.debug.LabeledContextDecorator.decorator", "funcy.debug.log_errors"], 
    "tests.test_debug.test_log_errors" : ["funcy.flow.silent", "tests.test_debug.test_log_errors.<locals>.f", "builtins.len", "str.startswith", "re.search"], 
    "funcy.debug.LabeledContextDecorator.inner" : ["object.__new__", "dict.update", "funcy.decorators.Call", "funcy.debug.signature_repr", "tests.test_debug.test_log_errors.<locals>.f", "tests.test_debug.test_print_errors.<locals>.error", "tests.test_debug.test_print_errors_recursion.<locals>.f", "tests.test_debug.test_log_durations.<locals>.<lambda>", "tests.test_debug.test_log_durations_ex.<locals>.<lambda>"], 
    "funcy.debug.log_errors.__exit__" : ["traceback.format_exception", "str.join", "funcy.debug._format_error", "list.append", "builtins.print"], 
    "tests.test_debug.test_log_errors_manager" : ["funcy.debug.log_errors", "builtins.len", "builtins.print", "str.startswith", "re.search"], 
    "tests.test_debug.test_print_errors" : ["<funcy.debug.log_errors object at 0x7fb4af7b1930>", "funcy.flow.silent", "tests.test_debug.capture", "<funcy.debug.log_errors object at 0x7fb4af489b70>", "str.startswith"], 
    "tests.test_debug.test_print_errors_manager" : ["tests.test_debug.capture", "str.startswith"], 
    "tests.test_debug.test_print_errors_recursion" : ["tests.test_debug.capture"], 
    "tests.test_debug.test_log_durations" : ["builtins.iter", "_pytest.monkeypatch.MonkeyPatch.setattr", "funcy.debug.log_durations", "<funcy.debug.log_durations object at 0x7fb4af802620>", "tests.test_debug.test_log_durations.<locals>.<lambda>", "builtins.next", "funcy.seqs.lmap"], 
    "funcy.debug.log_durations.__enter__" : ["tests.test_debug.test_log_durations.<locals>.<lambda>", "tests.test_debug.test_log_durations_ex.<locals>.<lambda>"], 
    "funcy.debug.log_durations.__exit__" : ["tests.test_debug.test_log_durations.<locals>.<lambda>", "funcy.debug.format_time", "list.append", "tests.test_debug.test_log_durations_ex.<locals>.<lambda>", "funcy.debug.<lambda>"], 
    "funcy.seqs.lmap" : ["funcy.funcmakers.make_func", "funcy.compat.lmap"], 
    "funcy.compat.lmap" : ["builtins.map", "builtins.list"], 
    "tests.test_debug.test_log_durations_ex" : ["builtins.iter", "_pytest.monkeypatch.MonkeyPatch.setattr", "funcy.debug.log_durations", "<funcy.debug.log_durations object at 0x7fb4af48b640>", "tests.test_debug.test_log_durations_ex.<locals>.<lambda>", "builtins.next", "builtins.len", "funcy.seqs.lmap"], 
    "tests.test_debug.test_log_iter_dirations" : ["funcy.debug.log_iter_durations", "builtins.len"], 
    "funcy.debug.log_iter_durations" : ["builtins.iter", "builtins.enumerate", "time.perf_counter", "funcy.debug.format_time", "list.append"], 
    "tests.test_decorators.test_decorator_no_args" : ["tests.test_decorators.test_decorator_no_args.<locals>.ten"], 
    "tests.test_decorators.inc" : ["test_decorator_no_args.<locals>.ten()", "test_decorator_with_method.<locals>.A.ten()", "test_decorator_with_method.<locals>.A.ten_cls()", "test_decorator_with_method.<locals>.A.ten_static()"], 
    "tests.test_decorators.test_decorator_with_args" : ["tests.test_decorators.test_decorator_with_args.<locals>.ten"], 
    "tests.test_decorators.add" : ["test_decorator_with_args.<locals>.ten()", "test_decorator_kw_only_args.<locals>.ten(1, 2)", "dict.get"], 
    "tests.test_decorators.test_decorator_kw_only_args" : ["tests.test_decorators.test_decorator_kw_only_args.<locals>.add", "tests.test_decorators.test_decorator_kw_only_args.<locals>.ten"], 
    "tests.test_decorators.test_decorator_access_arg" : ["tests.test_decorators.test_decorator_access_arg.<locals>.square"], 
    "tests.test_decorators.multiply" : ["test_decorator_access_arg.<locals>.square(5)"], 
    "tests.test_decorators.test_decorator_access_nonexistent_arg" : ["_pytest.python_api.raises", "tests.test_decorators.test_decorator_access_nonexistent_arg.<locals>.f"], 
    "tests.test_decorators.test_decorator_required_arg" : ["_pytest.python_api.raises", "tests.test_decorators.test_decorator_required_arg.<locals>.f"], 
    "tests.test_decorators.test_double_decorator_defaults" : ["tests.test_decorators.test_double_decorator_defaults.<locals>.f"], 
    "tests.test_decorators.test_decorator_defaults" : ["tests.test_decorators.test_decorator_defaults.<locals>.f"], 
    "tests.test_decorators.test_decorator_with_method" : ["tests.test_decorators.test_decorator_with_method.<locals>.A", "tests.test_decorators.test_decorator_with_method.<locals>.inc", "tests.test_decorators.test_decorator_with_method.<locals>.A.ten", "tests.test_decorators.test_decorator_with_method.<locals>.A.ten_cls", "tests.test_decorators.test_decorator_with_method.<locals>.A.ten_static"], 
    "tests.test_decorators.test_decorator_with_method_descriptor" : ["tests.test_decorators.test_decorator_with_method_descriptor.<locals>.exclaim", "funcy.decorators.str.upper"], 
    "tests.test_decorators.exclaim" : ["str.upper(hi)"], 
    "tests.test_decorators.test_chain_arg_access" : ["tests.test_decorators.test_chain_arg_access.<locals>.func"], 
    "tests.test_decorators.decor" : ["test_chain_arg_access.<locals>.func(2)"], 
    "tests.test_decorators.test_meta_attribtes" : ["tests.test_decorators.test_meta_attribtes.<locals>.decor"], 
    "tests.test_decorators.test_decorator_introspection" : ["tests.test_decorators.test_decorator_introspection.<locals>.decor"], 
    "tests.test_flow.test_silent" : ["funcy.flow.silent", "builtins.int", "funcy.flow.str.upper"], 
    "tests.test_flow.test_ignore" : ["funcy.flow.ignore", "funcy.flow.raiser", "funcy.flow.ignore.<locals>.decorator", "funcy.flow.raiser.<locals>._raiser", "_pytest.python_api.raises"], 
    "funcy.flow.raiser" : ["builtins.isinstance", "builtins.Exception"], 
    "tests.test_flow.test_raiser" : ["_pytest.python_api.raises", "funcy.flow.raiser", "funcy.flow.raiser.<locals>._raiser", "tests.test_flow.MyError"], 
    "funcy.flow._raiser" : ["tests.test_flow.MyError"], 
    "tests.test_flow.test_suppress" : ["contextlib.suppress", "_pytest.python_api.raises"], 
    "tests.test_flow.test_reraise" : ["_pytest.python_api.raises", "tests.test_flow.test_reraise.<locals>.erry", "funcy.flow.reraise", "builtins.ValueError", "builtins.str", "tests.test_flow.MyError"], 
    "funcy.flow.reraise" : ["funcy.flow._ensure_exceptable", "builtins.callable", "funcy.flow._is_exception_type", "funcy.compat.raise_from", "tests.test_flow.test_reraise.<locals>.<lambda>"], 
    "tests.test_flow.test_retry" : ["_pytest.python_api.raises", "tests.test_flow._make_failing", "tests.test_flow._make_failing.<locals>.failing", "funcy.flow.retry"], 
    "tests.test_flow.failing" : ["builtins.len", "list.append"], 
    "funcy.flow.retry" : ["funcy.flow._ensure_exceptable", "builtins.range", "_make_failing.<locals>.failing()", "builtins.callable", "test_retry_timeout.<locals>.failing()", "list.append", "tests.test_flow.test_retry_timeout.<locals>.<lambda>", "tests.test_flow.test_retry_filter.<locals>.<lambda>"], 
    "tests.test_flow.test_retry_timeout" : ["_pytest.monkeypatch.MonkeyPatch.setattr", "_pytest.python_api.raises", "funcy.flow.retry", "tests.test_flow.test_retry_timeout.<locals>.failing"], 
    "tests.test_flow.test_retry_many_errors" : ["funcy.flow.retry", "tests.test_flow._make_failing", "tests.test_flow._make_failing.<locals>.failing"], 
    "tests.test_flow.test_retry_filter" : ["funcy.flow.retry", "tests.test_flow.MyError", "tests.test_flow._make_failing", "tests.test_flow._make_failing.<locals>.failing", "builtins.str", "_pytest.python_api.raises"], 
    "tests.test_flow.test_fallback" : ["funcy.flow.raiser", "funcy.flow.fallback", "_pytest.python_api.raises"], 
    "funcy.flow.fallback" : ["builtins.callable", "funcy.flow._ensure_exceptable", "funcy.flow.raiser.<locals>._raiser", "tests.test_flow.test_fallback.<locals>.<lambda>"], 
    "funcy.flow.limit_error_rate" : ["builtins.isinstance", "datetime.timedelta"], 
    "tests.test_flow.test_limit_error_rate" : ["_pytest.python_api.raises", "tests.test_flow.test_limit_error_rate.<locals>.limited"], 
    "tests.test_flow.limited" : ["list.append"], 
    "tests.test_flow.test_throttle" : ["builtins.iter", "_pytest.monkeypatch.MonkeyPatch.setattr", "tests.test_flow.test_throttle.<locals>.throttled", "builtins.next"], 
    "funcy.flow.throttle" : ["builtins.isinstance", "timedelta.total_seconds"], 
    "tests.test_flow.throttled" : ["list.append"], 
    "tests.test_flow.test_throttle_class" : ["tests.test_flow.test_throttle_class.<locals>.A", "funcy.flow.throttle", "funcy.flow.throttle.<locals>.decorator", "tests.test_flow.test_throttle_class.<locals>.A.foo"], 
    "tests.test_flow.test_post_processing" : ["tests.test_flow.test_post_processing.<locals>.my_max"], 
    "funcy.flow.post_processing" : ["test_post_processing.<locals>.my_max([1, 3, 2])", "builtins.max", "test_collecting.<locals>.doubles([1, 2])", "builtins.list"], 
    "tests.test_flow.test_collecting" : ["tests.test_flow.test_collecting.<locals>.doubles"], 
    "funcy.flow.once" : ["_thread.allocate_lock", "builtins.set", "builtins.list", "funcy.decorators.arggetter"], 
    "tests.test_flow.test_once" : ["tests.test_flow.test_once.<locals>.call"], 
    "tests.test_flow.call" : ["list.append"], 
    "tests.test_flow.test_once_per" : ["tests.test_flow.test_once_per.<locals>.call"], 
    "funcy.flow.once_per_args" : ["funcy.decorators.get_argnames", "funcy.flow.once_per", "funcy.flow.once_per.<locals>.once"], 
    "tests.test_flow.test_once_per_args" : ["tests.test_flow.test_once_per_args.<locals>.call"], 
    "tests.test_flow.test_wrap_with" : ["tests.test_flow.test_wrap_with.<locals>.calc"], 
    "tests.test_flow.Manager.__enter__" : ["list.append"], 
    "funcy.flow.wrap_with" : ["test_wrap_with.<locals>.calc()"], 
    "tests.test_funcmakers.test_callable" : ["funcy.funcmakers.make_func", "tests.test_funcmakers.test_callable.<locals>.<lambda>"], 
    "tests.test_funcmakers.test_int" : ["funcy.funcmakers.make_func", "operator.itemgetter(0)", "operator.itemgetter(2)", "operator.itemgetter(1)", "_pytest.python_api.raises"], 
    "tests.test_funcmakers.test_slice" : ["builtins.slice", "funcy.funcmakers.make_func", "operator.itemgetter(slice(1, None, None))"], 
    "tests.test_funcmakers.test_str" : ["funcy.funcmakers.make_func", "funcy.strings.re_finder.<locals>.<lambda>", "funcy.funcmakers.make_pred", "funcy.strings.re_tester.<locals>.<lambda>"], 
    "tests.test_funcmakers.test_dict" : ["funcy.funcmakers.make_func", "dict.__getitem__", "_pytest.python_api.raises", "collections.defaultdict", "defaultdict.__getitem__"], 
    "tests.test_funcmakers.test_set" : ["builtins.set", "funcy.funcmakers.make_func", "set.__contains__"], 
    "tests.test_funcolls.test_all_fn" : ["funcy.funcolls.all_fn", "builtins.range", "funcy.compat.lfilter"], 
    "funcy.funcolls.all_fn" : ["funcy.funcs.juxt", "funcy.funcs.compose"], 
    "funcy.funcs.juxt" : ["builtins.map", "builtins.list", "funcy.funcmakers.make_func.<locals>.<lambda>", "set.__contains__"], 
    "funcy.compat.lfilter" : ["builtins.filter", "builtins.list"], 
    "tests.test_funcolls.test_any_fn" : ["funcy.funcolls.any_fn", "builtins.range", "funcy.compat.lfilter"], 
    "funcy.funcolls.any_fn" : ["funcy.funcs.juxt", "funcy.funcs.compose"], 
    "tests.test_funcolls.test_none_fn" : ["funcy.funcolls.none_fn", "builtins.range", "funcy.compat.lfilter"], 
    "funcy.funcolls.none_fn" : ["funcy.funcs.juxt", "funcy.funcs.compose"], 
    "tests.test_funcolls.test_one_fn" : ["funcy.funcolls.one_fn", "builtins.range", "funcy.compat.lfilter"], 
    "funcy.funcolls.one_fn" : ["funcy.funcs.juxt", "funcy.funcs.compose"], 
    "tests.test_funcolls.test_some_fn" : ["funcy.funcolls.some_fn", "funcy.funcs.compose.<locals>.<lambda>.<locals>.<lambda>"], 
    "funcy.funcolls.some_fn" : ["funcy.funcs.juxt", "funcy.funcs.compose"], 
    "tests.test_funcolls.test_extended_fns" : ["builtins.set", "funcy.funcolls.any_fn", "funcy.funcs.compose.<locals>.<lambda>.<locals>.<lambda>"], 
    "tests.test_funcs.test_caller" : ["funcy.funcs.caller", "funcy.funcs.caller.<locals>.<lambda>"], 
    "funcy.funcs.caller" : ["builtins.sum"], 
    "tests.test_funcs.test_constantly" : ["funcy.funcs.constantly", "funcy.funcs.constantly.<locals>.<lambda>"], 
    "tests.test_funcs.test_partial" : ["functools.partial", "functools.partial(<built-in function add>, 10)", "functools.partial(<built-in function add>, 'abra')", "functools.partial(<function test_partial.<locals>.<lambda> at 0x7fb4af345240>, a='abra')", "functools.partial(<function test_partial.<locals>.<lambda> at 0x7fb4af345240>, b='abra')"], 
    "tests.test_funcs.A.test_func_partial" : ["funcy.funcs.func_partial"], 
    "tests.test_funcs.test_func_partial" : ["tests.test_funcs.test_func_partial.<locals>.A", "funcy.funcs.func_partial.<locals>.<lambda>"], 
    "funcy.funcs.func_partial" : ["builtins.dict", "tests.test_funcs.test_func_partial.<locals>.A.<lambda>"], 
    "tests.test_funcs.test_rpartial" : ["funcy.funcs.rpartial", "funcy.funcs.rpartial.<locals>.<lambda>"], 
    "funcy.funcs.rpartial" : ["builtins.dict", "_operator.sub", "builtins.pow", "tests.test_funcs.test_rpartial.<locals>.<lambda>", "tests.test_funcs.test_rcurry.<locals>.<lambda>"], 
    "tests.test_funcs.test_curry" : ["funcy.funcs.curry", "tests.test_funcs.test_curry.<locals>.<lambda>", "funcy.funcs.curry.<locals>.<lambda>", "funcy.funcs.curry.<locals>.<lambda>.<locals>.<lambda>"], 
    "funcy.funcs.curry" : ["funcy._inspect.get_spec", "_operator.add", "functools.partial", "funcy.funcs.curry", "functools.partial(<function test_curry.<locals>.<lambda> at 0x7fb4af30a170>, 'a')", "funcy.seqs.lmap", "funcy.colls.merge_with"], 
    "funcy._inspect.get_spec" : ["builtins.getattr", "inspect.unwrap", "builtins.isinstance", "builtins.len", "builtins.set", "builtins.bool", "dynapyt.runtime.Spec", "dict.get", "str.partition", "re.findall", "builtins.hasattr", "funcy._inspect.get_spec", "collections.Spec._replace"], 
    "tests.test_funcs.test_curry_funcy" : ["funcy.funcs.curry", "funcy.funcs.curry.<locals>.<lambda>", "funcy.funcs.curry.<locals>.<lambda>.<locals>.<lambda>"], 
    "tests.test_funcs.test_rcurry" : ["funcy.funcs.rcurry", "funcy.funcs.rcurry.<locals>.<lambda>", "funcy.funcs.rcurry.<locals>.<lambda>.<locals>.<lambda>"], 
    "funcy.funcs.rcurry" : ["_operator.sub", "funcy._inspect.get_spec", "funcy.funcs.rpartial", "funcy.funcs.rcurry", "funcy.funcs.rpartial.<locals>.<lambda>", "str.endswith"], 
    "tests.test_funcs.test_autocurry" : ["funcy.funcs.autocurry", "tests.test_funcs.test_autocurry.<locals>.<lambda>", "_pytest.python_api.raises"], 
    "funcy.funcs.autocurry" : ["funcy._inspect.get_spec"], 
    "funcy.funcs.autocurried" : ["dict.copy", "dict.update", "builtins.len", "builtins.set", "funcy.funcs.autocurry", "tests.test_funcs.test_autocurry.<locals>.<lambda>", "tests.test_funcs.test_autocurry_named.<locals>.<lambda>", "tests.test_funcs.test_autocurry_kwargs.<locals>.<lambda>", "builtins.complex", "funcy.seqs.lmap", "builtins.int", "tests.test_funcs.test_autocurry_hard.<locals>.required_star", "builtins.iter", "funcy.seqs.keep", "tests.test_funcs.test_autocurry_class.<locals>.A"], 
    "tests.test_funcs.test_autocurry_named" : ["funcy.funcs.autocurry", "tests.test_funcs.test_autocurry_named.<locals>.<lambda>", "_pytest.python_api.raises"], 
    "tests.test_funcs.test_autocurry_kwargs" : ["funcy.funcs.autocurry", "tests.test_funcs.test_autocurry_kwargs.<locals>.<lambda>", "_pytest.python_api.raises"], 
    "tests.test_funcs.test_autocurry_builtin" : ["funcy.funcs.autocurry", "builtins.complex", "funcy.seqs.lmap", "builtins.int"], 
    "tests.test_funcs.test_autocurry_hard" : ["funcy.funcs.autocurry", "tests.test_funcs.test_autocurry_hard.<locals>.required_star", "builtins.iter", "builtins.list", "funcy.seqs.keep", "_pytest.python_api.raises"], 
    "tests.test_funcs.required_star" : ["funcy.seqs.lmap"], 
    "funcy.seqs.keep" : ["builtins.filter", "funcy.seqs.map"], 
    "tests.test_funcs.test_autocurry_class" : ["funcy.funcs.autocurry", "tests.test_funcs.test_autocurry_class.<locals>.A", "tests.test_funcs.test_autocurry_class.<locals>.B", "builtins.int"], 
    "tests.test_funcs.test_compose" : ["funcy.funcs.compose", "funcy.funcs.identity", "funcy.funcs.compose.<locals>.<lambda>.<locals>.<lambda>"], 
    "tests.test_funcs.test_rcompose" : ["funcy.funcs.rcompose", "funcy.funcs.identity", "funcy.funcs.compose.<locals>.<lambda>.<locals>.<lambda>"], 
    "funcy.funcs.rcompose" : ["builtins.reversed", "funcy.funcs.compose"], 
    "tests.test_funcs.test_complement" : ["funcy.funcs.complement", "funcy.funcs.compose.<locals>.<lambda>.<locals>.<lambda>"], 
    "funcy.funcs.complement" : ["funcy.funcs.compose"], 
    "tests.test_funcs.test_juxt" : ["funcy.funcs.ljuxt", "funcy.funcs.ljuxt.<locals>.<lambda>", "funcy.seqs.lmap"], 
    "funcy.funcs.ljuxt" : ["builtins.map", "builtins.list", "_operator.add", "_operator.sub"], 
    "tests.test_funcs.test_iffy" : ["funcy.funcs.iffy", "funcy.seqs.lmap", "builtins.set"], 
    "funcy.funcs.iffy" : ["funcy.funcmakers.make_pred", "funcy.funcmakers.make_func", "builtins.callable", "funcy.funcs.identity", "funcy.funcs.iffy", "builtins.bool", "set.__contains__", "funcy.strings.re_tester.<locals>.<lambda>", "str.upper", "funcy.funcmakers.make_func.<locals>.<lambda>"], 
    "tests.test_interface.test_full_py3" : ["builtins.sorted"], 
    "tests.test_interface.test_full" : ["builtins.len"], 
    "tests.test_interface.test_name_clashes" : ["funcy.seqs.count_reps", "defaultdict.items"], 
    "funcy.seqs.count_reps" : ["collections.defaultdict"], 
    "tests.test_interface.test_renames" : ["str.startswith", "builtins.set"], 
    "tests.test_interface.test_docs" : ["builtins.getattr"], 
    "tests.test_interface.test_list_iter" : ["funcy.seqs.lmap", "funcy.types.isa.<locals>.<lambda>", "funcy.seqs.map"], 
    "funcy.types.isa" : ["builtins.isinstance"], 
    "funcy.objects.cached_property.__init__" : ["builtins.getattr"], 
    "tests.test_objects.test_cached_property" : ["tests.test_objects.test_cached_property.<locals>.A"], 
    "funcy.objects.cached_property.__get__" : ["tests.test_objects.test_cached_property.<locals>.A.prop", "tests.test_objects.test_cached_readonly.<locals>.A.prop", "tests.test_objects.test_wrap_prop.<locals>.A.cached_prop"], 
    "tests.test_objects.test_cached_readonly" : ["tests.test_objects.test_cached_readonly.<locals>.A", "_pytest.python_api.raises"], 
    "funcy.objects.cached_readonly.__set__" : ["builtins.AttributeError"], 
    "funcy.objects.WrapperProp.decorator" : ["builtins.hasattr"], 
    "funcy.objects.decorator" : ["funcy.objects.wrap_prop.<locals>.decorator.<locals>.WrapperProp", "builtins.getattr", "funcy.strings.cut_prefix", "builtins.setattr"], 
    "tests.test_objects.test_wrap_prop" : ["tests.test_objects.test_wrap_prop.<locals>.A", "contextlib.suppress"], 
    "tests.test_objects.Manager.__enter__" : ["list.append"], 
    "funcy.objects.WrapperProp.__get__" : ["property.__get__", "funcy.objects.cached_property.__get__"], 
    "funcy.objects.WrapperProp.__set__" : ["property.__set__"], 
    "funcy.objects.monkey" : ["inspect.isclass", "inspect.ismodule"], 
    "funcy.strings.cut_prefix" : ["str.startswith", "builtins.len"], 
    "tests.test_objects.test_monkey" : ["tests.test_objects.test_monkey.<locals>.A", "tests.test_objects.test_monkey.<locals>.f"], 
    "tests.test_objects.f" : ["tests.test_objects.test_monkey.<locals>.A.f", "tests.test_objects.f"], 
    "tests.test_objects.test_monkey_with_name" : ["tests.test_objects.test_monkey_with_name.<locals>.A", "tests.test_objects.test_monkey_with_name.<locals>.g"], 
    "tests.test_objects.g" : ["tests.test_objects.test_monkey_with_name.<locals>.A.f"], 
    "tests.test_objects.test_monkey_property" : ["tests.test_objects.test_monkey_property.<locals>.A"], 
    "tests.test_objects.test_monkey_module" : ["tests.test_objects.test_monkey_module.<locals>.f"], 
    "tests.test_objects.test_namespace" : ["tests.test_objects.test_namespace.<locals>.tests.<lambda>"], 
    "tests.test_objects.tests.test_namespace" : ["builtins.isinstance"], 
    "tests.test_objects.test_lazy_object" : ["funcy.objects.LazyObject"], 
    "funcy.objects.LazyObject.__getattr__" : ["funcy.objects.LazyObject._setup", "builtins.getattr"], 
    "funcy.objects.LazyObject._setup" : ["tests.test_objects.test_lazy_object.<locals>.A", "object.__setattr__"], 
    "tests.test_objects.A.__init__" : ["list.append"], 
    "tests.test_seqs.test_repeatedly" : ["itertools.count", "funcy.seqs.repeatedly", "funcy.seqs.take", "builtins.next"], 
    "funcy.seqs.repeatedly" : ["itertools.repeat", "tests.test_seqs.test_repeatedly.<locals>.<lambda>"], 
    "tests.test_seqs.test_iterate" : ["funcy.seqs.iterate", "funcy.seqs.take"], 
    "funcy.seqs.iterate" : ["<whatever.WhateverCodeCall object at 0x7fb4af267fd0>"], 
    "tests.test_seqs.test_take" : ["funcy.seqs.take", "itertools.count"], 
    "tests.test_seqs.test_drop" : ["funcy.seqs.drop", "builtins.isinstance", "builtins.list", "itertools.count", "funcy.seqs.take"], 
    "funcy.seqs.drop" : ["itertools.islice"], 
    "tests.test_seqs.test_first" : ["funcy.seqs.first", "itertools.count"], 
    "funcy.seqs.first" : ["builtins.iter", "builtins.next"], 
    "tests.test_seqs.test_second" : ["funcy.seqs.second", "itertools.count"], 
    "funcy.seqs.second" : ["funcy.seqs.rest", "funcy.seqs.first"], 
    "funcy.seqs.rest" : ["funcy.seqs.drop"], 
    "tests.test_seqs.test_last" : ["funcy.seqs.last", "builtins.range"], 
    "tests.test_seqs.test_nth" : ["funcy.seqs.nth", "itertools.count"], 
    "funcy.seqs.nth" : ["itertools.islice", "builtins.next"], 
    "tests.test_seqs.test_butlast" : ["funcy.seqs.butlast", "builtins.list"], 
    "funcy.seqs.butlast" : ["builtins.iter", "builtins.next"], 
    "tests.test_seqs.test_ilen" : ["funcy.seqs.ilen", "builtins.range"], 
    "funcy.seqs.ilen" : ["itertools.count", "builtins.zip", "collections.deque", "builtins.next"], 
    "tests.test_seqs.test_lmap" : ["funcy.seqs.lmap", "builtins.set", "builtins.slice"], 
    "tests.test_seqs.test_filter" : ["funcy.seqs.lfilter", "builtins.set"], 
    "funcy.seqs.lfilter" : ["funcy.funcmakers.make_pred", "funcy.compat.lfilter"], 
    "tests.test_seqs.test_remove" : ["builtins.range", "funcy.seqs.lremove"], 
    "funcy.seqs.lremove" : ["funcy.seqs.remove", "builtins.list"], 
    "funcy.seqs.remove" : ["funcy.funcmakers.make_pred", "itertools.filterfalse"], 
    "tests.test_seqs.test_keep" : ["builtins.range", "funcy.seqs.lkeep", "funcy.seqs.mapcat"], 
    "funcy.seqs.lkeep" : ["funcy.seqs.keep", "builtins.list"], 
    "funcy.seqs.mapcat" : ["funcy.seqs.map", "chain.from_iterable"], 
    "tests.test_seqs.test_concat" : ["funcy.seqs.lconcat", "builtins.list"], 
    "funcy.seqs.lconcat" : ["itertools.chain", "builtins.list"], 
    "tests.test_seqs.test_cat" : ["funcy.seqs.lcat", "builtins.list", "builtins.range"], 
    "tests.test_seqs.test_flatten" : ["funcy.seqs.lflatten", "builtins.iter"], 
    "funcy.seqs.lflatten" : ["funcy.seqs.flatten", "builtins.list"], 
    "funcy.seqs.flatten" : ["funcy.types.isa.<locals>.<lambda>", "funcy.seqs.flatten"], 
    "tests.test_seqs.test_flatten_follow" : ["funcy.seqs.lflatten"], 
    "tests.test_seqs.test_mapcat" : ["funcy.seqs.lmapcat", "builtins.list"], 
    "funcy.seqs.lmapcat" : ["funcy.seqs.map", "funcy.seqs.lcat"], 
    "tests.test_seqs.test_interleave" : ["funcy.seqs.interleave", "builtins.list"], 
    "funcy.seqs.interleave" : ["builtins.zip", "chain.from_iterable"], 
    "tests.test_seqs.test_iterpose" : ["funcy.seqs.interpose", "builtins.list"], 
    "funcy.seqs.interpose" : ["itertools.repeat", "funcy.seqs.interleave", "funcy.seqs.drop"], 
    "tests.test_seqs.test_takewhile" : ["funcy.seqs.takewhile", "builtins.list"], 
    "funcy.seqs.takewhile" : ["itertools.takewhile", "funcy.funcmakers.make_pred"], 
    "tests.test_seqs.test_distinct" : ["funcy.seqs.ldistinct", "builtins.list"], 
    "funcy.seqs.ldistinct" : ["funcy.seqs.distinct", "builtins.list"], 
    "funcy.seqs.distinct" : ["builtins.set", "set.add", "funcy.funcmakers.make_func", "builtins.len", "operator.itemgetter(0)"], 
    "tests.test_seqs.test_split" : ["builtins.range", "funcy.seqs.split", "funcy.seqs.lmap"], 
    "funcy.seqs.split" : ["funcy.funcmakers.make_pred", "collections.deque", "funcy.seqs.split.<locals>._split", "deque.append"], 
    "funcy.seqs._split" : ["builtins.next", "deque.popleft"], 
    "tests.test_seqs.test_lsplit" : ["builtins.range", "funcy.seqs.lsplit", "_pytest.python_api.raises"], 
    "funcy.seqs.lsplit" : ["funcy.funcmakers.make_pred", "list.append", "operator.itemgetter(2)"], 
    "tests.test_seqs.test_split_at" : ["builtins.range", "funcy.seqs.lsplit_at"], 
    "funcy.seqs.lsplit_at" : ["funcy.seqs.split_at", "builtins.list"], 
    "funcy.seqs.split_at" : ["itertools.tee", "itertools.islice"], 
    "tests.test_seqs.test_split_by" : ["funcy.seqs.lsplit_by"], 
    "funcy.seqs.lsplit_by" : ["funcy.seqs.split_by", "builtins.list"], 
    "funcy.seqs.split_by" : ["itertools.tee", "funcy.seqs.takewhile", "funcy.seqs.dropwhile"], 
    "funcy.seqs.dropwhile" : ["funcy.funcmakers.make_pred", "itertools.dropwhile"], 
    "tests.test_seqs.test_group_by" : ["builtins.range", "funcy.seqs.group_by"], 
    "funcy.seqs.group_by" : ["funcy.funcmakers.make_func", "collections.defaultdict", "list.append", "funcy.strings.re_finder.<locals>.<lambda>"], 
    "tests.test_seqs.test_group_by_keys" : ["funcy.seqs.group_by_keys"], 
    "funcy.seqs.group_by_keys" : ["funcy.funcmakers.make_func", "collections.defaultdict", "funcy.strings.re_finder.<locals>.<lambda>", "list.append"], 
    "tests.test_seqs.test_group_values" : ["funcy.seqs.group_values"], 
    "funcy.seqs.group_values" : ["collections.defaultdict", "list.append"], 
    "tests.test_seqs.test_count_by" : ["builtins.range", "funcy.seqs.count_by"], 
    "funcy.seqs.count_by" : ["funcy.funcmakers.make_func", "collections.defaultdict", "funcy.strings.re_finder.<locals>.<lambda>"], 
    "tests.test_seqs.test_count_by_is_defaultdict" : ["funcy.seqs.count_by"], 
    "tests.test_seqs.test_count_reps" : ["funcy.seqs.count_reps"], 
    "tests.test_seqs.test_partition" : ["funcy.seqs.lpartition", "builtins.range", "builtins.iter", "funcy.seqs.lmap"], 
    "funcy.seqs.lpartition" : ["funcy.seqs.partition", "builtins.list"], 
    "funcy.seqs.partition" : ["funcy.seqs._cut"], 
    "funcy.seqs._cut" : ["builtins.isinstance", "funcy.seqs._cut_seq", "funcy.seqs._cut_iter"], 
    "funcy.seqs._cut_seq" : ["builtins.len", "builtins.range"], 
    "funcy.seqs._cut_iter" : ["builtins.iter", "funcy.seqs.take", "builtins.len", "itertools.islice", "list.extend", "funcy.seqs._cut_seq"], 
    "tests.test_seqs.test_chunks" : ["funcy.seqs.lchunks", "builtins.range", "builtins.iter"], 
    "funcy.seqs.lchunks" : ["funcy.seqs.chunks", "builtins.list"], 
    "funcy.seqs.chunks" : ["funcy.seqs._cut"], 
    "tests.test_seqs.test_partition_by" : ["funcy.seqs.lpartition_by"], 
    "funcy.seqs.lpartition_by" : ["funcy.seqs.partition_by", "funcy.compat.lmap"], 
    "funcy.seqs.partition_by" : ["funcy.funcmakers.make_func", "itertools.groupby"], 
    "tests.test_seqs.test_with_prev" : ["builtins.range", "funcy.seqs.with_prev", "builtins.list"], 
    "funcy.seqs.with_prev" : ["itertools.tee", "itertools.chain", "builtins.zip"], 
    "tests.test_seqs.test_with_next" : ["builtins.range", "funcy.seqs.with_next", "builtins.list"], 
    "funcy.seqs.with_next" : ["itertools.tee", "builtins.next", "itertools.chain", "builtins.zip"], 
    "tests.test_seqs.test_pairwise" : ["builtins.range", "funcy.seqs.pairwise", "builtins.list"], 
    "funcy.seqs.pairwise" : ["itertools.tee", "builtins.next", "builtins.zip"], 
    "tests.test_seqs.test_reductions" : ["funcy.seqs.lreductions"], 
    "funcy.seqs.lreductions" : ["funcy.seqs.reductions", "builtins.list"], 
    "funcy.seqs.reductions" : ["itertools.accumulate", "funcy.seqs._reductions"], 
    "funcy.seqs._reductions" : ["tests.test_seqs.test_reductions.<locals>.<lambda>"], 
    "tests.test_seqs.test_sums" : ["funcy.seqs.lsums"], 
    "funcy.seqs.lsums" : ["funcy.seqs.lreductions"], 
    "tests.test_seqs.test_without" : ["funcy.seqs.lwithout"], 
    "funcy.seqs.lwithout" : ["funcy.seqs.without", "builtins.list"], 
    "tests.test_strings.test_re_find" : ["funcy.strings.re_find"], 
    "funcy.strings.re_find" : ["funcy.strings.re_finder", "funcy.strings.re_finder.<locals>.<lambda>"], 
    "tests.test_strings.test_re_all" : ["funcy.strings.re_all"], 
    "funcy.strings.re_all" : ["funcy.strings.re_iter", "builtins.list"], 
    "funcy.strings.re_iter" : ["funcy.strings._prepare", "Pattern.finditer", "builtins.map"], 
    "tests.test_strings.test_str_join" : ["funcy.strings.str_join", "builtins.type", "builtins.isinstance"], 
    "funcy.strings.str_join" : ["funcy.strings.str_join", "builtins.map", "str.join"], 
    "tests.test_strings.test_cut_prefix" : ["funcy.strings.cut_prefix"], 
    "tests.test_strings.test_cut_suffix" : ["funcy.strings.cut_suffix"], 
    "funcy.strings.cut_suffix" : ["str.endswith", "builtins.len"], 
    "tests.test_tree.test_tree_leaves" : ["funcy.tree.ltree_leaves"], 
    "funcy.tree.ltree_leaves" : ["funcy.tree.tree_leaves", "builtins.list"], 
    "funcy.tree.tree_leaves" : ["collections.deque", "deque.pop", "builtins.iter", "funcy.types.isa.<locals>.<lambda>", "deque.append", "builtins.range", "funcy.seqs.rest"], 
    "tests.test_tree.test_tree_nodes" : ["funcy.tree.ltree_nodes"], 
    "funcy.tree.ltree_nodes" : ["funcy.tree.tree_nodes", "builtins.list"], 
    "funcy.tree.tree_nodes" : ["collections.deque", "deque.pop", "builtins.iter", "funcy.types.isa.<locals>.<lambda>", "deque.append", "builtins.range"], 
    "tests.test_types.test_iterable" : ["funcy.types.isa.<locals>.<lambda>", "builtins.iter", "builtins.range"], 
    "tests.test_types.test_is_iter" : ["builtins.iter", "funcy.types.isa.<locals>.<lambda>", "builtins.range"]
    }
    